/** @file EnumTypesTranslator.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:23 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "extjson_uci/util/EnumTypesTranslator.h"

#include <string>
#include <utility>

#include <boost/smart_ptr/make_unique.hpp>

#include "uci/base/accessorType.h"

/**  */
namespace extjson_uci {

/**  */
namespace util {

EnumTypesTranslator::TranslationMapGenerator::TranslationMapGenerator()
  : translationMap{boost::make_unique<TranslationMap>()} {
  translationMap->reserve(678);
  // use of initializer list with insert caused massive increase of compilation time with gcc
  translationMap->insert(std::make_pair(uci::type::accessorType::atomicEnergyMarkingsEnum, "AtomicEnergyMarkingsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::atomicEnergySigmaMarkingsEnum, "AtomicEnergySigmaMarkingsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::classificationEnum, "ClassificationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::declassExceptionEnum, "DeclassExceptionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::disseminationControlsEnum, "DisseminationControlsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::fGI_SourceOpenEnum, "FGI_SourceOpenEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::nonIC_MarkingsEnum, "NonIC_MarkingsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::nonUS_ControlsEnum, "NonUS_ControlsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::ownerProducerEnum, "OwnerProducerEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::releasableToEnum, "ReleasableToEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sCI_ControlsEnum, "SCI_ControlsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::accessEffortEnum, "AccessEffortEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::achievabilityEnum, "AchievabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::actionMessageOutputsEnum, "ActionMessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::actionTypeEnum, "ActionTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::activityBasisEnum, "ActivityBasisEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::activityExecutionStatusEnum, "ActivityExecutionStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::activityPlanPartsEnum, "ActivityPlanPartsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::activityStateEnum, "ActivityStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::activitySubCategoryEnum, "ActivitySubCategoryEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::activityTransitionEnum, "ActivityTransitionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::airfieldStoresEnum, "AirfieldStoresEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::airRaidStateEnum, "AirRaidStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::airSampleCapabilityEnum, "AirSampleCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::airSampleMessageOutputsEnum, "AirSampleMessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::altitudeReferenceEnum, "AltitudeReferenceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::altitudeSourceEnum, "AltitudeSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::ambiguityOrderingEnum, "AmbiguityOrderingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::aMTI_CapabilityEnum, "AMTI_CapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::aMTI_MessageOutputsEnum, "AMTI_MessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::aMTI_SubCapabilityEnum, "AMTI_SubCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::antennaTypeEnum, "AntennaTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::aO_CapabilityEnum, "AO_CapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::aO_MessageOutputsEnum, "AO_MessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::approachConditionStatusEnum, "ApproachConditionStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::approachLightingEnum, "ApproachLightingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::approvalRequirementEnum, "ApprovalRequirementEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::approvalResponseEnum, "ApprovalResponseEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::approvalStateEnum, "ApprovalStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::approvalStatusEnum, "ApprovalStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::arresterWiresEnum, "ArresterWiresEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::aS_IntegratorModeEnum, "AS_IntegratorModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::aS_IntegratorStepModeEnum, "AS_IntegratorStepModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::aS_PartialDerivativesEnum, "AS_PartialDerivativesEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::assessmentStatusEnum, "AssessmentStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::assessmentSuppressionEnum, "AssessmentSuppressionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::associatedAccessAssessmentInfoEnum, "AssociatedAccessAssessmentInfoEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::atmosphereModelEnum, "AtmosphereModelEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::autonomousActionStatusEnum, "AutonomousActionStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::autopilotModeEnum, "AutopilotModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::beamPowerModeEnum, "BeamPowerModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::beamWeightingEnum, "BeamWeightingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::behavioralChangeEnum, "BehavioralChangeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::bodyFaceEnum, "BodyFaceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::bodyReferenceEnum, "BodyReferenceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::brakingActionEnum, "BrakingActionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cannotComplyEnum, "CannotComplyEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::capabilityAvailabilityEnum, "CapabilityAvailabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::capabilityCommandStateEnum, "CapabilityCommandStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::capabilityControlInterfacesEnum, "CapabilityControlInterfacesEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::capabilityCoverageAreaBasisEnum, "CapabilityCoverageAreaBasisEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::capabilityCoverageAreaFactorEnum, "CapabilityCoverageAreaFactorEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::capabilityInitiationEnum, "CapabilityInitiationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::capabilityTypeEnum, "CapabilityTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cargoDeliveryCapabilityEnum, "CargoDeliveryCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cargoDeliverySubCapabilityEnum, "CargoDeliverySubCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cargoPackagingEnum, "CargoPackagingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::celestialBodyEphemerisSourceEnum, "CelestialBodyEphemerisSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::celestialBodyNameEnum, "CelestialBodyNameEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::characterizationProductTypeEnum, "CharacterizationProductTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::characterizationTypeEnum, "CharacterizationTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::clearIdentityValuesEnum, "ClearIdentityValuesEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::climbOptimizationEnum, "ClimbOptimizationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cOARPS_SAR_CollectionOptionsEnum, "COARPS_SAR_CollectionOptionsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cOARPS_SMTI_CollectionOptionsEnum, "COARPS_SMTI_CollectionOptionsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::collectionObjectiveEnum, "CollectionObjectiveEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::collectionPatternEnum, "CollectionPatternEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::collectionPolicyEnum, "CollectionPolicyEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cOMINT_DwellStateEnum, "COMINT_DwellStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cOMINT_DwellTypeEnum, "COMINT_DwellTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cOMINT_SubCapabilityEnum, "COMINT_SubCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commAcquisitionModeTypeEnum, "CommAcquisitionModeTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commAllocationTransitionEnum, "CommAllocationTransitionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commandProcessingStateEnum, "CommandProcessingStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commandStateEnum, "CommandStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commAssetCategoryEnum, "CommAssetCategoryEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commAssetEstimationMessageEnum, "CommAssetEstimationMessageEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commCapabilityEnum, "CommCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commCDL_LinkFallbackStateEnum, "CommCDL_LinkFallbackStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commCDL_RemoteMessageProcessingEnum, "CommCDL_RemoteMessageProcessingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commComsecModeTypeEnum, "CommComsecModeTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commComsecModeTypeRequestEnum, "CommComsecModeTypeRequestEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commConfigurationStateEnum, "CommConfigurationStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commConnectionCommandEnum, "CommConnectionCommandEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commConnectionStateEnum, "CommConnectionStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commCountermeasureSetEnum, "CommCountermeasureSetEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commDataDirectionFiltrationEnum, "CommDataDirectionFiltrationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commDataFormatEnum, "CommDataFormatEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commIFDL_AcqControlEnum, "CommIFDL_AcqControlEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commIFDL_CommModeEnum, "CommIFDL_CommModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commIFDL_FlightSizeEnum, "CommIFDL_FlightSizeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commIFDL_TxRateEnum, "CommIFDL_TxRateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commLink16_AdvanceSlotNotificationModeEnum, "CommLink16_AdvanceSlotNotificationModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commLink16_PPLI_PoolEnum, "CommLink16_PPLI_PoolEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commLink16EnhancedThroughputCodeRateEnum, "CommLink16EnhancedThroughputCodeRateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commLink16InitialEntryGroupEnum, "CommLink16InitialEntryGroupEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commLink16InterferenceProtModeEnum, "CommLink16InterferenceProtModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commLink16RangeModeEnum, "CommLink16RangeModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commLink16TransmitAntennaEnum, "CommLink16TransmitAntennaEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commLink16TransmitModeEnum, "CommLink16TransmitModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commLink16TxPackingLimitEnum, "CommLink16TxPackingLimitEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commLink16TxPowerSelectionEnum, "CommLink16TxPowerSelectionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_AircraftTypeEnum, "CommMADL_AircraftTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_DataRateTypeEnum, "CommMADL_DataRateTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_LinkStateEnum, "CommMADL_LinkStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_NetChangeOpEnum, "CommMADL_NetChangeOpEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_NetChangeStatusEnum, "CommMADL_NetChangeStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_NetLinkOpStateEnum, "CommMADL_NetLinkOpStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_NetLinkSearchModeEnum, "CommMADL_NetLinkSearchModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_NodeDataValidityEnum, "CommMADL_NodeDataValidityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_SearchTypeEnum, "CommMADL_SearchTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_TimeSlotOE_PhaseTypeEnum, "CommMADL_TimeSlotOE_PhaseTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_TimeSlotTxPhaseTypeEnum, "CommMADL_TimeSlotTxPhaseTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_TimeSourceEnum, "CommMADL_TimeSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commMADL_VoiceRxIndicatorTypeEnum, "CommMADL_VoiceRxIndicatorTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commModeEnum, "CommModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commModulationTypeEnum, "CommModulationTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commPointingAssessmentEnum, "CommPointingAssessmentEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commPointingRequestEnum, "CommPointingRequestEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commRangeModeTypeEnum, "CommRangeModeTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commReceiverStateEnum, "CommReceiverStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commRelayMessageOutputsEnum, "CommRelayMessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commRelayStateEnum, "CommRelayStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commRequestActionEnum, "CommRequestActionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commSATCOM_ServiceTypeEnum, "CommSATCOM_ServiceTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commSchedulingRequestApprovalStatusEnum, "CommSchedulingRequestApprovalStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commSchedulingRequirementStateEnum, "CommSchedulingRequirementStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commSchedulingScopeEnum, "CommSchedulingScopeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commSINCGARS_FreqModeEnum, "CommSINCGARS_FreqModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commTerminalPlanActivationStateEnum, "CommTerminalPlanActivationStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commTerminalPlanApprovalStatusEnum, "CommTerminalPlanApprovalStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::commTransmitterStateEnum, "CommTransmitterStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::communicationsImpairmentEnum, "CommunicationsImpairmentEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::componentControlInterfacesEnum, "ComponentControlInterfacesEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::componentElementStateEnum, "ComponentElementStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::componentSettingEnum, "ComponentSettingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::componentStateCommandEnum, "ComponentStateCommandEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::componentStateEnum, "ComponentStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::componentStatusRequestEnum, "ComponentStatusRequestEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::componentTypeEnum, "ComponentTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::confidenceLevelEnum, "ConfidenceLevelEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::conflictStateEnum, "ConflictStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::connectionStatusEnum, "ConnectionStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::consentEnum, "ConsentEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::constrainedPlanIncorporationEnum, "ConstrainedPlanIncorporationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::controlInterfaceEnum, "ControlInterfaceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::controlRequestEnum, "ControlRequestEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::controlTypeEnum, "ControlTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::coordinationRiskEnum, "CoordinationRiskEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::correlationIndicatorEnum, "CorrelationIndicatorEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::covarianceMatrixCategoryEnum, "CovarianceMatrixCategoryEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::coverageEffortEnum, "CoverageEffortEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::crashServiceEnum, "CrashServiceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::creationSourceEnum, "CreationSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cryptoDS101_Enum, "CryptoDS101_Enum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cryptoKeyStatusEnum, "CryptoKeyStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cryptoLoadStateEnum, "CryptoLoadStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cryptoLoadTypeEnum, "CryptoLoadTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cryptoOTAM_Enum, "CryptoOTAM_Enum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cryptoRolloverActionEnum, "CryptoRolloverActionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cryptoRolloverMethodEnum, "CryptoRolloverMethodEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cryptoRolloverStateEnum, "CryptoRolloverStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cryptoSlotGroupStateEnum, "CryptoSlotGroupStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cryptoTypeEnum, "CryptoTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cS_CapabilityEnum, "CS_CapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cS_KindEnum, "CS_KindEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cS_PostureEnum, "CS_PostureEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cS_SensorPointingEnum, "CS_SensorPointingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cS_SensorTargetingEnum, "CS_SensorTargetingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cS_SensorTypeEnum, "CS_SensorTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cSO_StateEnum, "CSO_StateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cTR_StateEnum, "CTR_StateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::cyberTypeEnum, "CyberTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::damageCategoryEnum, "DamageCategoryEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::damageCauseEnum, "DamageCauseEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::damageConfidenceEnum, "DamageConfidenceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::damagedFunctionEnum, "DamagedFunctionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::damageEstimateContentsEnum, "DamageEstimateContentsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::damageLevelEnum, "DamageLevelEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::damageObservationEnum, "DamageObservationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::damageSignificanceEnum, "DamageSignificanceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::datalinkControlStatusEnum, "DatalinkControlStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::dataPlanActivationStateEnum, "DataPlanActivationStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::dataPlanApprovalStatusEnum, "DataPlanApprovalStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::dataStoreActionEnum, "DataStoreActionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::dataUpdateRequestCategoryEnum, "DataUpdateRequestCategoryEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::defensiveJammerSystemStatusEnum, "DefensiveJammerSystemStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::defensiveJammerSystemTypeEnum, "DefensiveJammerSystemTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::depthContactEnum, "DepthContactEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::designationEnum, "DesignationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::destinationCategoryEnum, "DestinationCategoryEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::dF_ModeEnum, "DF_ModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::disseminationStatusEnum, "DisseminationStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::dLZ_RelationEnum, "DLZ_RelationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::dMPI_StateEnum, "DMPI_StateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::dMPI_StoreStateEnum, "DMPI_StoreStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::doorCommandEnum, "DoorCommandEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::doorStateEnum, "DoorStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::downloadPriorityEnum, "DownloadPriorityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::drogueCommandEnum, "DrogueCommandEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::dropRestrictionEnum, "DropRestrictionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::dVR_OperationEnum, "DVR_OperationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::dynamicImageProcessingEnum, "DynamicImageProcessingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eA_ActivationEnum, "EA_ActivationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eA_IndicatorEnum, "EA_IndicatorEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eA_MessageOutputsEnum, "EA_MessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eA_ModeEnum, "EA_ModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eA_PointingEnum, "EA_PointingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::effectMessageOutputsEnum, "EffectMessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::effectTypeEnum, "EffectTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::electronicWarfareRelationshipEnum, "ElectronicWarfareRelationshipEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::elevationScanStabilizationEnum, "ElevationScanStabilizationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::elevationVisibilityEnum, "ElevationVisibilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::emconLevelEnum, "EmconLevelEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::emissionBalanceEnum, "EmissionBalanceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::emitterUrgencyEnum, "EmitterUrgencyEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::entityBasingEnum, "EntityBasingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::entityDropPolicyEnum, "EntityDropPolicyEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::entityFusionEligibilityEnum, "EntityFusionEligibilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::entityFusionSimpleEligibilityEnum, "EntityFusionSimpleEligibilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::entityManagementRequestAuthorityEnum, "EntityManagementRequestAuthorityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::entityRemoveReasonEnum, "EntityRemoveReasonEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::entitySourceEnum, "EntitySourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::entityStatusEnum, "EntityStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::environmentEnum, "EnvironmentEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::environmentPairingEnum, "EnvironmentPairingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eOB_CorrelationTypeEnum, "EOB_CorrelationTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eP_CommandedStateEnum, "EP_CommandedStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eP_StateEnum, "EP_StateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eP_StatusEnum, "EP_StatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::ephemerisTypeEnum, "EphemerisTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::equalityExpressionEnum, "EqualityExpressionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::equipmentConditionEnum, "EquipmentConditionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eSM_ActivationEnum, "ESM_ActivationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eSM_DwellStateEnum, "ESM_DwellStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eSM_DwellTypeEnum, "ESM_DwellTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eSM_MessageOutputsEnum, "ESM_MessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eSM_SubCapabilityEnum, "ESM_SubCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::estimationMessageEnum, "EstimationMessageEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eventSeverityEnum, "EventSeverityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eW_FixEnum, "EW_FixEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eW_MeasurementEnum, "EW_MeasurementEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::eW_ParameterSourceEnum, "EW_ParameterSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::exerciseIdentityEnum, "ExerciseIdentityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::externalCommandExecutionStateEnum, "ExternalCommandExecutionStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::externalDataRequestEnum, "ExternalDataRequestEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::failureGuidanceEnum, "FailureGuidanceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::faultSeverityEnum, "FaultSeverityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::faultStateEnum, "FaultStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::fieldOfRegardTypeEnum, "FieldOfRegardTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::fileDeclassificationEnum, "FileDeclassificationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::fileTypeEnum, "FileTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::filteredUnfilteredEnum, "FilteredUnfilteredEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::fixedPointingEnum, "FixedPointingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::flightCapabilityEnum, "FlightCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::flightDeckStatusEnum, "FlightDeckStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::flightStageEnum, "FlightStageEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::fMOP_Enum, "FMOP_Enum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::focalPlaneArrayNonUniformityCorrectionOffsetEnum, "FocalPlaneArrayNonUniformityCorrectionOffsetEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::focalPlaneArrayNonUniformityCorrectionReferenceEnum, "FocalPlaneArrayNonUniformityCorrectionReferenceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::fOR_Enum, "FOR_Enum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::frameOriginEnum, "FrameOriginEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::frequencyAgilityPatternEnum, "FrequencyAgilityPatternEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::frequencyModulationVariationEnum, "FrequencyModulationVariationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::frequencyPatternPeriodicityEnum, "FrequencyPatternPeriodicityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::frequencySwitchingEnum, "FrequencySwitchingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::frequencySwitchingPatternEnum, "FrequencySwitchingPatternEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::fuelFlowModeEnum, "FuelFlowModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::fusionUpdatesEnum, "FusionUpdatesEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::gainControlMethodEnum, "GainControlMethodEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::gatewayLink16ConfigurationClassEnum, "GatewayLink16ConfigurationClassEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::gatewayLink16ConfigurationCompassQuadrantEnum, "GatewayLink16ConfigurationCompassQuadrantEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::gatewayLink16ConfigurationSideEnum, "GatewayLink16ConfigurationSideEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::gENC_CountryNameEnum, "GENC_CountryNameEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::genericUnitTypeEnum, "GenericUnitTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::geomagneticRecordApEnum, "GeomagneticRecordApEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::geomagneticRecordKpEnum, "GeomagneticRecordKpEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::gravityModelEnum, "GravityModelEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::groundTerrainTypeEnum, "GroundTerrainTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::hoseCutCommandEnum, "HoseCutCommandEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::hoseCutStatusEnum, "HoseCutStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::identificationTypeEnum, "IdentificationTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iEEE_FrequencyBandEnum, "IEEE_FrequencyBandEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iFF_ActivePassiveEnum, "IFF_ActivePassiveEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iFF_CivilMilitaryEnum, "IFF_CivilMilitaryEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iFF_LethalNonLethalEnum, "IFF_LethalNonLethalEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iFF_MessageOutputsEnum, "IFF_MessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iFF_ModeS_SupportEnum, "IFF_ModeS_SupportEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iFF_ModesEnum, "IFF_ModesEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iFF_SubCapabilityEnum, "IFF_SubCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iFF_TransponderActivityStatusEnum, "IFF_TransponderActivityStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::imagePixelDepthEnum, "ImagePixelDepthEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::imageRemapEnum, "ImageRemapEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::imageWeightEnum, "ImageWeightEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iMU_AlignmentEnum, "IMU_AlignmentEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::inclusionEnum, "InclusionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::increaseDecreaseEnum, "IncreaseDecreaseEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::incrementalChangeEnum, "IncrementalChangeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::initialStepSizeEnum, "InitialStepSizeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::integrationMethodEnum, "IntegrationMethodEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::interfacePlanTypeEnum, "InterfacePlanTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::interfaceStateEnum, "InterfaceStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::interrogationStatusEnum, "InterrogationStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iO_PortOpenCloseStateEnum, "IO_PortOpenCloseStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iO_PortTypeEnum, "IO_PortTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::iP_ProtocolEnum, "IP_ProtocolEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::jammerStationEnum, "JammerStationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::jPEG_WaveletTypeEnum, "JPEG_WaveletTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::jREAP_TimeReferenceEnum, "JREAP_TimeReferenceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::lAR_BasisEnum, "LAR_BasisEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::lAR_RelationEnum, "LAR_RelationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::lAR_WindSourceEnum, "LAR_WindSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::lateralCenterOfGravityTrendEnum, "LateralCenterOfGravityTrendEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::launchCapabilityEnum, "LaunchCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::launchPointCalculationEnum, "LaunchPointCalculationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::likelihoodEnum, "LikelihoodEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::lineProjectionEnum, "LineProjectionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::link16DepthEnum, "Link16DepthEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::link16HazardBurstEnum, "Link16HazardBurstEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::link16HazardYieldEnum, "Link16HazardYieldEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::link16SensorTypeEnum, "Link16SensorTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::lockIndicatorEnum, "LockIndicatorEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::logicalOperatorEnum, "LogicalOperatorEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::logSeverityEnum, "LogSeverityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::longitudinalCenterOfGravityTrendEnum, "LongitudinalCenterOfGravityTrendEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::lOS_MeasurementEnum, "LOS_MeasurementEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::lOS_ReferenceEnum, "LOS_ReferenceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::maxPOR_Enum, "MaxPOR_Enum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::mDF_StatusEnum, "MDF_StatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::measurementQualityEnum, "MeasurementQualityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::measurementReportSourceTypeEnum, "MeasurementReportSourceTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::measurementStatusEnum, "MeasurementStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::measurementTypeEnum, "MeasurementTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::mediaLocationStatusEnum, "MediaLocationStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::mergeEnum, "MergeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::messageDataVerificationEnum, "MessageDataVerificationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::messageElementDataTypeEnum, "MessageElementDataTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::messageModeEnum, "MessageModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::messageTypeDropRestrictionEnum, "MessageTypeDropRestrictionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::messageTypeEnum, "MessageTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::mISP_OperationalModeEnum, "MISP_OperationalModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::missileEmitterModeEnum, "MissileEmitterModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::missionCommunicationsStateEnum, "MissionCommunicationsStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::missionPlanningByCaseTriggerEnum, "MissionPlanningByCaseTriggerEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::missionStateEnum, "MissionStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::missionTraceabilityEnum, "MissionTraceabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::mobilityEnum, "MobilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::mode4CodeEnum, "Mode4CodeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::modulationEnum, "ModulationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::mTI_TargetClassEnum, "MTI_TargetClassEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::multistaticModeActivationEnum, "MultistaticModeActivationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::multistaticModeStatusEnum, "MultistaticModeStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::navigationSolutionStateEnum, "NavigationSolutionStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::negotiableOptionsEnum, "NegotiableOptionsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::networkLinkActionTypeEnum, "NetworkLinkActionTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::noiseAdaptiveThresholdStatusEnum, "NoiseAdaptiveThresholdStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::normalizationInterpolationEnum, "NormalizationInterpolationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::notificationCategoryEnum, "NotificationCategoryEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::notificationPerspectiveEnum, "NotificationPerspectiveEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::notificationSeverityEnum, "NotificationSeverityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::notificationStateEnum, "NotificationStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::nPSI_Enum, "NPSI_Enum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::oB_OperationalStatusEnum, "OB_OperationalStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::objectStateEnum, "ObjectStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::observedOperationalStatusEnum, "ObservedOperationalStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::offsetXY_Enum, "OffsetXY_Enum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::opConstraintEnum, "OpConstraintEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::opConstraintTypeEnum, "OpConstraintTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::operationalCapabilityEnum, "OperationalCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::operationalImpairmentEnum, "OperationalImpairmentEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::operationalStatusEnum, "OperationalStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::operatorContingencyActionEnum, "OperatorContingencyActionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::operatorStatusEnum, "OperatorStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::operatorUniqueNameEnum, "OperatorUniqueNameEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::opInteractionEnum, "OpInteractionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::opLineCategoryEnum, "OpLineCategoryEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::opPointEmergencyEnum, "OpPointEmergencyEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::opPointGeneralEnum, "OpPointGeneralEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::opPointHazardEnum, "OpPointHazardEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::opPointReferenceEnum, "OpPointReferenceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::opPointStationEnum, "OpPointStationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::opStateEnum, "OpStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::opZoneCategoryEnum, "OpZoneCategoryEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::opZoneFilterEnum, "OpZoneFilterEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalBreakupEnum, "OrbitalBreakupEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalConjunctionEnum, "OrbitalConjunctionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalDebrisEstimateEnum, "OrbitalDebrisEstimateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalEventEnum, "OrbitalEventEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalKinematicsSourceEnum, "OrbitalKinematicsSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalManeuverStateEnum, "OrbitalManeuverStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalManeuverTypeEnum, "OrbitalManeuverTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalModelNameEnum, "OrbitalModelNameEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalSurveillanceCapabilityEnum, "OrbitalSurveillanceCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalSurveillanceMessageOutputsEnum, "OrbitalSurveillanceMessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalSurveillanceSensorCapabilityEnum, "OrbitalSurveillanceSensorCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalSurveillanceSensorMessageOutputsEnum, "OrbitalSurveillanceSensorMessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalSurveillanceSizeDataEnum, "OrbitalSurveillanceSizeDataEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalSurveillanceSizeTypeEnum, "OrbitalSurveillanceSizeTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitalSurveillanceSubCapabilityEnum, "OrbitalSurveillanceSubCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitAltitudeEnum, "OrbitAltitudeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitChangeCapabilityEnum, "OrbitChangeCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitClassEnum, "OrbitClassEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitConjunctionAssessmentEnum, "OrbitConjunctionAssessmentEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitEnum, "OrbitEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitKinematicsEnum, "OrbitKinematicsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitPlanManeuverTypeEnum, "OrbitPlanManeuverTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitPlanPartsEnum, "OrbitPlanPartsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitQualitativeEnum, "OrbitQualitativeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitRegimeEnum, "OrbitRegimeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orbitValidationErrorEnum, "OrbitValidationErrorEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::orderOfBattleEnum, "OrderOfBattleEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::packageOperationEnum, "PackageOperationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pairIdentifierEnum, "PairIdentifierEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pairingRelationshipEnum, "PairingRelationshipEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::parityTypeEnum, "ParityTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::passiveActiveEnum, "PassiveActiveEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pathIdentificationEnum, "PathIdentificationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pathSegmentSourceEnum, "PathSegmentSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pathTypeEnum, "PathTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planActivationCommandEnum, "PlanActivationCommandEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planActivationStateEnum, "PlanActivationStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planChangeableConstraintsEnum, "PlanChangeableConstraintsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planConfigurationActivationCommandEnum, "PlanConfigurationActivationCommandEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planConfigurationStateEnum, "PlanConfigurationStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planConstraintUsageEnum, "PlanConstraintUsageEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planExecutionStateEnum, "PlanExecutionStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planInitiationSourceEnum, "PlanInitiationSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planningDataSourceEnum, "PlanningDataSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planningInterfaceEnum, "PlanningInterfaceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planningResultEnum, "PlanningResultEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planningStateEnum, "PlanningStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planningTriggerSourceEnum, "PlanningTriggerSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planPolicyProcessingEnum, "PlanPolicyProcessingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planSimultaneityEnum, "PlanSimultaneityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planTypeEnum, "PlanTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::planValidationStateEnum, "PlanValidationStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::platformFunctionAirEnum, "PlatformFunctionAirEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::platformFunctionEW_Enum, "PlatformFunctionEW_Enum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::platformFunctionGroundEnum, "PlatformFunctionGroundEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::platformFunctionSeaSurfaceEnum, "PlatformFunctionSeaSurfaceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pMOP_Enum, "PMOP_Enum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pMOP_SequenceEnum, "PMOP_SequenceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_CapabilityEnum, "PO_CapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_CollectionConstraintsEnum, "PO_CollectionConstraintsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_EnvironmentEnum, "PO_EnvironmentEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_FilterEnum, "PO_FilterEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_FPA_ChannelOperationEnum, "PO_FPA_ChannelOperationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_GimbalOrientationReferenceFrameEnum, "PO_GimbalOrientationReferenceFrameEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_LockPersistenceEnum, "PO_LockPersistenceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_MessageOutputsEnum, "PO_MessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_ProcessingStageTypeEnum, "PO_ProcessingStageTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_TechniqueEnum, "PO_TechniqueEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_TrackCapabilityTypeEnum, "PO_TrackCapabilityTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_TrackCommandEnum, "PO_TrackCommandEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pO_TrackModeEnum, "PO_TrackModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pointingControlModeEnum, "PointingControlModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pointingControlModeStatusEnum, "PointingControlModeStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pointingTypeEnum, "PointingTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pointingVectorCommandTypeEnum, "PointingVectorCommandTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pointingVectorStateEnum, "PointingVectorStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pointingVectorStatusEnum, "PointingVectorStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pointTrackEnum, "PointTrackEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::polarizationEnum, "PolarizationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::polarizationPortEnum, "PolarizationPortEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::polarizationSenseEnum, "PolarizationSenseEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::positionModeEnum, "PositionModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::positionTimeQualityEnum, "PositionTimeQualityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pressureStateEnum, "PressureStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pRI_AgilePatternEnum, "PRI_AgilePatternEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pRI_MeasurementEnum, "PRI_MeasurementEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pRI_SwitchingPatternEnum, "PRI_SwitchingPatternEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pRI_TypeEnum, "PRI_TypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::prioritizationListEnum, "PrioritizationListEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::processingStatusEnum, "ProcessingStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::processingTypeEnum, "ProcessingTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::productClassificationRequestEnum, "ProductClassificationRequestEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::productManagementTaskStateEnum, "ProductManagementTaskStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::productProcessingFunctionMessageOutputsEnum, "ProductProcessingFunctionMessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::productTypeEnum, "ProductTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::pushContentsEnum, "PushContentsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::qualityOfObsEnum, "QualityOfObsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::r_BarApproachEnum, "R_BarApproachEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::radarAltimeterCapabilityEnum, "RadarAltimeterCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::radarAltimeterMessageOutputsEnum, "RadarAltimeterMessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::radarAltimeterSubCapabilityEnum, "RadarAltimeterSubCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::radarBeamPersistenceEnum, "RadarBeamPersistenceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::radarBeamTypeEnum, "RadarBeamTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::radarChannelIndicatorEnum, "RadarChannelIndicatorEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::radarModeEnum, "RadarModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::radarSpoilTypeEnum, "RadarSpoilTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::radarWeightingFunctionsEnum, "RadarWeightingFunctionsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::radiationModeEnum, "RadiationModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::rDMA_DataTransferServiceEnum, "RDMA_DataTransferServiceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::rDMA_EndpointTypeEnum, "RDMA_EndpointTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::rDMA_ProviderEnum, "RDMA_ProviderEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::rECCE_SystemEnum, "RECCE_SystemEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::referenceCapabilityOutputsEnum, "ReferenceCapabilityOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::refuelCapabilityEnum, "RefuelCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::refuelLocationEnum, "RefuelLocationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::relativeDirectionEnum, "RelativeDirectionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::repeatEnum, "RepeatEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::requestProcessingStateEnum, "RequestProcessingStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::requestSourceEnum, "RequestSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::requestStateEnum, "RequestStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::requirementDependencyEnum, "RequirementDependencyEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::requirementExecutionStateEnum, "RequirementExecutionStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::requirementObjectEnum, "RequirementObjectEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::requirementPlanningStateEnum, "RequirementPlanningStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::requirementTimingEnum, "RequirementTimingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::requirementUsageEnum, "RequirementUsageEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::resourceAllocationStateEnum, "ResourceAllocationStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::resourceAllocationStatusEnum, "ResourceAllocationStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::resourceAllocatorCommandControlEnum, "ResourceAllocatorCommandControlEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::responseTypeEnum, "ResponseTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::rF_ReportStateEnum, "RF_ReportStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::rF_SignalContentEnum, "RF_SignalContentEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::rF_TypeEnum, "RF_TypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::riskPrioritizationEnum, "RiskPrioritizationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::rotationEnum, "RotationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::routeEventEnum, "RouteEventEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::routeValidationErrorEnum, "RouteValidationErrorEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::runwayStatusEnum, "RunwayStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sAM_ModeEnum, "SAM_ModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sAR_CapabilityEnum, "SAR_CapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sAR_CollectionReasonEnum, "SAR_CollectionReasonEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sAR_EllipticityPolicyEnum, "SAR_EllipticityPolicyEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sAR_ImagingPlaneEnum, "SAR_ImagingPlaneEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sAR_MessageOutputsEnum, "SAR_MessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sAR_SubCapabilityEnum, "SAR_SubCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sAR_WaveformSelectionEnum, "SAR_WaveformSelectionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::satelliteOperationsChangesCharacterizationEnum, "SatelliteOperationsChangesCharacterizationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::scanDirectionalityEnum, "ScanDirectionalityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::scanMechanicsEnum, "ScanMechanicsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::scanPlaneEnum, "ScanPlaneEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::scanTypeEnum, "ScanTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::schedulingCriticalityEnum, "SchedulingCriticalityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sDA_SpecialInstructionsEnum, "SDA_SpecialInstructionsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::securityAccessEnum, "SecurityAccessEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::securityAuditManagementEnum, "SecurityAuditManagementEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::securityAuthenticationEnum, "SecurityAuthenticationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::securityEventOutcomeEnum, "SecurityEventOutcomeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::securityFileManagementEnum, "SecurityFileManagementEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::securityIntegrityEnum, "SecurityIntegrityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::securityIntrusionDetectionEnum, "SecurityIntrusionDetectionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::securityKeyManagementEnum, "SecurityKeyManagementEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::securityPolicyManagementEnum, "SecurityPolicyManagementEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::securitySanitizationEnum, "SecuritySanitizationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::securitySystemEnum, "SecuritySystemEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sensingTypeEnum, "SensingTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sensorCategoryEnum, "SensorCategoryEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sensorFunctionalCollectionsEnum, "SensorFunctionalCollectionsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sensorFunctionalProcessingEnum, "SensorFunctionalProcessingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sensorReferencedCoverageAreaReferenceEnum, "SensorReferencedCoverageAreaReferenceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sensorSpectrumEnum, "SensorSpectrumEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sensorTrackingAltitudesEnum, "SensorTrackingAltitudesEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sensorTypeEnum, "SensorTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::serviceLifecycleCommandStatusEnum, "ServiceLifecycleCommandStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::serviceLifecycleStateEnum, "ServiceLifecycleStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::serviceRegistrationPurposeEnum, "ServiceRegistrationPurposeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::serviceRegistrationStatusEnum, "ServiceRegistrationStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::serviceSettingEnum, "ServiceSettingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::serviceStateEnum, "ServiceStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::signalGeolocationControlEnum, "SignalGeolocationControlEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::signalGeolocationMethodEnum, "SignalGeolocationMethodEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::signalLocationEnum, "SignalLocationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::signalMeasurementFlagEnum, "SignalMeasurementFlagEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::signalMeasurementMethodEnum, "SignalMeasurementMethodEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::signalReportStateEnum, "SignalReportStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::signalTypeEnum, "SignalTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::siteEnum, "SiteEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::siteTypeEnum, "SiteTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::skysearchModeEnum, "SkysearchModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sMTI_CapabilityEnum, "SMTI_CapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sMTI_MessageOutputsEnum, "SMTI_MessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sMTI_SubCapabilityEnum, "SMTI_SubCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sOB_CorrelationTypeEnum, "SOB_CorrelationTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sOB_MissionTypeEnum, "SOB_MissionTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sOB_RecordEnum, "SOB_RecordEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::solarFluxRecordEnum, "SolarFluxRecordEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::solarRadiationPressureModelEnum, "SolarRadiationPressureModelEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::spaceObjectEnum, "SpaceObjectEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::specialIdentityEnum, "SpecialIdentityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::speedOptimizationEnum, "SpeedOptimizationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::speedReferenceEnum, "SpeedReferenceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sTANAG_4607_PlatformTypeEnum, "STANAG_4607_PlatformTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::sTANAG_4607_TargetClassificationEnum, "STANAG_4607_TargetClassificationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::standardIdentityEnum, "StandardIdentityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::stateTransitionStatusEnum, "StateTransitionStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::storeCategoryEnum, "StoreCategoryEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::storeFlightModeEnum, "StoreFlightModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::storeJettisonOptionsEnum, "StoreJettisonOptionsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::storeStateEnum, "StoreStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::strikeMessageOutputsEnum, "StrikeMessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::strikeStateEnum, "StrikeStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::submarineConfidenceLevelEnum, "SubmarineConfidenceLevelEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::subPlanTypeEnum, "SubPlanTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::subsystemBIT_ControlInterfacesEnum, "SubsystemBIT_ControlInterfacesEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::subsystemBIT_ResultEnum, "SubsystemBIT_ResultEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::subsystemCalibrationControlInterfacesEnum, "SubsystemCalibrationControlInterfacesEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::subsystemCalibrationResultEnum, "SubsystemCalibrationResultEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::subsystemEraseCommandEnum, "SubsystemEraseCommandEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::subsystemMaintenanceCommandEnum, "SubsystemMaintenanceCommandEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::subsystemMaintenanceControlInterfacesEnum, "SubsystemMaintenanceControlInterfacesEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::subsystemMaintenanceResultStatusEnum, "SubsystemMaintenanceResultStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::subsystemSettingEnum, "SubsystemSettingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::subsystemStateEnum, "SubsystemStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::supportCapabilityTypeEnum, "SupportCapabilityTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::supportedFunctionEnum, "SupportedFunctionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::surfaceTypeEnum, "SurfaceTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::swapEnum, "SwapEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::systemContingencyLevelEnum, "SystemContingencyLevelEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::systemDeploymentEnum, "SystemDeploymentEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::systemSourceEnum, "SystemSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::systemStateEnum, "SystemStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::tacticalOrderCapabilityEnum, "TacticalOrderCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::tacticalPlanningAndExecutionEnum, "TacticalPlanningAndExecutionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::tailConeLightEnum, "TailConeLightEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::targetDefensesEnum, "TargetDefensesEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::targetHardnessEnum, "TargetHardnessEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::targetTypeEnum, "TargetTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::taskTypeEnum, "TaskTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::tCP_SessionStatusEnum, "TCP_SessionStatusEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::temperatureStateEnum, "TemperatureStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::textReportActionEnum, "TextReportActionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::threadAvailabiltyEnum, "ThreadAvailabiltyEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::threatCapabilityEnum, "ThreatCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::threatEnum, "ThreatEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::threatPostureEnum, "ThreatPostureEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::threatWeaponEnum, "ThreatWeaponEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::timeFunctionEnum, "TimeFunctionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::trackModeEnum, "TrackModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::turnPointTypeEnum, "TurnPointTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::typeOfDependencyEnum, "TypeOfDependencyEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::uncertaintyEnum, "UncertaintyEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::unitTypeEnum, "UnitTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::v_BarApproachEnum, "V_BarApproachEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::vehicleActionEnum, "VehicleActionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::vehicleControlStrategyEnum, "VehicleControlStrategyEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::vehicleLossOfLinkProcessingEnum, "VehicleLossOfLinkProcessingEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::vehicleSurvivabilityModeEnum, "VehicleSurvivabilityModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::verticalCenterOfGravityTrendEnum, "VerticalCenterOfGravityTrendEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::videoBlockSizeEnum, "VideoBlockSizeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::videoChromaSubsampleEnum, "VideoChromaSubsampleEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::videoEncoderCompressionModeEnum, "VideoEncoderCompressionModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::vulnerabilityTypeEnum, "VulnerabilityTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::waypointTypeEnum, "WaypointTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weaponFuzeModeEnum, "WeaponFuzeModeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weaponFuzePositionEnum, "WeaponFuzePositionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weaponTypeEnum, "WeaponTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherCloudCoverEnum, "WeatherCloudCoverEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherDescriptionEnum, "WeatherDescriptionEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherKindEnum, "WeatherKindEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherPrecipitationAmplificationEnum, "WeatherPrecipitationAmplificationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherPrecipitationEnum, "WeatherPrecipitationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherRadarCapabilityEnum, "WeatherRadarCapabilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherRadarMessageOutputsEnum, "WeatherRadarMessageOutputsEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherReportTypeEnum, "WeatherReportTypeEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherRoadStateEnum, "WeatherRoadStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherSeaStateAmplificationEnum, "WeatherSeaStateAmplificationEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherSeaStateEnum, "WeatherSeaStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherSeverityEnum, "WeatherSeverityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherSourceEnum, "WeatherSourceEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherTerrainStateEnum, "WeatherTerrainStateEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherVisibilityEnum, "WeatherVisibilityEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weatherWarningEnum, "WeatherWarningEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::weekdayEnum, "WeekdayEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::yearOfEquinoxEnum, "YearOfEquinoxEnum"));
  translationMap->insert(std::make_pair(uci::type::accessorType::zoneRelationEnum, "ZoneRelationEnum"));
}

const EnumTypesTranslator::TranslationMap& EnumTypesTranslator::getTranslationMap() {
  static const TranslationMapGenerator translationMapGenerator;
  return translationMapGenerator.getMap();
}

std::string EnumTypesTranslator::translateFromAccessorType(const uci::base::accessorType::AccessorType accessorType) {
  const auto accessorInMap = getTranslationMap().find(accessorType);
  return ((accessorInMap != getTranslationMap().end()) ? accessorInMap->second : "");
}

} // namespace util

} // namespace extjson_uci

