/** @file Link16DataStoreManagementType.h
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:07 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#ifndef UCI_TYPE_LINK16DATASTOREMANAGEMENTTYPE_H
#define UCI_TYPE_LINK16DATASTOREMANAGEMENTTYPE_H

#include "uci/base/Accessor.h"
#include "uci/base/BoundedList.h"
#include "uci/base/export.h"
#include "uci/type/Link16AmplificationDataStoreActionType.h"
#include "uci/type/Link16EW_DataStoreActionType.h"
#include "uci/type/Link16EngagementStatusDataStoreActionType.h"
#include "uci/type/Link16FriendlyTargetofInterestDataStoreActionType.h"
#include "uci/type/Link16ReferencePointDataStoreActionType.h"
#include "uci/type/Link16TextReportDataStoreActionType.h"
#include "uci/type/Link16ThreatWarningDataStoreActionType.h"

/** The namespace in which all UCI data types are declared */
namespace uci {

/** The namespace in which all base data types are declared */
namespace base {

class AbstractServiceBusConnection;

} // namespace base
} // namespace uci

/** The namespace in which all UCI data types are declared */
namespace uci {

/** The namespace in which all generated data types are declared */
namespace type {

/** Contains aggregated information about the engagement status, reference point data, and other relevant information to
  * Link 16 Data Stores.
  */
class Link16DataStoreManagementType : public virtual uci::base::Accessor {
public:

  /** This method constructs a new Link16DataStoreManagementType.
    *
    * @param abstractServiceBusConnection The pointer to the Abstract Service Bus Connection that provides the support
    *      required to create objects.
    * @return The newly contructed Link16DataStoreManagementType.
    */
  static UCI_EXPORT Link16DataStoreManagementType& create(uci::base::AbstractServiceBusConnection* abstractServiceBusConnection = NULL);

  /** This method constructs a new Link16DataStoreManagementType initializing the data accessed by the new
    * Link16DataStoreManagementType using the data accessed by the specified Link16DataStoreManagementType (cloning).
    *
    * @param accessor The Link16DataStoreManagementType that provides access to the data that is to be used to initialize
    *      the data accessed by the new created Link16DataStoreManagementType.
    * @param abstractServiceBusConnection The pointer to the Abstract Service Bus Connection that provides the support
    *      required to create objects.
    * @return The newly contructed Link16DataStoreManagementType.
    */
  static UCI_EXPORT Link16DataStoreManagementType& create(const Link16DataStoreManagementType& accessor, uci::base::AbstractServiceBusConnection* abstractServiceBusConnection = NULL);

  /** This method destroys the specified Link16DataStoreManagementType. Use of the specified accessor after it has been
    * destroyed will result in undefined behavior.
    *
    * @param accessor The Link16DataStoreManagementType that is to be destroyed.
    */
  static UCI_EXPORT void destroy(Link16DataStoreManagementType& accessor);

  /** Returns this accessor's type constant, i.e. link16DataStoreManagementType.
    *
    * @return This accessor's type constant, i.e. link16DataStoreManagementType.
    */
  virtual uci::base::accessorType::AccessorType getAccessorType() const noexception {
    return uci::type::accessorType::link16DataStoreManagementType;
  }

  /** Returns the version that was initialized from the uci:version attribute of Link16DataStoreManagementType.
    *
    * @return The version that was initialized from the uci:version attribute of Link16DataStoreManagementType.
    */
  static std::string getUCITypeVersion() {
    return "001.000.001.000";
  }

  /** Initializes the contents of this accessor by copying the contents of the specified accessor.
    *
    * @param accessor The accessor whose contents are to be used to initialize the contents of this accessor.
    */
  virtual void copy(const Link16DataStoreManagementType& accessor) = 0;

  /** Contains the Data Store Action and the UCI ID that correspond to Display Relationships. [Occurrences: Minimum: 0;
    * Maximum: MAX_LENGTH]
    */
  typedef uci::base::BoundedList<uci::type::Link16AmplificationDataStoreActionType, uci::type::accessorType::link16AmplificationDataStoreActionType> AmplificationDataStoreAction;

  /** Contains the Data Store Action and the ID that corresponds to Display Relationships. [Occurrences: Minimum: 0;
    * Maximum: MAX_LENGTH]
    */
  typedef uci::base::BoundedList<uci::type::Link16EngagementStatusDataStoreActionType, uci::type::accessorType::link16EngagementStatusDataStoreActionType> EngagementStatusDataStoreAction;

  /** Contains the Data Store Action and the IDs of the Entity and the Signal Report. [Occurrences: Minimum: 0; Maximum:
    * MAX_LENGTH]
    */
  typedef uci::base::BoundedList<uci::type::Link16EW_DataStoreActionType, uci::type::accessorType::link16EW_DataStoreActionType> EW_DataStoreAction;

  /** Contains the IDs of the OpPoint, OpLine, OpZone, Entity, and Subsystem. [Occurrences: Minimum: 0; Maximum:
    * MAX_LENGTH]
    */
  typedef uci::base::BoundedList<uci::type::Link16FriendlyTargetofInterestDataStoreActionType, uci::type::accessorType::link16FriendlyTargetofInterestDataStoreActionType> FriendlyTargetofInterestDataStoreAction;

  /** Contains the Data Store Action and the IDs of the OpLine, OpPoint, and OpZone. [Occurrences: Minimum: 0; Maximum:
    * MAX_LENGTH]
    */
  typedef uci::base::BoundedList<uci::type::Link16ReferencePointDataStoreActionType, uci::type::accessorType::link16ReferencePointDataStoreActionType> ReferencePointDataStoreAction;

  /** Contains the Data Store Actions and the DisplayRelationship IDs. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  typedef uci::base::BoundedList<uci::type::Link16ThreatWarningDataStoreActionType, uci::type::accessorType::link16ThreatWarningDataStoreActionType> ThreatWarningDataStoreAction;

  /** Contains the Data Store Actions and the UCI IDs that correspond to Operator Notifications. [Occurrences: Minimum: 0;
    * Maximum: MAX_LENGTH]
    */
  typedef uci::base::BoundedList<uci::type::Link16TextReportDataStoreActionType, uci::type::accessorType::link16TextReportDataStoreActionType> TextReportDataStoreAction;

  /** Returns a const reference to the bounded list identified by AmplificationDataStoreAction.
    *
    * @return A const reference to the bounded list identified by AmplificationDataStoreAction.
    */
  virtual const uci::type::Link16DataStoreManagementType::AmplificationDataStoreAction& getAmplificationDataStoreAction() const = 0;

  /** Returns a reference to the bounded list identified by AmplificationDataStoreAction.
    *
    * @return A reference to the bounded list identified by AmplificationDataStoreAction.
    */
  virtual uci::type::Link16DataStoreManagementType::AmplificationDataStoreAction& getAmplificationDataStoreAction() = 0;

  /** Sets the bounded list identified by AmplificationDataStoreAction.
    *
    * @param value The bounded list whose contents are to be used to set the value of the bounded list accessed by this
    *      accessor.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::Link16DataStoreManagementType& setAmplificationDataStoreAction(const uci::type::Link16DataStoreManagementType::AmplificationDataStoreAction& value) = 0;

  /** Returns a const reference to the bounded list identified by EngagementStatusDataStoreAction.
    *
    * @return A const reference to the bounded list identified by EngagementStatusDataStoreAction.
    */
  virtual const uci::type::Link16DataStoreManagementType::EngagementStatusDataStoreAction& getEngagementStatusDataStoreAction() const = 0;

  /** Returns a reference to the bounded list identified by EngagementStatusDataStoreAction.
    *
    * @return A reference to the bounded list identified by EngagementStatusDataStoreAction.
    */
  virtual uci::type::Link16DataStoreManagementType::EngagementStatusDataStoreAction& getEngagementStatusDataStoreAction() = 0;

  /** Sets the bounded list identified by EngagementStatusDataStoreAction.
    *
    * @param value The bounded list whose contents are to be used to set the value of the bounded list accessed by this
    *      accessor.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::Link16DataStoreManagementType& setEngagementStatusDataStoreAction(const uci::type::Link16DataStoreManagementType::EngagementStatusDataStoreAction& value) = 0;

  /** Returns a const reference to the bounded list identified by EW_DataStoreAction.
    *
    * @return A const reference to the bounded list identified by EW_DataStoreAction.
    */
  virtual const uci::type::Link16DataStoreManagementType::EW_DataStoreAction& getEW_DataStoreAction() const = 0;

  /** Returns a reference to the bounded list identified by EW_DataStoreAction.
    *
    * @return A reference to the bounded list identified by EW_DataStoreAction.
    */
  virtual uci::type::Link16DataStoreManagementType::EW_DataStoreAction& getEW_DataStoreAction() = 0;

  /** Sets the bounded list identified by EW_DataStoreAction.
    *
    * @param value The bounded list whose contents are to be used to set the value of the bounded list accessed by this
    *      accessor.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::Link16DataStoreManagementType& setEW_DataStoreAction(const uci::type::Link16DataStoreManagementType::EW_DataStoreAction& value) = 0;

  /** Returns a const reference to the bounded list identified by FriendlyTargetofInterestDataStoreAction.
    *
    * @return A const reference to the bounded list identified by FriendlyTargetofInterestDataStoreAction.
    */
  virtual const uci::type::Link16DataStoreManagementType::FriendlyTargetofInterestDataStoreAction& getFriendlyTargetofInterestDataStoreAction() const = 0;

  /** Returns a reference to the bounded list identified by FriendlyTargetofInterestDataStoreAction.
    *
    * @return A reference to the bounded list identified by FriendlyTargetofInterestDataStoreAction.
    */
  virtual uci::type::Link16DataStoreManagementType::FriendlyTargetofInterestDataStoreAction& getFriendlyTargetofInterestDataStoreAction() = 0;

  /** Sets the bounded list identified by FriendlyTargetofInterestDataStoreAction.
    *
    * @param value The bounded list whose contents are to be used to set the value of the bounded list accessed by this
    *      accessor.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::Link16DataStoreManagementType& setFriendlyTargetofInterestDataStoreAction(const uci::type::Link16DataStoreManagementType::FriendlyTargetofInterestDataStoreAction& value) = 0;

  /** Returns a const reference to the bounded list identified by ReferencePointDataStoreAction.
    *
    * @return A const reference to the bounded list identified by ReferencePointDataStoreAction.
    */
  virtual const uci::type::Link16DataStoreManagementType::ReferencePointDataStoreAction& getReferencePointDataStoreAction() const = 0;

  /** Returns a reference to the bounded list identified by ReferencePointDataStoreAction.
    *
    * @return A reference to the bounded list identified by ReferencePointDataStoreAction.
    */
  virtual uci::type::Link16DataStoreManagementType::ReferencePointDataStoreAction& getReferencePointDataStoreAction() = 0;

  /** Sets the bounded list identified by ReferencePointDataStoreAction.
    *
    * @param value The bounded list whose contents are to be used to set the value of the bounded list accessed by this
    *      accessor.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::Link16DataStoreManagementType& setReferencePointDataStoreAction(const uci::type::Link16DataStoreManagementType::ReferencePointDataStoreAction& value) = 0;

  /** Returns a const reference to the bounded list identified by ThreatWarningDataStoreAction.
    *
    * @return A const reference to the bounded list identified by ThreatWarningDataStoreAction.
    */
  virtual const uci::type::Link16DataStoreManagementType::ThreatWarningDataStoreAction& getThreatWarningDataStoreAction() const = 0;

  /** Returns a reference to the bounded list identified by ThreatWarningDataStoreAction.
    *
    * @return A reference to the bounded list identified by ThreatWarningDataStoreAction.
    */
  virtual uci::type::Link16DataStoreManagementType::ThreatWarningDataStoreAction& getThreatWarningDataStoreAction() = 0;

  /** Sets the bounded list identified by ThreatWarningDataStoreAction.
    *
    * @param value The bounded list whose contents are to be used to set the value of the bounded list accessed by this
    *      accessor.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::Link16DataStoreManagementType& setThreatWarningDataStoreAction(const uci::type::Link16DataStoreManagementType::ThreatWarningDataStoreAction& value) = 0;

  /** Returns a const reference to the bounded list identified by TextReportDataStoreAction.
    *
    * @return A const reference to the bounded list identified by TextReportDataStoreAction.
    */
  virtual const uci::type::Link16DataStoreManagementType::TextReportDataStoreAction& getTextReportDataStoreAction() const = 0;

  /** Returns a reference to the bounded list identified by TextReportDataStoreAction.
    *
    * @return A reference to the bounded list identified by TextReportDataStoreAction.
    */
  virtual uci::type::Link16DataStoreManagementType::TextReportDataStoreAction& getTextReportDataStoreAction() = 0;

  /** Sets the bounded list identified by TextReportDataStoreAction.
    *
    * @param value The bounded list whose contents are to be used to set the value of the bounded list accessed by this
    *      accessor.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::Link16DataStoreManagementType& setTextReportDataStoreAction(const uci::type::Link16DataStoreManagementType::TextReportDataStoreAction& value) = 0;

protected:

  /** The constructor [only available to derived classes]. */
  Link16DataStoreManagementType() {
  }

  /** The destructor [only available to derived classes]. */
  ~Link16DataStoreManagementType() {
  }

  /** The copy constructor [only available to derived classes].
    *
    * @param rhs The Link16DataStoreManagementType to copy from.
    */
  Link16DataStoreManagementType(const Link16DataStoreManagementType& rhs) {
    (void)rhs;
  }

  /** The assignment operator. Sets the contents of this Link16DataStoreManagementType to the contents of the
    * Link16DataStoreManagementType on the right hand side (rhs) of the assignment operator [only available to derived
    * classes].
    *
    * @param rhs The Link16DataStoreManagementType on the right hand side (rhs) of the assignment operator whose contents
    *      are used to set the contents of this Link16DataStoreManagementType.
    * @return A reference to this Link16DataStoreManagementType.
    */
  Link16DataStoreManagementType& operator=(const Link16DataStoreManagementType& rhs) {
    (void)rhs;

    return *this;
  }

};

} // namespace type
} // namespace uci

#endif // UCI_TYPE_LINK16DATASTOREMANAGEMENTTYPE_H

