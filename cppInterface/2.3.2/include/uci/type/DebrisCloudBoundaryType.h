/** @file DebrisCloudBoundaryType.h
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:06 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#ifndef UCI_TYPE_DEBRISCLOUDBOUNDARYTYPE_H
#define UCI_TYPE_DEBRISCLOUDBOUNDARYTYPE_H

#include "../base/Accessor.h"
#include "../base/BoundedList.h"
#include "../base/export.h"
#include "OrbitalKinematicsTLE_SV_Type.h"
#include "PercentType.h"

/** The namespace in which all UCI data types are declared */
namespace uci {

/** The namespace in which all base data types are declared */
namespace base {

class AbstractServiceBusConnection;

} // namespace base
} // namespace uci

/** The namespace in which all UCI data types are declared */
namespace uci {

/** The namespace in which all generated data types are declared */
namespace type {

/** Indicates the output data that defines the boundary of the orbital debris cloud. */
class DebrisCloudBoundaryType : public virtual uci::base::Accessor {
public:

  /** This method constructs a new DebrisCloudBoundaryType.
    *
    * @param abstractServiceBusConnection The pointer to the Abstract Service Bus Connection that provides the support
    *      required to create objects.
    * @return The newly contructed DebrisCloudBoundaryType.
    */
  static UCI_EXPORT DebrisCloudBoundaryType& create(uci::base::AbstractServiceBusConnection* abstractServiceBusConnection = NULL);

  /** This method constructs a new DebrisCloudBoundaryType initializing the data accessed by the new
    * DebrisCloudBoundaryType using the data accessed by the specified DebrisCloudBoundaryType (cloning).
    *
    * @param accessor The DebrisCloudBoundaryType that provides access to the data that is to be used to initialize the
    *      data accessed by the new created DebrisCloudBoundaryType.
    * @param abstractServiceBusConnection The pointer to the Abstract Service Bus Connection that provides the support
    *      required to create objects.
    * @return The newly contructed DebrisCloudBoundaryType.
    */
  static UCI_EXPORT DebrisCloudBoundaryType& create(const DebrisCloudBoundaryType& accessor, uci::base::AbstractServiceBusConnection* abstractServiceBusConnection = NULL);

  /** This method destroys the specified DebrisCloudBoundaryType. Use of the specified accessor after it has been destroyed
    * will result in undefined behavior.
    *
    * @param accessor The DebrisCloudBoundaryType that is to be destroyed.
    */
  static UCI_EXPORT void destroy(DebrisCloudBoundaryType& accessor);

  /** Returns this accessor's type constant, i.e. debrisCloudBoundaryType.
    *
    * @return This accessor's type constant, i.e. debrisCloudBoundaryType.
    */
  virtual uci::base::accessorType::AccessorType getAccessorType() const noexception {
    return uci::type::accessorType::debrisCloudBoundaryType;
  }

  /** Returns the version that was initialized from the uci:version attribute of DebrisCloudBoundaryType.
    *
    * @return The version that was initialized from the uci:version attribute of DebrisCloudBoundaryType.
    */
  static std::string getUCITypeVersion() {
    return "002.000.001.000";
  }

  /** Initializes the contents of this accessor by copying the contents of the specified accessor.
    *
    * @param accessor The accessor whose contents are to be used to initialize the contents of this accessor.
    */
  virtual void copy(const DebrisCloudBoundaryType& accessor) = 0;

  /** Indicates the points around the debris cloud that represents the boundary of the cloud. These points are represented
    * in either state vector or element set form. [Occurrences: Minimum: 1; Maximum: MAX_LENGTH]
    */
  typedef uci::base::BoundedList<uci::type::OrbitalKinematicsTLE_SV_Type, uci::type::accessorType::orbitalKinematicsTLE_SV_Type> CloudBoundaryPoints;

  /** Returns a const reference to the bounded list identified by CloudBoundaryPoints.
    *
    * @return A const reference to the bounded list identified by CloudBoundaryPoints.
    */
  virtual const uci::type::DebrisCloudBoundaryType::CloudBoundaryPoints& getCloudBoundaryPoints() const = 0;

  /** Returns a reference to the bounded list identified by CloudBoundaryPoints.
    *
    * @return A reference to the bounded list identified by CloudBoundaryPoints.
    */
  virtual uci::type::DebrisCloudBoundaryType::CloudBoundaryPoints& getCloudBoundaryPoints() = 0;

  /** Sets the bounded list identified by CloudBoundaryPoints.
    *
    * @param value The bounded list whose contents are to be used to set the value of the bounded list accessed by this
    *      accessor.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::DebrisCloudBoundaryType& setCloudBoundaryPoints(const uci::type::DebrisCloudBoundaryType::CloudBoundaryPoints& value) = 0;

  /** Returns the value of the SimplePrimitive data type identified by PercentageOfCloudDebris.
    *
    * @return The value of the simple primitive data type identified by PercentageOfCloudDebris.
    */
  virtual uci::type::PercentTypeValue getPercentageOfCloudDebris() const = 0;

  /** Sets the value of the SimplePrimitive data type identified by PercentageOfCloudDebris.
    *
    * @param value The value to set the SimplePrimitve data type to.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::DebrisCloudBoundaryType& setPercentageOfCloudDebris(uci::type::PercentTypeValue value) = 0;

  /** Returns whether the Element identified by PercentageOfCloudDebris exists (is enabled) or not.
    *
    * @return A boolean indicating whether the Element identified by PercentageOfCloudDebris is enabled or not.
    */
  virtual bool hasPercentageOfCloudDebris() const = 0;

  /** Clears (disabled) the Element identified by PercentageOfCloudDebris.
    *
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::DebrisCloudBoundaryType& clearPercentageOfCloudDebris() = 0;

protected:

  /** The constructor [only available to derived classes]. */
  DebrisCloudBoundaryType() {
  }

  /** The destructor [only available to derived classes]. */
  ~DebrisCloudBoundaryType() {
  }

  /** The copy constructor [only available to derived classes].
    *
    * @param rhs The DebrisCloudBoundaryType to copy from.
    */
  DebrisCloudBoundaryType(const DebrisCloudBoundaryType& rhs) {
    (void)rhs;
  }

  /** The assignment operator. Sets the contents of this DebrisCloudBoundaryType to the contents of the
    * DebrisCloudBoundaryType on the right hand side (rhs) of the assignment operator [only available to derived classes].
    *
    * @param rhs The DebrisCloudBoundaryType on the right hand side (rhs) of the assignment operator whose contents are
    *      used to set the contents of this DebrisCloudBoundaryType.
    * @return A reference to this DebrisCloudBoundaryType.
    */
  DebrisCloudBoundaryType& operator=(const DebrisCloudBoundaryType& rhs) {
    (void)rhs;

    return *this;
  }

};

} // namespace type
} // namespace uci

#endif // UCI_TYPE_DEBRISCLOUDBOUNDARYTYPE_H

