/** @file MessageTypeEnum.h
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:09 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#ifndef UCI_TYPE_MESSAGETYPEENUM_H
#define UCI_TYPE_MESSAGETYPEENUM_H

#include <map>
#include <sstream>

#include "uci/base/Accessor.h"
#include "uci/base/export.h"

/** The namespace in which all UCI data types are declared */
namespace uci {

/** The namespace in which all generated data types are declared */
namespace type {

/** List of all message types in UCI. */
class MessageTypeEnum : public virtual uci::base::Accessor {
public:

  /** The following are the enumerated items that comprise this enumeration */
  enum EnumerationItem {

    /** Enumerated item that indicates that the enumeration has not been set */
    enumNotSet,

    /** See MT type for annotation. */
    UCI_ACCESS_ASSESSMENT,

    /** See MT type for annotation. */
    UCI_ACCESS_ASSESSMENT_REQUEST,

    /** See MT type for annotation. */
    UCI_ACCESS_ASSESSMENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ACTION,

    /** See MT type for annotation. */
    UCI_ACTION_ACTIVITY,

    /** See MT type for annotation. */
    UCI_ACTION_CANCEL_COMMAND,

    /** See MT type for annotation. */
    UCI_ACTION_CANCEL_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ACTION_CAPABILITY,

    /** See MT type for annotation. */
    UCI_ACTION_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_ACTION_COMMAND,

    /** See MT type for annotation. */
    UCI_ACTION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ACTION_EXECUTION_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_ACTION_PLAN,

    /** See MT type for annotation. */
    UCI_ACTION_PLAN_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_ACTION_PLAN_COMMAND,

    /** See MT type for annotation. */
    UCI_ACTION_PLAN_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ACTION_PLAN_EXECUTION_STATUS,

    /** See MT type for annotation. */
    UCI_ACTION_PLAN_STATUS,

    /** See MT type for annotation. */
    UCI_ACTION_PLAN_VALIDATION,

    /** See MT type for annotation. */
    UCI_ACTION_PLAN_VALIDATION_COMMAND,

    /** See MT type for annotation. */
    UCI_ACTION_PLAN_VALIDATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ACTION_PLANNING_STATUS,

    /** See MT type for annotation. */
    UCI_ACTION_STATUS,

    /** See MT type for annotation. */
    UCI_ACTIVITY_METRICS,

    /** See MT type for annotation. */
    UCI_ACTIVITY_METRICS_REQUEST,

    /** See MT type for annotation. */
    UCI_ACTIVITY_METRICS_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ACTIVITY_PLAN,

    /** See MT type for annotation. */
    UCI_ACTIVITY_PLAN_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_ACTIVITY_PLAN_COMMAND,

    /** See MT type for annotation. */
    UCI_ACTIVITY_PLAN_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ACTIVITY_PLAN_EXECUTION_STATUS,

    /** See MT type for annotation. */
    UCI_ACTIVITY_PLAN_STATUS,

    /** See MT type for annotation. */
    UCI_ACTIVITY_PLAN_VALIDATION,

    /** See MT type for annotation. */
    UCI_ACTIVITY_PLAN_VALIDATION_COMMAND,

    /** See MT type for annotation. */
    UCI_ACTIVITY_PLAN_VALIDATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_AIR_SAMPLE_ACTIVITY,

    /** See MT type for annotation. */
    UCI_AIR_SAMPLE_CAPABILITY,

    /** See MT type for annotation. */
    UCI_AIR_SAMPLE_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_AIR_SAMPLE_COMMAND,

    /** See MT type for annotation. */
    UCI_AIR_SAMPLE_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_AIR_SAMPLE_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_AIR_SAMPLE_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_AIRFIELD_REPORT,

    /** See MT type for annotation. */
    UCI_AMTI_ACTIVITY,

    /** See MT type for annotation. */
    UCI_AMTI_CAPABILITY,

    /** See MT type for annotation. */
    UCI_AMTI_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_AMTI_COMMAND,

    /** See MT type for annotation. */
    UCI_AMTI_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_AMTI_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_AMTI_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ANALYSIS_ROUTE,

    /** See MT type for annotation. */
    UCI_ANALYSIS_ROUTE_REQUEST,

    /** See MT type for annotation. */
    UCI_ANALYSIS_ROUTE_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_AO_ACTIVITY,

    /** See MT type for annotation. */
    UCI_AO_CAPABILITY,

    /** See MT type for annotation. */
    UCI_AO_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_AO_COMMAND,

    /** See MT type for annotation. */
    UCI_AO_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_AO_CONSENT_REQUEST,

    /** See MT type for annotation. */
    UCI_AO_CONSENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_AO_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_AO_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_APPROVAL_AUTHORITY,

    /** See MT type for annotation. */
    UCI_APPROVAL_AUTHORITY_REQUEST,

    /** See MT type for annotation. */
    UCI_APPROVAL_AUTHORITY_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_APPROVAL_MANAGEMENT_COMMAND,

    /** See MT type for annotation. */
    UCI_APPROVAL_MANAGEMENT_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_APPROVAL_POLICY,

    /** See MT type for annotation. */
    UCI_APPROVAL_REQUEST,

    /** See MT type for annotation. */
    UCI_APPROVAL_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ASSESSMENT,

    /** See MT type for annotation. */
    UCI_ASSESSMENT_REQUEST,

    /** See MT type for annotation. */
    UCI_ASSESSMENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_AUTHORIZATION,

    /** See MT type for annotation. */
    UCI_CAPABILITY_COVERAGE_AREA,

    /** See MT type for annotation. */
    UCI_CAPABILITY_COVERAGE_AREA_REQUEST,

    /** See MT type for annotation. */
    UCI_CAPABILITY_COVERAGE_AREA_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_CARGO_DELIVERY_CAPABILITY,

    /** See MT type for annotation. */
    UCI_CARGO_DELIVERY_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_CARGO_STATUS,

    /** See MT type for annotation. */
    UCI_COMINT_ACTIVITY,

    /** See MT type for annotation. */
    UCI_COMINT_CAPABILITY,

    /** See MT type for annotation. */
    UCI_COMINT_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_COMINT_COMMAND,

    /** See MT type for annotation. */
    UCI_COMINT_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_COMINT_CONSENT_REQUEST,

    /** See MT type for annotation. */
    UCI_COMINT_CONSENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_COMINT_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_COMINT_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_ASSET,

    /** See MT type for annotation. */
    UCI_COMM_ASSET_ESTIMATION_REQUEST,

    /** See MT type for annotation. */
    UCI_COMM_ASSET_ESTIMATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_ASSET_ORBIT,

    /** See MT type for annotation. */
    UCI_COMM_ASSET_POSITION_REPORT,

    /** See MT type for annotation. */
    UCI_COMM_POINTING,

    /** See MT type for annotation. */
    UCI_COMM_POINTING_COMMAND,

    /** See MT type for annotation. */
    UCI_COMM_POINTING_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_POINTING_REQUEST,

    /** See MT type for annotation. */
    UCI_COMM_POINTING_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_RELAY_ACTIVITY,

    /** See MT type for annotation. */
    UCI_COMM_RELAY_CAPABILITY,

    /** See MT type for annotation. */
    UCI_COMM_RELAY_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_RELAY_COMMAND,

    /** See MT type for annotation. */
    UCI_COMM_RELAY_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_RELAY_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_COMM_RELAY_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_SCHEDULE_ALLOCATION,

    /** See MT type for annotation. */
    UCI_COMM_SCHEDULE_ALLOCATION_UPDATE_REQUEST,

    /** See MT type for annotation. */
    UCI_COMM_SCHEDULE_ALLOCATION_UPDATE_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_SCHEDULE_AVAILABILITY,

    /** See MT type for annotation. */
    UCI_COMM_SCHEDULING_REQUEST,

    /** See MT type for annotation. */
    UCI_COMM_SCHEDULING_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_SCHEDULING_REQUIREMENT,

    /** See MT type for annotation. */
    UCI_COMM_SYSTEM,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_ACTIVITY,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_CAPABILITY,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_COMMAND,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_PLAN,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_PLAN_ACTIVATION_COMMAND,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_PLAN_ACTIVATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_PLAN_ACTIVATION_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_PLAN_OVERRIDE_REQUEST,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_PLAN_OVERRIDE_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_COMM_TERMINAL_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_COMM_UTILIZATION_REQUEST,

    /** See MT type for annotation. */
    UCI_COMM_UTILIZATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_COMPONENT_CONFIGURATION,

    /** See MT type for annotation. */
    UCI_COMPONENT_CONFIGURATION_DATA_REQUEST,

    /** See MT type for annotation. */
    UCI_COMPONENT_CONFIGURATION_DATA_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_COMPONENT_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_COMPONENT_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_COMPONENT_STATUS,

    /** See MT type for annotation. */
    UCI_COMPONENT_STATUS_DATA_REQUEST,

    /** See MT type for annotation. */
    UCI_COMPONENT_STATUS_DATA_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_CONTROL_INTERFACES_COMMAND,

    /** See MT type for annotation. */
    UCI_CONTROL_INTERFACES_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_CONTROL_REQUEST,

    /** See MT type for annotation. */
    UCI_CONTROL_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_CONTROL_SOURCES_COMMAND,

    /** See MT type for annotation. */
    UCI_CONTROL_SOURCES_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_CONTROL_STATUS,

    /** See MT type for annotation. */
    UCI_COORDINATED_REQUIREMENT_SET,

    /** See MT type for annotation. */
    UCI_COORDINATED_REQUIREMENT_SET_STATUS,

    /** See MT type for annotation. */
    UCI_COUNTER_SPACE_ACTIVITY,

    /** See MT type for annotation. */
    UCI_COUNTER_SPACE_CAPABILITY,

    /** See MT type for annotation. */
    UCI_COUNTER_SPACE_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_COUNTER_SPACE_DECONFLICTION,

    /** See MT type for annotation. */
    UCI_COUNTER_SPACE_REPORT,

    /** See MT type for annotation. */
    UCI_CRYPTO_COMMAND,

    /** See MT type for annotation. */
    UCI_CRYPTO_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_CRYPTO_STATUS,

    /** See MT type for annotation. */
    UCI_DAMAGE_ASSESSMENT,

    /** See MT type for annotation. */
    UCI_DAMAGE_ASSESSMENT_REQUEST,

    /** See MT type for annotation. */
    UCI_DAMAGE_ASSESSMENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_DAMAGE_ESTIMATE,

    /** See MT type for annotation. */
    UCI_DAMAGE_ESTIMATE_REQUEST,

    /** See MT type for annotation. */
    UCI_DAMAGE_ESTIMATE_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_DAMAGE_REPORT,

    /** See MT type for annotation. */
    UCI_DAMAGE_SUMMARY,

    /** See MT type for annotation. */
    UCI_DATA_DELETE_REQUEST,

    /** See MT type for annotation. */
    UCI_DATA_DELETE_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_DATA_MANAGEMENT_REQUEST,

    /** See MT type for annotation. */
    UCI_DATA_MANAGEMENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_DATA_PLAN,

    /** See MT type for annotation. */
    UCI_DATA_PLAN_ACTIVATION_COMMAND,

    /** See MT type for annotation. */
    UCI_DATA_PLAN_ACTIVATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_DATA_PLAN_ACTIVATION_STATUS,

    /** See MT type for annotation. */
    UCI_DATA_PLAN_OVERRIDE_REQUEST,

    /** See MT type for annotation. */
    UCI_DATA_PLAN_OVERRIDE_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_DATA_RECORD_LIST_MANAGEMENT_REQUEST,

    /** See MT type for annotation. */
    UCI_DATA_RECORD_LIST_MANAGEMENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_DATA_RECORD_MANAGEMENT_REQUEST,

    /** See MT type for annotation. */
    UCI_DATA_RECORD_MANAGEMENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_DATA_STORAGE_UTILIZATION_REQUEST,

    /** See MT type for annotation. */
    UCI_DATA_STORAGE_UTILIZATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_DATA_UPDATE_REQUEST,

    /** See MT type for annotation. */
    UCI_DATA_UPDATE_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_DESIGNATION,

    /** See MT type for annotation. */
    UCI_DESIGNATION_REQUEST,

    /** See MT type for annotation. */
    UCI_DESIGNATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_DISCRETE_STATUS,

    /** See MT type for annotation. */
    UCI_DLZ,

    /** See MT type for annotation. */
    UCI_DLZ_REQUEST,

    /** See MT type for annotation. */
    UCI_DLZ_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_DMPI,

    /** See MT type for annotation. */
    UCI_DMPI_CANCEL_COMMAND,

    /** See MT type for annotation. */
    UCI_DMPI_CANCEL_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_DMPI_DESIGNATION,

    /** See MT type for annotation. */
    UCI_DMPI_DESIGNATION_REQUEST,

    /** See MT type for annotation. */
    UCI_DMPI_DESIGNATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_DMPI_PATTERN,

    /** See MT type for annotation. */
    UCI_DMPI_STATUS,

    /** See MT type for annotation. */
    UCI_DOOR_COMMAND,

    /** See MT type for annotation. */
    UCI_DOOR_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_DOOR_STATUS,

    /** See MT type for annotation. */
    UCI_EA_ACTIVITY,

    /** See MT type for annotation. */
    UCI_EA_CAPABILITY,

    /** See MT type for annotation. */
    UCI_EA_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_EA_COMMAND,

    /** See MT type for annotation. */
    UCI_EA_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_EA_CONSENT_REQUEST,

    /** See MT type for annotation. */
    UCI_EA_CONSENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_EA_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_EA_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_EARTH_ORIENTATION_PARAMETERS,

    /** See MT type for annotation. */
    UCI_EEI,

    /** See MT type for annotation. */
    UCI_EFFECT,

    /** See MT type for annotation. */
    UCI_EFFECT_ACTIVITY,

    /** See MT type for annotation. */
    UCI_EFFECT_CANCEL_COMMAND,

    /** See MT type for annotation. */
    UCI_EFFECT_CANCEL_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_EFFECT_CAPABILITY,

    /** See MT type for annotation. */
    UCI_EFFECT_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_EFFECT_COMMAND,

    /** See MT type for annotation. */
    UCI_EFFECT_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_EFFECT_EXECUTION_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_EFFECT_PLAN,

    /** See MT type for annotation. */
    UCI_EFFECT_PLAN_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_EFFECT_PLAN_COMMAND,

    /** See MT type for annotation. */
    UCI_EFFECT_PLAN_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_EFFECT_PLAN_EXECUTION_STATUS,

    /** See MT type for annotation. */
    UCI_EFFECT_PLAN_STATUS,

    /** See MT type for annotation. */
    UCI_EFFECT_PLAN_VALIDATION,

    /** See MT type for annotation. */
    UCI_EFFECT_PLAN_VALIDATION_COMMAND,

    /** See MT type for annotation. */
    UCI_EFFECT_PLAN_VALIDATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_EFFECT_PLANNING_STATUS,

    /** See MT type for annotation. */
    UCI_EFFECT_STATUS,

    /** See MT type for annotation. */
    UCI_ELEVATION_REQUEST,

    /** See MT type for annotation. */
    UCI_ELEVATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ELEVATION_VISIBILITY_REQUEST,

    /** See MT type for annotation. */
    UCI_ELEVATION_VISIBILITY_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ENTITY,

    /** See MT type for annotation. */
    UCI_ENTITY_CONFIRMATION,

    /** See MT type for annotation. */
    UCI_ENTITY_CONFIRMATION_REQUEST,

    /** See MT type for annotation. */
    UCI_ENTITY_CONFIRMATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ENTITY_LOST,

    /** See MT type for annotation. */
    UCI_ENTITY_MANAGEMENT_REQUEST,

    /** See MT type for annotation. */
    UCI_ENTITY_MANAGEMENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ENTITY_METADATA,

    /** See MT type for annotation. */
    UCI_ENTITY_NOTIFICATION,

    /** See MT type for annotation. */
    UCI_ENTITY_ORBITAL_CSO,

    /** See MT type for annotation. */
    UCI_ENTITY_ORBITAL_ELEMENT_SET,

    /** See MT type for annotation. */
    UCI_ENTITY_ORBITAL_ELEMENT_SET_REQUEST,

    /** See MT type for annotation. */
    UCI_ENTITY_ORBITAL_ELEMENT_SET_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ENTITY_ORBITAL_EPHEMERIS,

    /** See MT type for annotation. */
    UCI_ENTITY_ORBITAL_EPHEMERIS_REQUEST,

    /** See MT type for annotation. */
    UCI_ENTITY_ORBITAL_EPHEMERIS_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ENTITY_ORBITAL_MANEUVER,

    /** See MT type for annotation. */
    UCI_ENTITY_ORBITAL_VCM,

    /** See MT type for annotation. */
    UCI_ENTITY_ORBITAL_VCM_REQUEST,

    /** See MT type for annotation. */
    UCI_ENTITY_ORBITAL_VCM_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ENTITY_PROPAGATION,

    /** See MT type for annotation. */
    UCI_EOB_CORRELATION_RECORD,

    /** See MT type for annotation. */
    UCI_ESM_ACTIVITY,

    /** See MT type for annotation. */
    UCI_ESM_CAPABILITY,

    /** See MT type for annotation. */
    UCI_ESM_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_ESM_COMMAND,

    /** See MT type for annotation. */
    UCI_ESM_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ESM_CONSENT_REQUEST,

    /** See MT type for annotation. */
    UCI_ESM_CONSENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ESM_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_ESM_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_EW_CONFIGURATION,

    /** See MT type for annotation. */
    UCI_EXTERNAL_DATA_REQUEST,

    /** See MT type for annotation. */
    UCI_EXTERNAL_DATA_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_FAULT,

    /** See MT type for annotation. */
    UCI_FILE_LOCATION,

    /** See MT type for annotation. */
    UCI_FILE_METADATA,

    /** See MT type for annotation. */
    UCI_FLIGHT_ACTIVITY,

    /** See MT type for annotation. */
    UCI_FLIGHT_CAPABILITY,

    /** See MT type for annotation. */
    UCI_FLIGHT_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_FOREIGN_KEY_MAP,

    /** See MT type for annotation. */
    UCI_FOREIGN_KEY_PAIR,

    /** See MT type for annotation. */
    UCI_FUSION_SETTINGS,

    /** See MT type for annotation. */
    UCI_FUSION_SETTINGS_REQUEST,

    /** See MT type for annotation. */
    UCI_FUSION_SETTINGS_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_GATEWAY_ACTIVITY,

    /** See MT type for annotation. */
    UCI_GATEWAY_CAPABILITY,

    /** See MT type for annotation. */
    UCI_GATEWAY_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_GATEWAY_COMMAND,

    /** See MT type for annotation. */
    UCI_GATEWAY_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_GATEWAY_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_GATEWAY_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_IFF_ACTIVITY,

    /** See MT type for annotation. */
    UCI_IFF_CAPABILITY,

    /** See MT type for annotation. */
    UCI_IFF_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_IFF_COMMAND,

    /** See MT type for annotation. */
    UCI_IFF_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_IFF_CONSENT_REQUEST,

    /** See MT type for annotation. */
    UCI_IFF_CONSENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_IFF_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_IFF_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_IO_PORT_COMMAND,

    /** See MT type for annotation. */
    UCI_IO_PORT_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_IO_PORT_STATUS,

    /** See MT type for annotation. */
    UCI_LAR,

    /** See MT type for annotation. */
    UCI_LAR_REPORT,

    /** See MT type for annotation. */
    UCI_LAR_REQUEST,

    /** See MT type for annotation. */
    UCI_LAR_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_LAUNCH_OBSERVATION,

    /** See MT type for annotation. */
    UCI_LOG,

    /** See MT type for annotation. */
    UCI_MESSAGE_TRANSMISSION_FILTER_RECORD,

    /** See MT type for annotation. */
    UCI_MESSAGE_TRANSMISSION_LIST,

    /** See MT type for annotation. */
    UCI_MISSION_ACTIVATION_REQUEST,

    /** See MT type for annotation. */
    UCI_MISSION_ACTIVATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_MISSION_CONTINGENCY_ALERT,

    /** See MT type for annotation. */
    UCI_MISSION_DEFINITION,

    /** See MT type for annotation. */
    UCI_MISSION_ENVIRONMENT_OVERRIDE,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_ACTIVATION_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_ACTIVATION_COMMAND,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_ACTIVATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_ACTIVATION_STATUS,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_COMMAND,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_EXECUTION_STATUS,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_METRICS_REPORT,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_METRICS_REPORT_REQUEST,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_METRICS_REPORT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_STATUS,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_VALIDATION,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_VALIDATION_COMMAND,

    /** See MT type for annotation. */
    UCI_MISSION_PLAN_VALIDATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_MISSION_PLANNING_ORCHESTRATION,

    /** See MT type for annotation. */
    UCI_MISSION_REQUIREMENT_STATUS,

    /** See MT type for annotation. */
    UCI_MULTISTATIC_EMITTER_DATA,

    /** See MT type for annotation. */
    UCI_MV_ANOMALY_EVENT,

    /** See MT type for annotation. */
    UCI_NAVIGATION_REPORT,

    /** See MT type for annotation. */
    UCI_OBSERVATION_MEASUREMENT_REPORT,

    /** See MT type for annotation. */
    UCI_OBSERVATION_REPORT,

    /** See MT type for annotation. */
    UCI_OP_LINE,

    /** See MT type for annotation. */
    UCI_OP_NOTIFICATION,

    /** See MT type for annotation. */
    UCI_OP_POINT,

    /** See MT type for annotation. */
    UCI_OP_ROUTING,

    /** See MT type for annotation. */
    UCI_OP_VOLUME,

    /** See MT type for annotation. */
    UCI_OP_ZONE,

    /** See MT type for annotation. */
    UCI_OPAQUE_CAPABILITY,

    /** See MT type for annotation. */
    UCI_OPAQUE_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_OPAQUE_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_OPAQUE_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_OPERATOR,

    /** See MT type for annotation. */
    UCI_OPERATOR_ACTION_COMMAND,

    /** See MT type for annotation. */
    UCI_OPERATOR_ACTION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_OPERATOR_ANNOTATION,

    /** See MT type for annotation. */
    UCI_OPERATOR_LOCATION_OF_INTEREST,

    /** See MT type for annotation. */
    UCI_OPERATOR_NOTIFICATION,

    /** See MT type for annotation. */
    UCI_OPERATOR_NOTIFICATION_ACK,

    /** See MT type for annotation. */
    UCI_OPERATOR_NOTIFICATION_OVERRIDE,

    /** See MT type for annotation. */
    UCI_OPERATOR_ROLE,

    /** See MT type for annotation. */
    UCI_ORBIT_ACTIVITY_PLAN,

    /** See MT type for annotation. */
    UCI_ORBIT_ACTIVITY_PLAN_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_ACTIVITY_PLAN_COMMAND,

    /** See MT type for annotation. */
    UCI_ORBIT_ACTIVITY_PLAN_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_ACTIVITY_PLAN_EXECUTION_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_ACTIVITY_PLAN_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_ACTIVITY_PLAN_VALIDATION,

    /** See MT type for annotation. */
    UCI_ORBIT_ACTIVITY_PLAN_VALIDATION_COMMAND,

    /** See MT type for annotation. */
    UCI_ORBIT_ACTIVITY_PLAN_VALIDATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_CHANGE_ACTIVITY,

    /** See MT type for annotation. */
    UCI_ORBIT_CHANGE_CAPABILITY,

    /** See MT type for annotation. */
    UCI_ORBIT_CHANGE_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_CONJUNCTION_ASSESSMENT,

    /** See MT type for annotation. */
    UCI_ORBIT_CONJUNCTION_ASSESSMENT_REQUEST,

    /** See MT type for annotation. */
    UCI_ORBIT_CONJUNCTION_ASSESSMENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_METRICS,

    /** See MT type for annotation. */
    UCI_ORBIT_METRICS_REQUEST,

    /** See MT type for annotation. */
    UCI_ORBIT_METRICS_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_MODIFICATION_REQUEST,

    /** See MT type for annotation. */
    UCI_ORBIT_MODIFICATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_PLAN,

    /** See MT type for annotation. */
    UCI_ORBIT_PLAN_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_PLAN_COMMAND,

    /** See MT type for annotation. */
    UCI_ORBIT_PLAN_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_PLAN_EXECUTION_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_PLAN_STATUS,

    /** See MT type for annotation. */
    UCI_ORBIT_PLAN_VALIDATION,

    /** See MT type for annotation. */
    UCI_ORBIT_PLAN_VALIDATION_COMMAND,

    /** See MT type for annotation. */
    UCI_ORBIT_PLAN_VALIDATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ORBITAL_DEBRIS_ESTIMATE,

    /** See MT type for annotation. */
    UCI_ORBITAL_DEBRIS_ESTIMATE_REQUEST,

    /** See MT type for annotation. */
    UCI_ORBITAL_DEBRIS_ESTIMATE_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ORBITAL_SURVEILLANCE_ACTIVITY,

    /** See MT type for annotation. */
    UCI_ORBITAL_SURVEILLANCE_CAPABILITY,

    /** See MT type for annotation. */
    UCI_ORBITAL_SURVEILLANCE_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_ORBITAL_SURVEILLANCE_SENSOR_ACTIVITY,

    /** See MT type for annotation. */
    UCI_ORBITAL_SURVEILLANCE_SENSOR_CAPABILITY,

    /** See MT type for annotation. */
    UCI_ORBITAL_SURVEILLANCE_SENSOR_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_ORDER_OF_BATTLE,

    /** See MT type for annotation. */
    UCI_PACKAGE,

    /** See MT type for annotation. */
    UCI_PACKAGE_STATUS,

    /** See MT type for annotation. */
    UCI_PLAN_MODIFICATION_REQUEST,

    /** See MT type for annotation. */
    UCI_PLAN_MODIFICATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_PLAN_SCORES,

    /** See MT type for annotation. */
    UCI_PLAN_SCORES_REQUEST,

    /** See MT type for annotation. */
    UCI_PLAN_SCORES_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_PLANNING_FUNCTION,

    /** See MT type for annotation. */
    UCI_PLANNING_FUNCTION_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_PLANNING_FUNCTION_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_PLANNING_FUNCTION_STATUS,

    /** See MT type for annotation. */
    UCI_PO_ACTIVITY,

    /** See MT type for annotation. */
    UCI_PO_CAPABILITY,

    /** See MT type for annotation. */
    UCI_PO_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_PO_COMMAND,

    /** See MT type for annotation. */
    UCI_PO_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_PO_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_PO_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_POSITION_REPORT,

    /** See MT type for annotation. */
    UCI_POSITION_REPORT_DETAILED,

    /** See MT type for annotation. */
    UCI_PRIORITIZATION_LIST,

    /** See MT type for annotation. */
    UCI_PRODUCT_CLASSIFICATION_PLAN,

    /** See MT type for annotation. */
    UCI_PRODUCT_CLASSIFICATION_REPORT,

    /** See MT type for annotation. */
    UCI_PRODUCT_CLASSIFICATION_REQUEST,

    /** See MT type for annotation. */
    UCI_PRODUCT_CLASSIFICATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_PRODUCT_CLASSIFICATION_TASK,

    /** See MT type for annotation. */
    UCI_PRODUCT_CLASSIFICATION_TASK_STATUS,

    /** See MT type for annotation. */
    UCI_PRODUCT_DISSEMINATION_CONFIGURATION,

    /** See MT type for annotation. */
    UCI_PRODUCT_DISSEMINATION_DESTINATION,

    /** See MT type for annotation. */
    UCI_PRODUCT_DISSEMINATION_PLAN,

    /** See MT type for annotation. */
    UCI_PRODUCT_DISSEMINATION_REPORT,

    /** See MT type for annotation. */
    UCI_PRODUCT_DISSEMINATION_REQUEST,

    /** See MT type for annotation. */
    UCI_PRODUCT_DISSEMINATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_PRODUCT_DISSEMINATION_TASK,

    /** See MT type for annotation. */
    UCI_PRODUCT_DISSEMINATION_TASK_STATUS,

    /** See MT type for annotation. */
    UCI_PRODUCT_DOWNLOAD_PLAN,

    /** See MT type for annotation. */
    UCI_PRODUCT_DOWNLOAD_REPORT,

    /** See MT type for annotation. */
    UCI_PRODUCT_DOWNLOAD_REQUEST,

    /** See MT type for annotation. */
    UCI_PRODUCT_DOWNLOAD_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_PRODUCT_DOWNLOAD_TASK,

    /** See MT type for annotation. */
    UCI_PRODUCT_DOWNLOAD_TASK_STATUS,

    /** See MT type for annotation. */
    UCI_PRODUCT_LOCATION,

    /** See MT type for annotation. */
    UCI_PRODUCT_METADATA,

    /** See MT type for annotation. */
    UCI_PRODUCT_PROCESSING_FUNCTION,

    /** See MT type for annotation. */
    UCI_PRODUCT_PROCESSING_FUNCTION_STATUS,

    /** See MT type for annotation. */
    UCI_PRODUCT_PROCESSING_PLAN,

    /** See MT type for annotation. */
    UCI_PRODUCT_PROCESSING_REPORT,

    /** See MT type for annotation. */
    UCI_PRODUCT_PROCESSING_REQUEST,

    /** See MT type for annotation. */
    UCI_PRODUCT_PROCESSING_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_PRODUCT_PROCESSING_TASK,

    /** See MT type for annotation. */
    UCI_PRODUCT_PROCESSING_TASK_STATUS,

    /** See MT type for annotation. */
    UCI_PROPAGATOR_SETTINGS,

    /** See MT type for annotation. */
    UCI_PROPAGATOR_SETTINGS_DATA_REQUEST,

    /** See MT type for annotation. */
    UCI_PROPAGATOR_SETTINGS_DATA_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_PULSE_DATA,

    /** See MT type for annotation. */
    UCI_QUERY_DATA_REQUEST,

    /** See MT type for annotation. */
    UCI_QUERY_DATA_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_RADAR_ALTIMETER_ACTIVITY,

    /** See MT type for annotation. */
    UCI_RADAR_ALTIMETER_CAPABILITY,

    /** See MT type for annotation. */
    UCI_RADAR_ALTIMETER_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_RADAR_ALTIMETER_COMMAND,

    /** See MT type for annotation. */
    UCI_RADAR_ALTIMETER_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_RADAR_ALTIMETER_REPORT,

    /** See MT type for annotation. */
    UCI_RADAR_ALTIMETER_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_RADAR_ALTIMETER_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_RDMA_INITIALIZE,

    /** See MT type for annotation. */
    UCI_RDMA_INITIALIZE_SETUP,

    /** See MT type for annotation. */
    UCI_REFERENCE_ACTIVITY,

    /** See MT type for annotation. */
    UCI_REFERENCE_CAPABILITY,

    /** See MT type for annotation. */
    UCI_REFERENCE_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_REFERENCE_FRAME,

    /** See MT type for annotation. */
    UCI_REFUEL_ACTIVITY,

    /** See MT type for annotation. */
    UCI_REFUEL_CAPABILITY,

    /** See MT type for annotation. */
    UCI_REFUEL_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_REFUEL_COMMAND,

    /** See MT type for annotation. */
    UCI_REFUEL_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_REFUEL_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_REFUEL_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_RELATIONSHIP_DESIGNATION,

    /** See MT type for annotation. */
    UCI_REQUIREMENT_METRICS,

    /** See MT type for annotation. */
    UCI_REQUIREMENT_METRICS_REQUEST,

    /** See MT type for annotation. */
    UCI_REQUIREMENT_METRICS_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_REQUIREMENT_OPTIONS,

    /** See MT type for annotation. */
    UCI_REQUIREMENT_OPTIONS_COMMAND,

    /** See MT type for annotation. */
    UCI_REQUIREMENT_OPTIONS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_REQUIREMENT_SET,

    /** See MT type for annotation. */
    UCI_RESEND_DATA_REQUEST,

    /** See MT type for annotation. */
    UCI_RESEND_DATA_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_RESPONSE,

    /** See MT type for annotation. */
    UCI_RESPONSE_ACTIVITY,

    /** See MT type for annotation. */
    UCI_RESPONSE_CANCEL_COMMAND,

    /** See MT type for annotation. */
    UCI_RESPONSE_CANCEL_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_RESPONSE_CAPABILITY,

    /** See MT type for annotation. */
    UCI_RESPONSE_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_RESPONSE_COMMAND,

    /** See MT type for annotation. */
    UCI_RESPONSE_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_RESPONSE_EXECUTION_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_RESPONSE_PLAN,

    /** See MT type for annotation. */
    UCI_RESPONSE_PLAN_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_RESPONSE_PLAN_COMMAND,

    /** See MT type for annotation. */
    UCI_RESPONSE_PLAN_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_RESPONSE_PLAN_EXECUTION_STATUS,

    /** See MT type for annotation. */
    UCI_RESPONSE_PLAN_STATUS,

    /** See MT type for annotation. */
    UCI_RESPONSE_PLAN_VALIDATION,

    /** See MT type for annotation. */
    UCI_RESPONSE_PLAN_VALIDATION_COMMAND,

    /** See MT type for annotation. */
    UCI_RESPONSE_PLAN_VALIDATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_RESPONSE_PLANNING_STATUS,

    /** See MT type for annotation. */
    UCI_RESPONSE_STATUS,

    /** See MT type for annotation. */
    UCI_RF_CONTROL_COMMAND,

    /** See MT type for annotation. */
    UCI_RF_CONTROL_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_RF_PROFILE,

    /** See MT type for annotation. */
    UCI_RF_REPORT,

    /** See MT type for annotation. */
    UCI_RF_RESOURCE_ALLOCATION,

    /** See MT type for annotation. */
    UCI_RF_RESOURCE_ALLOCATION_REQUEST,

    /** See MT type for annotation. */
    UCI_RF_RESOURCE_ALLOCATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_RF_THREAD_INSTANCE_SETUP_COMMAND,

    /** See MT type for annotation. */
    UCI_RF_THREAD_INSTANCE_SETUP_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ROUTE_ACTIVITY_PLAN,

    /** See MT type for annotation. */
    UCI_ROUTE_ACTIVITY_PLAN_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_ROUTE_ACTIVITY_PLAN_COMMAND,

    /** See MT type for annotation. */
    UCI_ROUTE_ACTIVITY_PLAN_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ROUTE_ACTIVITY_PLAN_EXECUTION_STATUS,

    /** See MT type for annotation. */
    UCI_ROUTE_ACTIVITY_PLAN_STATUS,

    /** See MT type for annotation. */
    UCI_ROUTE_ACTIVITY_PLAN_VALIDATION,

    /** See MT type for annotation. */
    UCI_ROUTE_ACTIVITY_PLAN_VALIDATION_COMMAND,

    /** See MT type for annotation. */
    UCI_ROUTE_ACTIVITY_PLAN_VALIDATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ROUTE_METRICS,

    /** See MT type for annotation. */
    UCI_ROUTE_METRICS_REQUEST,

    /** See MT type for annotation. */
    UCI_ROUTE_METRICS_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ROUTE_MODIFICATION_REQUEST,

    /** See MT type for annotation. */
    UCI_ROUTE_MODIFICATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_ROUTE_PLAN,

    /** See MT type for annotation. */
    UCI_ROUTE_PLAN_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_ROUTE_PLAN_COMMAND,

    /** See MT type for annotation. */
    UCI_ROUTE_PLAN_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_ROUTE_PLAN_EXECUTION_STATUS,

    /** See MT type for annotation. */
    UCI_ROUTE_PLAN_STATUS,

    /** See MT type for annotation. */
    UCI_ROUTE_PLAN_VALIDATION,

    /** See MT type for annotation. */
    UCI_ROUTE_PLAN_VALIDATION_COMMAND,

    /** See MT type for annotation. */
    UCI_ROUTE_PLAN_VALIDATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SAR_ACTIVITY,

    /** See MT type for annotation. */
    UCI_SAR_CAPABILITY,

    /** See MT type for annotation. */
    UCI_SAR_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_SAR_COMMAND,

    /** See MT type for annotation. */
    UCI_SAR_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SAR_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_SAR_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SATELLITE_CHARACTERISTICS,

    /** See MT type for annotation. */
    UCI_SECURITY_AUDIT_RECORD,

    /** See MT type for annotation. */
    UCI_SELF_DEFENSE_STATUS,

    /** See MT type for annotation. */
    UCI_SERVICE_CONFIGURATION_CHANGE_REQUEST,

    /** See MT type for annotation. */
    UCI_SERVICE_CONFIGURATION_CHANGE_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_SERVICE_CONFIGURATION_PARAMS,

    /** See MT type for annotation. */
    UCI_SERVICE_CONFIGURATION_PARAMS_DATA_REQUEST,

    /** See MT type for annotation. */
    UCI_SERVICE_CONFIGURATION_PARAMS_DATA_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_SERVICE_ERROR_REPORT,

    /** See MT type for annotation. */
    UCI_SERVICE_LIFECYCLE_COMMAND,

    /** See MT type for annotation. */
    UCI_SERVICE_LIFECYCLE_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SERVICE_REGISTRATION_REQUEST,

    /** See MT type for annotation. */
    UCI_SERVICE_REGISTRATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_SERVICE_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_SERVICE_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SERVICE_STATUS,

    /** See MT type for annotation. */
    UCI_SERVICE_STATUS_DATA_REQUEST,

    /** See MT type for annotation. */
    UCI_SERVICE_STATUS_DATA_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_SHARED_APERTURE_SUPPORT_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_SIGNAL_REPORT,

    /** See MT type for annotation. */
    UCI_SMTI_ACTIVITY,

    /** See MT type for annotation. */
    UCI_SMTI_CAPABILITY,

    /** See MT type for annotation. */
    UCI_SMTI_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_SMTI_COMMAND,

    /** See MT type for annotation. */
    UCI_SMTI_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SMTI_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_SMTI_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SOB_C2_RECORD,

    /** See MT type for annotation. */
    UCI_SOB_CORRELATION_RECORD,

    /** See MT type for annotation. */
    UCI_SOB_SATELLITE_RECORD,

    /** See MT type for annotation. */
    UCI_SPACE_WEATHER,

    /** See MT type for annotation. */
    UCI_SPECTRAL_DENSITY_REPORT,

    /** See MT type for annotation. */
    UCI_STORE_CARRIAGE_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_STORE_LOADOUT_CONFIGURATION,

    /** See MT type for annotation. */
    UCI_STORE_MANAGEMENT_COMMAND,

    /** See MT type for annotation. */
    UCI_STORE_MANAGEMENT_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_STORE_MANAGEMENT_REPORT,

    /** See MT type for annotation. */
    UCI_STORE_MANAGEMENT_STATUS,

    /** See MT type for annotation. */
    UCI_STRIKE_ACTIVITY,

    /** See MT type for annotation. */
    UCI_STRIKE_CAPABILITY,

    /** See MT type for annotation. */
    UCI_STRIKE_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_STRIKE_COMMAND,

    /** See MT type for annotation. */
    UCI_STRIKE_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_STRIKE_CONSENT_REQUEST,

    /** See MT type for annotation. */
    UCI_STRIKE_CONSENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_STRIKE_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_STRIKE_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_BIT_COMMAND,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_BIT_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_BIT_CONFIGURATION,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_BIT_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_CALIBRATION_COMMAND,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_CALIBRATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_CALIBRATION_CONFIGURATION,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_CALIBRATION_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_CONFIGURATION,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_CONFIGURATION_DATA_REQUEST,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_CONFIGURATION_DATA_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_ERASE_COMMAND,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_ERASE_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_MAINTENANCE_COMMAND,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_MAINTENANCE_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_MAINTENANCE_CONFIGURATION,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_MAINTENANCE_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_STATE_COMMAND,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_STATE_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_STATUS_DATA_REQUEST,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_STATUS_DATA_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_STATUS_DETAILED,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_STATUS_DETAILED_DATA_REQUEST,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_STATUS_DETAILED_DATA_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_SUBSYSTEM_STREAM,

    /** See MT type for annotation. */
    UCI_SURVIVABILITY_RISK_LEVEL,

    /** See MT type for annotation. */
    UCI_SYSTEM_DEPLOYMENT_ACTIVITY,

    /** See MT type for annotation. */
    UCI_SYSTEM_DEPLOYMENT_CAPABILITY,

    /** See MT type for annotation. */
    UCI_SYSTEM_DEPLOYMENT_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_SYSTEM_ESTIMATION_REQUEST,

    /** See MT type for annotation. */
    UCI_SYSTEM_ESTIMATION_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_SYSTEM_MANAGEMENT_REQUEST,

    /** See MT type for annotation. */
    UCI_SYSTEM_MANAGEMENT_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_SYSTEM_METADATA,

    /** See MT type for annotation. */
    UCI_SYSTEM_NOTIFICATION,

    /** See MT type for annotation. */
    UCI_SYSTEM_ORBIT_REPORT,

    /** See MT type for annotation. */
    UCI_SYSTEM_ORBITAL_ELEMENT_SET,

    /** See MT type for annotation. */
    UCI_SYSTEM_ORBITAL_ELEMENT_SET_REQUEST,

    /** See MT type for annotation. */
    UCI_SYSTEM_ORBITAL_ELEMENT_SET_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_SYSTEM_ORBITAL_EPHEMERIS,

    /** See MT type for annotation. */
    UCI_SYSTEM_ORBITAL_EPHEMERIS_REQUEST,

    /** See MT type for annotation. */
    UCI_SYSTEM_ORBITAL_EPHEMERIS_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_SYSTEM_ORBITAL_POSITION_REPORT,

    /** See MT type for annotation. */
    UCI_SYSTEM_ORBITAL_VCM,

    /** See MT type for annotation. */
    UCI_SYSTEM_ORBITAL_VCM_REQUEST,

    /** See MT type for annotation. */
    UCI_SYSTEM_ORBITAL_VCM_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_SYSTEM_READINESS,

    /** See MT type for annotation. */
    UCI_SYSTEM_STATUS,

    /** See MT type for annotation. */
    UCI_SYSTEM_TIME_AT_REFERENCE,

    /** See MT type for annotation. */
    UCI_SYSTEMS_NEEDED_REQUEST,

    /** See MT type for annotation. */
    UCI_SYSTEMS_NEEDED_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_TACTICAL_ORDER_ACTIVITY,

    /** See MT type for annotation. */
    UCI_TACTICAL_ORDER_CAPABILITY,

    /** See MT type for annotation. */
    UCI_TACTICAL_ORDER_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_TAG_ASSOCIATION,

    /** See MT type for annotation. */
    UCI_TASK,

    /** See MT type for annotation. */
    UCI_TASK_CANCEL_COMMAND,

    /** See MT type for annotation. */
    UCI_TASK_CANCEL_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_TASK_COMMAND,

    /** See MT type for annotation. */
    UCI_TASK_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_TASK_EXECUTION_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_TASK_PLAN,

    /** See MT type for annotation. */
    UCI_TASK_PLAN_APPROVAL_STATUS,

    /** See MT type for annotation. */
    UCI_TASK_PLAN_COMMAND,

    /** See MT type for annotation. */
    UCI_TASK_PLAN_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_TASK_PLAN_EXECUTION_STATUS,

    /** See MT type for annotation. */
    UCI_TASK_PLAN_STATUS,

    /** See MT type for annotation. */
    UCI_TASK_PLAN_VALIDATION,

    /** See MT type for annotation. */
    UCI_TASK_PLAN_VALIDATION_COMMAND,

    /** See MT type for annotation. */
    UCI_TASK_PLAN_VALIDATION_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_TASK_PLANNING_STATUS,

    /** See MT type for annotation. */
    UCI_TASK_STATUS,

    /** See MT type for annotation. */
    UCI_TURRET_COMMAND,

    /** See MT type for annotation. */
    UCI_TURRET_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_TURRET_REPORT,

    /** See MT type for annotation. */
    UCI_TURRET_STATUS,

    /** See MT type for annotation. */
    UCI_WEATHER,

    /** See MT type for annotation. */
    UCI_WEATHER_DATASET,

    /** See MT type for annotation. */
    UCI_WEATHER_OBSERVATION,

    /** See MT type for annotation. */
    UCI_WEATHER_RADAR_ACTIVITY,

    /** See MT type for annotation. */
    UCI_WEATHER_RADAR_CAPABILITY,

    /** See MT type for annotation. */
    UCI_WEATHER_RADAR_CAPABILITY_STATUS,

    /** See MT type for annotation. */
    UCI_WEATHER_RADAR_COMMAND,

    /** See MT type for annotation. */
    UCI_WEATHER_RADAR_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_WEATHER_RADAR_OBSERVATION,

    /** See MT type for annotation. */
    UCI_WEATHER_RADAR_SETTINGS_COMMAND,

    /** See MT type for annotation. */
    UCI_WEATHER_RADAR_SETTINGS_COMMAND_STATUS,

    /** See MT type for annotation. */
    UCI_WORKING_EOB,

    /** See MT type for annotation. */
    UCI_WORKING_EOB_REQUEST,

    /** See MT type for annotation. */
    UCI_WORKING_EOB_REQUEST_STATUS,

    /** See MT type for annotation. */
    UCI_WORKING_SOB,

    /** See MT type for annotation. */
    UCI_WORKING_SOB_REQUEST,

    /** See MT type for annotation. */
    UCI_WORKING_SOB_REQUEST_STATUS,

    /** Enumerated item that indicates maximum enumerated item exclusive of this item */
    enumMaxExclusive
  };

  /** Returns this accessor's type constant, i.e. messageTypeEnum.
    *
    * @return This accessor's type constant, i.e. messageTypeEnum.
    */
  virtual uci::base::accessorType::AccessorType getAccessorType() const noexception {
    return uci::type::accessorType::messageTypeEnum;
  }

  /** The assignment operator. Sets the contents of this MessageTypeEnum to the contents of the MessageTypeEnum on the
    * right hand side (rhs) of the assignment operator.
    *
    * @param rhs The MessageTypeEnum on the right hand side (rhs) of the assignment operator whose contents are used to set
    *      the contents of this MessageTypeEnum.
    * @return A reference to this MessageTypeEnum.
    */
  MessageTypeEnum& operator=(const MessageTypeEnum& rhs) {
    setValue(rhs.getValue());
    return *this;
  }

  /** The assignment operator that sets the value of this MessageTypeEnum enumeration to the EnumerationItem on the right
    * hand side of the assignment operator.
    *
    * @param rhs The EnumerationItem whose value is to be assigned to this MessageTypeEnum enumeration.
    * @return A reference to this MessageTypeEnum enumeration.
    */
  MessageTypeEnum& operator=(EnumerationItem rhs) {
    setValue(rhs);
    return *this;
  }

  /** Sets the value of this MessageTypeEnum enumeration to the value of the specified enumeration item.
    *
    * @param item The EnumerationItem whose value is to be used to set the value of this MessageTypeEnum enumeration.
    */
  virtual void setValue(EnumerationItem item) = 0;

  /** Returns the value of this MessageTypeEnum enumeration.
    *
    * @param testForValidity=true Specifies whether this MessageTypeEnum enumeration should be validated (true) or not
    *      (false) as part of retrieving its value.
    * @return The value of this MessageTypeEnum enumeration.
    */
  virtual EnumerationItem getValue(bool testForValidity=true) const = 0;

  /** Returns the number of items in this MessageTypeEnum enumeration.
    *
    * @return The number of items in this MessageTypeEnum enumeration.
    */
  int getNumberOfItems() const noexception {
    return 681;
  }

  /** Returns whether this MessageTypeEnum enumeration is valid or not. A MessageTypeEnum enumeration is valid if its value
    * is one of the enumeration items other than enumNotSet and enumMaxExclusive.
    *
    * @return A flag indicating whether this MessageTypeEnum enumeration is valid (true) or not (false).
    */
  virtual bool isValid() const noexception {
    return isValid(getValue(false));
  }

  /** Returns whether the specified enumeration item is valid or not. A enumeration item is valid if its value is one of
    * the enumeration items other than enumNotSet and enumMaxExclusive.
    *
    * @param item The EnumerationItem to test.
    * @return A flag indicating whether the specified EnumerationItem is valid (true) or not (false).
    */
  static bool isValid(EnumerationItem item) noexception {
    return (item > enumNotSet) && (item < enumMaxExclusive);
  }

  /** Returns whether the specified name item is valid or not. A name is valid if it is the name of one of the enumeration
    * items other than enumNotSet and enumMaxExclusive.
    *
    * @param name The name to test.
    * @return A flag indicating whether the specified name is valid (true) or not (false).
    */
  static bool isValid(const std::string& name) noexception {
    FromNameTable::const_iterator iter = m_fromNameTable.find(name);
    return !(iter == m_fromNameTable.end());
  }

  /** Tests whether the value of the MessageTypeEnum enumeration on the right hand side of the == operator is equal to the
    * value as this MessageTypeEnum enumeration.
    *
    * @param rhs The MessageTypeEnum enumeration whose value is to be compared against the value of this MessageTypeEnum
    *      enumeration.
    * @return True if the value of the specified MessageTypeEnum enumeration (rhs) is equal to the value of this
    *      MessageTypeEnum enumeration, false otherwise.
    */
  bool operator==(const MessageTypeEnum& rhs) const {
    return getValue() == rhs.getValue();
  }

  /** Tests whether the value of the MessageTypeEnum enumeration on the right hand side of the != operator is not equal to
    * the value as this MessageTypeEnum enumeration.
    *
    * @param rhs The MessageTypeEnum enumeration whose value is to be compared against the value of this MessageTypeEnum
    *      enumeration.
    * @return True if the value of the specified MessageTypeEnum enumeration (rhs) is not equal to the value of this
    *      MessageTypeEnum enumeration, false otherwise.
    */
  bool operator!=(const MessageTypeEnum& rhs) const {
    return getValue() != rhs.getValue();
  }

  /** Tests whether the value of the MessageTypeEnum enumeration on the right hand side of the < operator is less than the
    * value as this MessageTypeEnum enumeration.
    *
    * @param rhs The MessageTypeEnum enumeration whose value is to be compared against the value of this MessageTypeEnum
    *      enumeration.
    * @return True if the value of the specified MessageTypeEnum enumeration (rhs) is less than the value of this
    *      MessageTypeEnum enumeration, false otherwise.
    */
  bool operator<(const MessageTypeEnum& rhs) const {
    return getValue() < rhs.getValue();
  }

  /** Tests whether the value of the MessageTypeEnum enumeration on the right hand side of the <= operator is less than or
    * equal to the value as this MessageTypeEnum enumeration.
    *
    * @param rhs The MessageTypeEnum enumeration whose value is to be compared against the value of this MessageTypeEnum
    *      enumeration.
    * @return True if the value of the specified MessageTypeEnum enumeration (rhs) is less than or equal to the value of
    *      this MessageTypeEnum enumeration, false otherwise.
    */
  bool operator<=(const MessageTypeEnum& rhs) const {
    return getValue() <= rhs.getValue();
  }

  /** Tests whether the value of the MessageTypeEnum enumeration on the right hand side of the > operator is greater than
    * the value as this MessageTypeEnum enumeration.
    *
    * @param rhs The MessageTypeEnum enumeration whose value is to be compared against the value of this MessageTypeEnum
    *      enumeration.
    * @return True if the value of the specified MessageTypeEnum enumeration (rhs) is greater than the value of this
    *      MessageTypeEnum enumeration, false otherwise.
    */
  bool operator>(const MessageTypeEnum& rhs) const {
    return getValue() > rhs.getValue();
  }

  /** Tests whether the value of the MessageTypeEnum enumeration on the right hand side of the >= operator is greater than
    * or equal to the value as this MessageTypeEnum enumeration.
    *
    * @param rhs The MessageTypeEnum enumeration whose value is to be compared against the value of this MessageTypeEnum
    *      enumeration.
    * @return True if the value of the specified MessageTypeEnum enumeration (rhs) is greater than or equal to the value of
    *      this MessageTypeEnum enumeration, false otherwise.
    */
  bool operator>=(const MessageTypeEnum& rhs) const {
    return getValue() >= rhs.getValue();
  }

  /** Tests whether the value of this MessageTypeEnum enumeration is equal to the value of the specified EnumerationItem.
    *
    * @param rhs The EnumerationItem whose value is to be compared against the value of this MessageTypeEnum enumeration.
    * @return True if the value of the EnumerationItem (rhs) is equal to the value of this MessageTypeEnum enumeration,
    *      false otherwise.
    */
  bool operator==(EnumerationItem rhs) const {
    testForValidItem(rhs);
    return getValue() == rhs;
  }

  /** Tests whether the value of the specified EnumerationItem is equal to the value of the specified MessageTypeEnum
    * enumeration.
    *
    * @param lhs The EnumerationItem whose value is to be compared against the value of the specified MessageTypeEnum
    *      enumeration.
    * @param rhs The MessageTypeEnum enumeration whose value is to be compared against the value of the specified
    *      EnumerationItem.
    * @return True if the value of the EnumerationItem (lhs) is equal to the value of the MessageTypeEnum enumeration
    *      (rhs), false otherwise.
    */
  friend bool operator==(EnumerationItem lhs, const MessageTypeEnum& rhs) {
    testForValidItem(lhs);
    return lhs == rhs.getValue();
  }

  /** Tests whether the value of this MessageTypeEnum enumeration is not equal to the value of the specified
    * EnumerationItem.
    *
    * @param rhs The EnumerationItem whose value is to be compared against the value of this MessageTypeEnum enumeration.
    * @return True if the value of the EnumerationItem (rhs) is not equal to the value of this MessageTypeEnum enumeration,
    *      false otherwise.
    */
  bool operator!=(EnumerationItem rhs) const {
    testForValidItem(rhs);
    return getValue() != rhs;
  }

  /** Tests whether the value of the specified EnumerationItem is not equal to the value of the specified MessageTypeEnum
    * enumeration.
    *
    * @param lhs The EnumerationItem whose value is to be compared against the value of the specified MessageTypeEnum
    *      enumeration.
    * @param rhs The MessageTypeEnum enumeration whose value is to be compared against the value of the specified
    *      EnumerationItem.
    * @return True if the value of the EnumerationItem (lhs) is not equal to the value of the MessageTypeEnum enumeration
    *      (rhs), false otherwise.
    */
  friend bool operator!=(EnumerationItem lhs, const MessageTypeEnum& rhs) {
    testForValidItem(lhs);
    return lhs != rhs.getValue();
  }

  /** Tests whether the value of this MessageTypeEnum enumeration is less than the value of the specified EnumerationItem.
    *
    * @param rhs The EnumerationItem whose value is to be compared against the value of this MessageTypeEnum enumeration.
    * @return True if the value of the EnumerationItem (rhs) is less than the value of this MessageTypeEnum enumeration,
    *      false otherwise.
    */
  bool operator<(EnumerationItem rhs) const {
    testForValidItem(rhs);
    return getValue() < rhs;
  }

  /** Tests whether the value of the specified EnumerationItem is less than the value of the specified MessageTypeEnum
    * enumeration.
    *
    * @param lhs The EnumerationItem whose value is to be compared against the value of the specified MessageTypeEnum
    *      enumeration.
    * @param rhs The MessageTypeEnum enumeration whose value is to be compared against the value of the specified
    *      EnumerationItem.
    * @return True if the value of the EnumerationItem (lhs) is less than the value of the MessageTypeEnum enumeration
    *      (rhs), false otherwise.
    */
  friend bool operator<(EnumerationItem lhs, const MessageTypeEnum& rhs) {
    testForValidItem(lhs);
    return lhs < rhs.getValue();
  }

  /** Tests whether the value of this MessageTypeEnum enumeration is less than or equal to the value of the specified
    * EnumerationItem.
    *
    * @param rhs The EnumerationItem whose value is to be compared against the value of this MessageTypeEnum enumeration.
    * @return True if the value of the EnumerationItem (rhs) is less than or equal to the value of this MessageTypeEnum
    *      enumeration, false otherwise.
    */
  bool operator<=(EnumerationItem rhs) const {
    testForValidItem(rhs);
    return getValue() <= rhs;
  }

  /** Tests whether the value of the specified EnumerationItem is less than or equal to the value of the specified
    * MessageTypeEnum enumeration.
    *
    * @param lhs The EnumerationItem whose value is to be compared against the value of the specified MessageTypeEnum
    *      enumeration.
    * @param rhs The MessageTypeEnum enumeration whose value is to be compared against the value of the specified
    *      EnumerationItem.
    * @return True if the value of the EnumerationItem (lhs) is less than or equal to the value of the MessageTypeEnum
    *      enumeration (rhs), false otherwise.
    */
  friend bool operator<=(EnumerationItem lhs, const MessageTypeEnum& rhs) {
    testForValidItem(lhs);
    return lhs <= rhs.getValue();
  }

  /** Tests whether the value of this MessageTypeEnum enumeration is greater than the value of the specified
    * EnumerationItem.
    *
    * @param rhs The EnumerationItem whose value is to be compared against the value of this MessageTypeEnum enumeration.
    * @return True if the value of the EnumerationItem (rhs) is greater than the value of this MessageTypeEnum enumeration,
    *      false otherwise.
    */
  bool operator>(EnumerationItem rhs) const {
    testForValidItem(rhs);
    return getValue() > rhs;
  }

  /** Tests whether the value of the specified EnumerationItem is greater than the value of the specified MessageTypeEnum
    * enumeration.
    *
    * @param lhs The EnumerationItem whose value is to be compared against the value of the specified MessageTypeEnum
    *      enumeration.
    * @param rhs The MessageTypeEnum enumeration whose value is to be compared against the value of the specified
    *      EnumerationItem.
    * @return True if the value of the EnumerationItem (lhs) is greater than the value of the MessageTypeEnum enumeration
    *      (rhs), false otherwise.
    */
  friend bool operator>(EnumerationItem lhs, const MessageTypeEnum& rhs) {
    testForValidItem(lhs);
    return lhs > rhs.getValue();
  }

  /** Tests whether the value of this MessageTypeEnum enumeration is greater than or equal to the value of the specified
    * EnumerationItem.
    *
    * @param rhs The EnumerationItem whose value is to be compared against the value of this MessageTypeEnum enumeration.
    * @return True if the value of the EnumerationItem (rhs) is greater than or equal to the value of this MessageTypeEnum
    *      enumeration, false otherwise.
    */
  bool operator>=(EnumerationItem rhs) const {
    testForValidItem(rhs);
    return getValue() >= rhs;
  }

  /** Tests whether the value of the specified EnumerationItem is greater than or equal to the value of the specified
    * MessageTypeEnum enumeration.
    *
    * @param lhs The EnumerationItem whose value is to be compared against the value of the specified MessageTypeEnum
    *      enumeration.
    * @param rhs The MessageTypeEnum enumeration whose value is to be compared against the value of the specified
    *      EnumerationItem.
    * @return True if the value of the EnumerationItem (lhs) is greater than or equal to the value of the MessageTypeEnum
    *      enumeration (rhs), false otherwise.
    */
  friend bool operator>=(EnumerationItem lhs, const MessageTypeEnum& rhs) {
    testForValidItem(lhs);
    return lhs >= rhs.getValue();
  }

  /** Returns the name of the specified enumeration item.
    *
    * @param item The enumeration item whose name is to be returned.
    * @return The enumeration item's name if valid.
    */
  static std::string toName(EnumerationItem item) {
    ToNameTable::const_iterator iter = m_toNameTable.find(item);
    if (iter == m_toNameTable.end()) {
      std::ostringstream oStream;
      oStream << "Failed to convert enumerated item to its name, item not found in mapping: " << item;
      throw uci::base::UCIException(oStream.str(), 0);
    }

    return iter->second;
  }

  /** Returns the enumeration item having the specified name.
    *
    * @param itemName The name of the enumeration item to be returned.
    * @return The enumeration item having the specified name.
    */
  static EnumerationItem fromName(const std::string& itemName) {
    FromNameTable::const_iterator iter = m_fromNameTable.find(itemName);
    if (iter == m_fromNameTable.end()) {
      std::ostringstream oStream;
      oStream << "Failed to return enumerated item having specified name, name not found in mapping: " << itemName;
      throw uci::base::UCIException(oStream.str(), 0);
    }

    return iter->second;
  }

  /** Return the name of the enumeration item that the value of this MessageTypeEnum enumeration is set to.
    *
    * @return The name of the enumeration item.
    */
  virtual std::string toName() const {
    return toName(getValue());
  }

  /** Sets the value of this MessageTypeEnum enumeration to the value of the enumeration item having the specified name.
    *
    * @param itemName The name of the enumeration item whose value is to be used to set this MessageTypeEnum enumeration
    *      to.
    */
  virtual void setValueFromName(const std::string& itemName) {
    setValue(fromName(itemName));
  }

protected:

  /** The default constructor. In addition to constructing a new MessageTypeEnum, this constructor also makes sure the
    * conversion tables are initialized.
    */
  MessageTypeEnum() {
  }

  /** The destructor [only available to derived classes]. */
  ~MessageTypeEnum() {
  }

  /** Tests that the specified enumeration item is valid or not, throwing an exception if the item is not valid.
    *
    * @param additionalDescription An additional description to include in the error message should an exception be thrown.
    * @param item The enumeration item to test.
    */
  static void testForValidItem(const char* additionalDescription, EnumerationItem item) {
    if (!isValid(item)) {
      std::ostringstream oStream;
      oStream << additionalDescription << ": " << item << " (item must be between " << enumNotSet << " and "<< enumMaxExclusive << " exclusive)";
      throw uci::base::UCIException(oStream.str(), 0);
    }

  }

  /** Tests that the specified enumeration item is valid or not, throwing an exception if the item is not valid.
    *
    * @param item The enumeration item to test.
    */
  static void testForValidItem(EnumerationItem item) {
    testForValidItem("Invalid enumerated item specified", item);
  }

private:

  /** The type of table that is used to lookup the name of a enumeration item given that enumeration item. */
  typedef std::map<EnumerationItem, const std::string> ToNameTable;

  /** The type of table that is used to lookup an enumeration item given its name. */
  typedef std::map<const std::string, EnumerationItem> FromNameTable;

  /** The table that is used to lookup the name of a enumeration item given that enumeration item. */
  static UCI_EXPORT ToNameTable m_toNameTable;

  /** The type of table that is used to lookup an enumeration item given its name. */
  static UCI_EXPORT FromNameTable m_fromNameTable;

protected:

  /** The copy constructor [only available to derived classes].
    *
    * @param rhs The MessageTypeEnum to copy from.
    */
  MessageTypeEnum(const MessageTypeEnum& rhs) {
    (void)rhs;
  }

};

} // namespace type
} // namespace uci

template<typename charT, typename traits>
std::basic_ostream<charT, traits>&
operator<<(std::basic_ostream<charT, traits>& oStream, const uci::type::MessageTypeEnum& enumeration)
{
  oStream << enumeration.toName();
  return oStream;
}

#endif // UCI_TYPE_MESSAGETYPEENUM_H

