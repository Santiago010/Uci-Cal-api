/** @file IPON_IID2_Type.h
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:07 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#ifndef UCI_TYPE_IPON_IID2_TYPE_H
#define UCI_TYPE_IPON_IID2_TYPE_H

#include "uci/base/Accessor.h"
#include "uci/base/export.h"
#include "uci/type/IPON_IID2_ProgramCodeType.h"
#include "uci/type/IPON_IID2_ProjectCodeType.h"
#include "uci/type/IPON_IID2_SortieNumberType.h"

/** The namespace in which all UCI data types are declared */
namespace uci {

/** The namespace in which all base data types are declared */
namespace base {

class AbstractServiceBusConnection;

} // namespace base
} // namespace uci

/** The namespace in which all UCI data types are declared */
namespace uci {

/** The namespace in which all generated data types are declared */
namespace type {

/** See annotations in child elements and messages/elements that use this type for details. */
class IPON_IID2_Type : public virtual uci::base::Accessor {
public:

  /** This method constructs a new IPON_IID2_Type.
    *
    * @param abstractServiceBusConnection The pointer to the Abstract Service Bus Connection that provides the support
    *      required to create objects.
    * @return The newly contructed IPON_IID2_Type.
    */
  static UCI_EXPORT IPON_IID2_Type& create(uci::base::AbstractServiceBusConnection* abstractServiceBusConnection = NULL);

  /** This method constructs a new IPON_IID2_Type initializing the data accessed by the new IPON_IID2_Type using the data
    * accessed by the specified IPON_IID2_Type (cloning).
    *
    * @param accessor The IPON_IID2_Type that provides access to the data that is to be used to initialize the data
    *      accessed by the new created IPON_IID2_Type.
    * @param abstractServiceBusConnection The pointer to the Abstract Service Bus Connection that provides the support
    *      required to create objects.
    * @return The newly contructed IPON_IID2_Type.
    */
  static UCI_EXPORT IPON_IID2_Type& create(const IPON_IID2_Type& accessor, uci::base::AbstractServiceBusConnection* abstractServiceBusConnection = NULL);

  /** This method destroys the specified IPON_IID2_Type. Use of the specified accessor after it has been destroyed will
    * result in undefined behavior.
    *
    * @param accessor The IPON_IID2_Type that is to be destroyed.
    */
  static UCI_EXPORT void destroy(IPON_IID2_Type& accessor);

  /** Returns this accessor's type constant, i.e. iPON_IID2_Type.
    *
    * @return This accessor's type constant, i.e. iPON_IID2_Type.
    */
  virtual uci::base::accessorType::AccessorType getAccessorType() const noexception {
    return uci::type::accessorType::iPON_IID2_Type;
  }

  /** Returns the version that was initialized from the uci:version attribute of IPON_IID2_Type.
    *
    * @return The version that was initialized from the uci:version attribute of IPON_IID2_Type.
    */
  static std::string getUCITypeVersion() {
    return "000.000.000.000";
  }

  /** Initializes the contents of this accessor by copying the contents of the specified accessor.
    *
    * @param accessor The accessor whose contents are to be used to initialize the contents of this accessor.
    */
  virtual void copy(const IPON_IID2_Type& accessor) = 0;

  /** Returns a const reference to the accessor that provides access to the string identified by ProgramCode.
    *
    * @return A const reference to the accessor that provides access to the string identified by ProgramCode.
    */
  virtual const uci::type::IPON_IID2_ProgramCodeType& getProgramCode() const = 0;

  /** Returns a reference to the accessor that provides access to the string identified by ProgramCode.
    *
    * @return A reference to the accessor that provides access to the string identified by ProgramCode.
    */
  virtual uci::type::IPON_IID2_ProgramCodeType& getProgramCode() = 0;

  /** Sets the string identified by ProgramCode to the contents of the string accessed by the specified accessor.
    *
    * @param value The accessor that provides access to the string whose contents are to be used to set the contents of the
    *      string identified by ProgramCode.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::IPON_IID2_Type& setProgramCode(const uci::type::IPON_IID2_ProgramCodeType& value) = 0;

  /** Sets the string identified by ProgramCode to the contents of the string that is accessed by the specified accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::IPON_IID2_Type& setProgramCode(const std::string& value) = 0;

  /** Sets the string identified by ProgramCode to the contents of the string that is accessed by the specified accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::IPON_IID2_Type& setProgramCode(const char* value) = 0;

  /** Returns a const reference to the accessor that provides access to the string identified by SortieNumber.
    *
    * @return A const reference to the accessor that provides access to the string identified by SortieNumber.
    */
  virtual const uci::type::IPON_IID2_SortieNumberType& getSortieNumber() const = 0;

  /** Returns a reference to the accessor that provides access to the string identified by SortieNumber.
    *
    * @return A reference to the accessor that provides access to the string identified by SortieNumber.
    */
  virtual uci::type::IPON_IID2_SortieNumberType& getSortieNumber() = 0;

  /** Sets the string identified by SortieNumber to the contents of the string accessed by the specified accessor.
    *
    * @param value The accessor that provides access to the string whose contents are to be used to set the contents of the
    *      string identified by SortieNumber.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::IPON_IID2_Type& setSortieNumber(const uci::type::IPON_IID2_SortieNumberType& value) = 0;

  /** Sets the string identified by SortieNumber to the contents of the string that is accessed by the specified accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::IPON_IID2_Type& setSortieNumber(const std::string& value) = 0;

  /** Sets the string identified by SortieNumber to the contents of the string that is accessed by the specified accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::IPON_IID2_Type& setSortieNumber(const char* value) = 0;

  /** Returns a const reference to the accessor that provides access to the string identified by ProjectCode.
    *
    * @return A const reference to the accessor that provides access to the string identified by ProjectCode.
    */
  virtual const uci::type::IPON_IID2_ProjectCodeType& getProjectCode() const = 0;

  /** Returns a reference to the accessor that provides access to the string identified by ProjectCode.
    *
    * @return A reference to the accessor that provides access to the string identified by ProjectCode.
    */
  virtual uci::type::IPON_IID2_ProjectCodeType& getProjectCode() = 0;

  /** Sets the string identified by ProjectCode to the contents of the string accessed by the specified accessor.
    *
    * @param value The accessor that provides access to the string whose contents are to be used to set the contents of the
    *      string identified by ProjectCode.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::IPON_IID2_Type& setProjectCode(const uci::type::IPON_IID2_ProjectCodeType& value) = 0;

  /** Sets the string identified by ProjectCode to the contents of the string that is accessed by the specified accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::IPON_IID2_Type& setProjectCode(const std::string& value) = 0;

  /** Sets the string identified by ProjectCode to the contents of the string that is accessed by the specified accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::IPON_IID2_Type& setProjectCode(const char* value) = 0;

protected:

  /** The constructor [only available to derived classes]. */
  IPON_IID2_Type() {
  }

  /** The destructor [only available to derived classes]. */
  ~IPON_IID2_Type() {
  }

  /** The copy constructor [only available to derived classes].
    *
    * @param rhs The IPON_IID2_Type to copy from.
    */
  IPON_IID2_Type(const IPON_IID2_Type& rhs) {
    (void)rhs;
  }

  /** The assignment operator. Sets the contents of this IPON_IID2_Type to the contents of the IPON_IID2_Type on the right
    * hand side (rhs) of the assignment operator [only available to derived classes].
    *
    * @param rhs The IPON_IID2_Type on the right hand side (rhs) of the assignment operator whose contents are used to set
    *      the contents of this IPON_IID2_Type.
    * @return A reference to this IPON_IID2_Type.
    */
  IPON_IID2_Type& operator=(const IPON_IID2_Type& rhs) {
    (void)rhs;

    return *this;
  }

};

} // namespace type
} // namespace uci

#endif // UCI_TYPE_IPON_IID2_TYPE_H

