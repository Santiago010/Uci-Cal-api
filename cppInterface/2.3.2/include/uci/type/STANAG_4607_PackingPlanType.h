/** @file STANAG_4607_PackingPlanType.h
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:08 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#ifndef UCI_TYPE_STANAG_4607_PACKINGPLANTYPE_H
#define UCI_TYPE_STANAG_4607_PACKINGPLANTYPE_H

#include "uci/base/UnsignedIntAccessor.h"
#include "uci/base/export.h"
#include "uci/type/AlphanumericDashSpaceUnderscoreString11Type.h"
#include "uci/type/AlphanumericDashSpaceUnderscoreString13Type.h"
#include "uci/type/FIPS_ClassificationSystemType.h"
#include "uci/type/STANAG_4607_PackingPlanPET.h"
#include "uci/type/VisibleString81Type.h"

/** The namespace in which all UCI data types are declared */
namespace uci {

/** The namespace in which all base data types are declared */
namespace base {

class AbstractServiceBusConnection;

} // namespace base
} // namespace uci

/** The namespace in which all UCI data types are declared */
namespace uci {

/** The namespace in which all generated data types are declared */
namespace type {

/** NOTE: This version of the STANAG_4607_PackingPlanType suffers from the following problems: Some elements are one
  * space longer than allowed by STANAG_4607; some elements' lengths are off by more, short or long; some segments and
  * elements are extraneous (set by platform, not needed in UCI Task message), while other required tasking authority
  * fields are missing; and some required fields are marked optional. The RevisedSTANAG_4607_PackingPlanType resolves
  * these problems.
  */
class STANAG_4607_PackingPlanType : public virtual STANAG_4607_PackingPlanPET {
public:

  /** This method constructs a new STANAG_4607_PackingPlanType.
    *
    * @param abstractServiceBusConnection The pointer to the Abstract Service Bus Connection that provides the support
    *      required to create objects.
    * @return The newly contructed STANAG_4607_PackingPlanType.
    */
  static UCI_EXPORT STANAG_4607_PackingPlanType& create(uci::base::AbstractServiceBusConnection* abstractServiceBusConnection = NULL);

  /** This method constructs a new STANAG_4607_PackingPlanType initializing the data accessed by the new
    * STANAG_4607_PackingPlanType using the data accessed by the specified STANAG_4607_PackingPlanType (cloning).
    *
    * @param accessor The STANAG_4607_PackingPlanType that provides access to the data that is to be used to initialize the
    *      data accessed by the new created STANAG_4607_PackingPlanType.
    * @param abstractServiceBusConnection The pointer to the Abstract Service Bus Connection that provides the support
    *      required to create objects.
    * @return The newly contructed STANAG_4607_PackingPlanType.
    */
  static UCI_EXPORT STANAG_4607_PackingPlanType& create(const STANAG_4607_PackingPlanType& accessor, uci::base::AbstractServiceBusConnection* abstractServiceBusConnection = NULL);

  /** This method destroys the specified STANAG_4607_PackingPlanType. Use of the specified accessor after it has been
    * destroyed will result in undefined behavior.
    *
    * @param accessor The STANAG_4607_PackingPlanType that is to be destroyed.
    */
  static UCI_EXPORT void destroy(STANAG_4607_PackingPlanType& accessor);

  /** Returns this accessor's type constant, i.e. sTANAG_4607_PackingPlanType.
    *
    * @return This accessor's type constant, i.e. sTANAG_4607_PackingPlanType.
    */
  virtual uci::base::accessorType::AccessorType getAccessorType() const noexception {
    return uci::type::accessorType::sTANAG_4607_PackingPlanType;
  }

  /** Returns the version that was initialized from the uci:version attribute of STANAG_4607_PackingPlanType.
    *
    * @return The version that was initialized from the uci:version attribute of STANAG_4607_PackingPlanType.
    */
  static std::string getUCITypeVersion() {
    return "001.000.000.000";
  }

  /** Initializes the contents of this accessor by copying the contents of the specified accessor.
    *
    * @param accessor The accessor whose contents are to be used to initialize the contents of this accessor.
    */
  virtual void copy(const STANAG_4607_PackingPlanType& accessor) = 0;

  /** Returns the value of the SimplePrimitive data type identified by ExerciseIdentifier.
    *
    * @return The value of the simple primitive data type identified by ExerciseIdentifier.
    */
  virtual xs::UnsignedInt getExerciseIdentifier() const = 0;

  /** Sets the value of the SimplePrimitive data type identified by ExerciseIdentifier.
    *
    * @param value The value to set the SimplePrimitve data type to.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setExerciseIdentifier(xs::UnsignedInt value) = 0;

  /** Returns whether the Element identified by ExerciseIdentifier exists (is enabled) or not.
    *
    * @return A boolean indicating whether the Element identified by ExerciseIdentifier is enabled or not.
    */
  virtual bool hasExerciseIdentifier() const = 0;

  /** Clears (disabled) the Element identified by ExerciseIdentifier.
    *
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& clearExerciseIdentifier() = 0;

  /** Returns a const reference to the accessor that provides access to the string identified by ClassificationSystem.
    *
    * @return A const reference to the accessor that provides access to the string identified by ClassificationSystem.
    */
  virtual const uci::type::FIPS_ClassificationSystemType& getClassificationSystem() const = 0;

  /** Returns a reference to the accessor that provides access to the string identified by ClassificationSystem.
    *
    * @return A reference to the accessor that provides access to the string identified by ClassificationSystem.
    */
  virtual uci::type::FIPS_ClassificationSystemType& getClassificationSystem() = 0;

  /** Sets the string identified by ClassificationSystem to the contents of the string accessed by the specified accessor.
    *
    * @param value The accessor that provides access to the string whose contents are to be used to set the contents of the
    *      string identified by ClassificationSystem.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setClassificationSystem(const uci::type::FIPS_ClassificationSystemType& value) = 0;

  /** Sets the string identified by ClassificationSystem to the contents of the string that is accessed by the specified
    * accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setClassificationSystem(const std::string& value) = 0;

  /** Sets the string identified by ClassificationSystem to the contents of the string that is accessed by the specified
    * accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setClassificationSystem(const char* value) = 0;

  /** Returns whether the Element identified by ClassificationSystem exists (is enabled) or not.
    *
    * @return A boolean indicating whether the Element identified by ClassificationSystem is enabled or not.
    */
  virtual bool hasClassificationSystem() const = 0;

  /** Enables the Element identified by ClassificationSystem.
    *
    * @param type = uci::base::accessorType::null This Accessor's accessor type.
    * @return A reference to the accessor that provides access to the string identified by ClassificationSystem.
    */
  virtual uci::type::FIPS_ClassificationSystemType& enableClassificationSystem(uci::base::accessorType::AccessorType type = uci::base::accessorType::null) = 0;

  /** Clears (disabled) the Element identified by ClassificationSystem.
    *
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& clearClassificationSystem() = 0;

  /** Returns a const reference to the accessor that provides access to the string identified by OriginatorIdentifier.
    *
    * @return A const reference to the accessor that provides access to the string identified by OriginatorIdentifier.
    */
  virtual const uci::type::AlphanumericDashSpaceUnderscoreString11Type& getOriginatorIdentifier() const = 0;

  /** Returns a reference to the accessor that provides access to the string identified by OriginatorIdentifier.
    *
    * @return A reference to the accessor that provides access to the string identified by OriginatorIdentifier.
    */
  virtual uci::type::AlphanumericDashSpaceUnderscoreString11Type& getOriginatorIdentifier() = 0;

  /** Sets the string identified by OriginatorIdentifier to the contents of the string accessed by the specified accessor.
    *
    * @param value The accessor that provides access to the string whose contents are to be used to set the contents of the
    *      string identified by OriginatorIdentifier.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setOriginatorIdentifier(const uci::type::AlphanumericDashSpaceUnderscoreString11Type& value) = 0;

  /** Sets the string identified by OriginatorIdentifier to the contents of the string that is accessed by the specified
    * accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setOriginatorIdentifier(const std::string& value) = 0;

  /** Sets the string identified by OriginatorIdentifier to the contents of the string that is accessed by the specified
    * accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setOriginatorIdentifier(const char* value) = 0;

  /** Returns whether the Element identified by OriginatorIdentifier exists (is enabled) or not.
    *
    * @return A boolean indicating whether the Element identified by OriginatorIdentifier is enabled or not.
    */
  virtual bool hasOriginatorIdentifier() const = 0;

  /** Enables the Element identified by OriginatorIdentifier.
    *
    * @param type = uci::base::accessorType::null This Accessor's accessor type.
    * @return A reference to the accessor that provides access to the string identified by OriginatorIdentifier.
    */
  virtual uci::type::AlphanumericDashSpaceUnderscoreString11Type& enableOriginatorIdentifier(uci::base::accessorType::AccessorType type = uci::base::accessorType::null) = 0;

  /** Clears (disabled) the Element identified by OriginatorIdentifier.
    *
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& clearOriginatorIdentifier() = 0;

  /** Returns a const reference to the accessor that provides access to the string identified by MissionPlan.
    *
    * @return A const reference to the accessor that provides access to the string identified by MissionPlan.
    */
  virtual const uci::type::AlphanumericDashSpaceUnderscoreString13Type& getMissionPlan() const = 0;

  /** Returns a reference to the accessor that provides access to the string identified by MissionPlan.
    *
    * @return A reference to the accessor that provides access to the string identified by MissionPlan.
    */
  virtual uci::type::AlphanumericDashSpaceUnderscoreString13Type& getMissionPlan() = 0;

  /** Sets the string identified by MissionPlan to the contents of the string accessed by the specified accessor.
    *
    * @param value The accessor that provides access to the string whose contents are to be used to set the contents of the
    *      string identified by MissionPlan.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setMissionPlan(const uci::type::AlphanumericDashSpaceUnderscoreString13Type& value) = 0;

  /** Sets the string identified by MissionPlan to the contents of the string that is accessed by the specified accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setMissionPlan(const std::string& value) = 0;

  /** Sets the string identified by MissionPlan to the contents of the string that is accessed by the specified accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setMissionPlan(const char* value) = 0;

  /** Returns whether the Element identified by MissionPlan exists (is enabled) or not.
    *
    * @return A boolean indicating whether the Element identified by MissionPlan is enabled or not.
    */
  virtual bool hasMissionPlan() const = 0;

  /** Enables the Element identified by MissionPlan.
    *
    * @param type = uci::base::accessorType::null This Accessor's accessor type.
    * @return A reference to the accessor that provides access to the string identified by MissionPlan.
    */
  virtual uci::type::AlphanumericDashSpaceUnderscoreString13Type& enableMissionPlan(uci::base::accessorType::AccessorType type = uci::base::accessorType::null) = 0;

  /** Clears (disabled) the Element identified by MissionPlan.
    *
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& clearMissionPlan() = 0;

  /** Returns a const reference to the accessor that provides access to the string identified by Recipient.
    *
    * @return A const reference to the accessor that provides access to the string identified by Recipient.
    */
  virtual const uci::type::AlphanumericDashSpaceUnderscoreString11Type& getRecipient() const = 0;

  /** Returns a reference to the accessor that provides access to the string identified by Recipient.
    *
    * @return A reference to the accessor that provides access to the string identified by Recipient.
    */
  virtual uci::type::AlphanumericDashSpaceUnderscoreString11Type& getRecipient() = 0;

  /** Sets the string identified by Recipient to the contents of the string accessed by the specified accessor.
    *
    * @param value The accessor that provides access to the string whose contents are to be used to set the contents of the
    *      string identified by Recipient.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setRecipient(const uci::type::AlphanumericDashSpaceUnderscoreString11Type& value) = 0;

  /** Sets the string identified by Recipient to the contents of the string that is accessed by the specified accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setRecipient(const std::string& value) = 0;

  /** Sets the string identified by Recipient to the contents of the string that is accessed by the specified accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setRecipient(const char* value) = 0;

  /** Returns whether the Element identified by Recipient exists (is enabled) or not.
    *
    * @return A boolean indicating whether the Element identified by Recipient is enabled or not.
    */
  virtual bool hasRecipient() const = 0;

  /** Enables the Element identified by Recipient.
    *
    * @param type = uci::base::accessorType::null This Accessor's accessor type.
    * @return A reference to the accessor that provides access to the string identified by Recipient.
    */
  virtual uci::type::AlphanumericDashSpaceUnderscoreString11Type& enableRecipient(uci::base::accessorType::AccessorType type = uci::base::accessorType::null) = 0;

  /** Clears (disabled) the Element identified by Recipient.
    *
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& clearRecipient() = 0;

  /** Returns a const reference to the accessor that provides access to the string identified by FreeText.
    *
    * @return A const reference to the accessor that provides access to the string identified by FreeText.
    */
  virtual const uci::type::VisibleString81Type& getFreeText() const = 0;

  /** Returns a reference to the accessor that provides access to the string identified by FreeText.
    *
    * @return A reference to the accessor that provides access to the string identified by FreeText.
    */
  virtual uci::type::VisibleString81Type& getFreeText() = 0;

  /** Sets the string identified by FreeText to the contents of the string accessed by the specified accessor.
    *
    * @param value The accessor that provides access to the string whose contents are to be used to set the contents of the
    *      string identified by FreeText.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setFreeText(const uci::type::VisibleString81Type& value) = 0;

  /** Sets the string identified by FreeText to the contents of the string that is accessed by the specified accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setFreeText(const std::string& value) = 0;

  /** Sets the string identified by FreeText to the contents of the string that is accessed by the specified accessor.
    *
    * @param value The string used to set the string data type.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& setFreeText(const char* value) = 0;

  /** Returns whether the Element identified by FreeText exists (is enabled) or not.
    *
    * @return A boolean indicating whether the Element identified by FreeText is enabled or not.
    */
  virtual bool hasFreeText() const = 0;

  /** Enables the Element identified by FreeText.
    *
    * @param type = uci::base::accessorType::null This Accessor's accessor type.
    * @return A reference to the accessor that provides access to the string identified by FreeText.
    */
  virtual uci::type::VisibleString81Type& enableFreeText(uci::base::accessorType::AccessorType type = uci::base::accessorType::null) = 0;

  /** Clears (disabled) the Element identified by FreeText.
    *
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::STANAG_4607_PackingPlanType& clearFreeText() = 0;

protected:

  /** The constructor [only available to derived classes]. */
  STANAG_4607_PackingPlanType() {
  }

  /** The destructor [only available to derived classes]. */
  ~STANAG_4607_PackingPlanType() {
  }

  /** The copy constructor [only available to derived classes].
    *
    * @param rhs The STANAG_4607_PackingPlanType to copy from.
    */
  STANAG_4607_PackingPlanType(const STANAG_4607_PackingPlanType& rhs) {
    (void)rhs;
  }

  /** The assignment operator. Sets the contents of this STANAG_4607_PackingPlanType to the contents of the
    * STANAG_4607_PackingPlanType on the right hand side (rhs) of the assignment operator [only available to derived
    * classes].
    *
    * @param rhs The STANAG_4607_PackingPlanType on the right hand side (rhs) of the assignment operator whose contents are
    *      used to set the contents of this STANAG_4607_PackingPlanType.
    * @return A reference to this STANAG_4607_PackingPlanType.
    */
  STANAG_4607_PackingPlanType& operator=(const STANAG_4607_PackingPlanType& rhs) {
    (void)rhs;

    return *this;
  }

};

} // namespace type
} // namespace uci

#endif // UCI_TYPE_STANAG_4607_PACKINGPLANTYPE_H

