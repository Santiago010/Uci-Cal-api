/** @file SystemEstimationRequestMDT.h
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:08 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#ifndef UCI_TYPE_SYSTEMESTIMATIONREQUESTMDT_H
#define UCI_TYPE_SYSTEMESTIMATIONREQUESTMDT_H

#include "uci/base/BooleanAccessor.h"
#include "uci/base/BoundedList.h"
#include "uci/base/export.h"
#include "uci/type/DurationType.h"
#include "uci/type/EstimationMessageEnum.h"
#include "uci/type/RepeatEnum.h"
#include "uci/type/RequestBaseType.h"
#include "uci/type/SystemEstimationStartType.h"
#include "uci/type/SystemEstimationStopType.h"
#include "uci/type/SystemID_Type.h"

/** The namespace in which all UCI data types are declared */
namespace uci {

/** The namespace in which all base data types are declared */
namespace base {

class AbstractServiceBusConnection;

} // namespace base
} // namespace uci

/** The namespace in which all UCI data types are declared */
namespace uci {

/** The namespace in which all generated data types are declared */
namespace type {

/** See annotations in child elements and messages/elements that use this type for details. */
class SystemEstimationRequestMDT : public virtual RequestBaseType {
public:

  /** This method constructs a new SystemEstimationRequestMDT.
    *
    * @param abstractServiceBusConnection The pointer to the Abstract Service Bus Connection that provides the support
    *      required to create objects.
    * @return The newly contructed SystemEstimationRequestMDT.
    */
  static UCI_EXPORT SystemEstimationRequestMDT& create(uci::base::AbstractServiceBusConnection* abstractServiceBusConnection = NULL);

  /** This method constructs a new SystemEstimationRequestMDT initializing the data accessed by the new
    * SystemEstimationRequestMDT using the data accessed by the specified SystemEstimationRequestMDT (cloning).
    *
    * @param accessor The SystemEstimationRequestMDT that provides access to the data that is to be used to initialize the
    *      data accessed by the new created SystemEstimationRequestMDT.
    * @param abstractServiceBusConnection The pointer to the Abstract Service Bus Connection that provides the support
    *      required to create objects.
    * @return The newly contructed SystemEstimationRequestMDT.
    */
  static UCI_EXPORT SystemEstimationRequestMDT& create(const SystemEstimationRequestMDT& accessor, uci::base::AbstractServiceBusConnection* abstractServiceBusConnection = NULL);

  /** This method destroys the specified SystemEstimationRequestMDT. Use of the specified accessor after it has been
    * destroyed will result in undefined behavior.
    *
    * @param accessor The SystemEstimationRequestMDT that is to be destroyed.
    */
  static UCI_EXPORT void destroy(SystemEstimationRequestMDT& accessor);

  /** Returns this accessor's type constant, i.e. systemEstimationRequestMDT.
    *
    * @return This accessor's type constant, i.e. systemEstimationRequestMDT.
    */
  virtual uci::base::accessorType::AccessorType getAccessorType() const noexception {
    return uci::type::accessorType::systemEstimationRequestMDT;
  }

  /** Returns the version that was initialized from the uci:version attribute of SystemEstimationRequestMDT.
    *
    * @return The version that was initialized from the uci:version attribute of SystemEstimationRequestMDT.
    */
  static std::string getUCITypeVersion() {
    return "002.000.002.001";
  }

  /** Initializes the contents of this accessor by copying the contents of the specified accessor.
    *
    * @param accessor The accessor whose contents are to be used to initialize the contents of this accessor.
    */
  virtual void copy(const SystemEstimationRequestMDT& accessor) = 0;

  /** The type of estimation requested and resulting messages to produce as part of this request. List size for this
    * element is based on "Select All That Apply" condition. [Occurrences: Minimum: 1; Maximum: 16]
    */
  typedef uci::base::BoundedList<uci::type::EstimationMessageEnum, uci::type::accessorType::estimationMessageEnum> RequestType;

  /** Returns a const reference to the accessor that provides access to the complex content identified by SystemID.
    *
    * @return A const reference to the accessor that provides access to the complex content identified by SystemID.
    */
  virtual const uci::type::SystemID_Type& getSystemID() const = 0;

  /** Returns a reference to the accessor that provides access to the complex content identified by SystemID.
    *
    * @return A reference to the accessor that provides access to the complex content identified by SystemID.
    */
  virtual uci::type::SystemID_Type& getSystemID() = 0;

  /** Sets the complex content identified by SystemID to the contents of the complex content accessed by the specified
    * accessor.
    *
    * @param value The accessor that provides access to the complex content whose contents are to be used to set the
    *      contents of the complex content identified by SystemID.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::SystemEstimationRequestMDT& setSystemID(const uci::type::SystemID_Type& value) = 0;

  /** Returns a const reference to the bounded list identified by RequestType.
    *
    * @return A const reference to the bounded list identified by RequestType.
    */
  virtual const uci::type::SystemEstimationRequestMDT::RequestType& getRequestType() const = 0;

  /** Returns a reference to the bounded list identified by RequestType.
    *
    * @return A reference to the bounded list identified by RequestType.
    */
  virtual uci::type::SystemEstimationRequestMDT::RequestType& getRequestType() = 0;

  /** Sets the bounded list identified by RequestType.
    *
    * @param value The bounded list whose contents are to be used to set the value of the bounded list accessed by this
    *      accessor.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::SystemEstimationRequestMDT& setRequestType(const uci::type::SystemEstimationRequestMDT::RequestType& value) = 0;

  /** Returns a const reference to the value of the enumeration identified by RequestFrequencyType.
    *
    * @return A const reference to the value of the enumeration identified by RequestFrequencyType.
    */
  virtual const uci::type::RepeatEnum& getRequestFrequencyType() const = 0;

  /** Returns a reference to the value of the enumeration identified by RequestFrequencyType.
    *
    * @return A reference to the value of the enumeration identified by RequestFrequencyType.
    */
  virtual uci::type::RepeatEnum& getRequestFrequencyType() = 0;

  /** Sets the value of the enumeration identified by RequestFrequencyType.
    *
    * @param value The value to set the enumeration to.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::SystemEstimationRequestMDT& setRequestFrequencyType(const uci::type::RepeatEnum& value) = 0;

  /** Sets the value of the enumeration identified by RequestFrequencyType.
    *
    * @param value The value to set the enumeration to.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::SystemEstimationRequestMDT& setRequestFrequencyType(uci::type::RepeatEnum::EnumerationItem value) = 0;

  /** Returns the value of the SimplePrimitive data type identified by ResultsInNativeMessage.
    *
    * @return The value of the simple primitive data type identified by ResultsInNativeMessage.
    */
  virtual xs::Boolean getResultsInNativeMessage() const = 0;

  /** Sets the value of the SimplePrimitive data type identified by ResultsInNativeMessage.
    *
    * @param value The value to set the SimplePrimitve data type to.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::SystemEstimationRequestMDT& setResultsInNativeMessage(xs::Boolean value) = 0;

  /** Returns the value of the SimplePrimitive data type identified by TimeStep.
    *
    * @return The value of the simple primitive data type identified by TimeStep.
    */
  virtual uci::type::DurationTypeValue getTimeStep() const = 0;

  /** Sets the value of the SimplePrimitive data type identified by TimeStep.
    *
    * @param value The value to set the SimplePrimitve data type to.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::SystemEstimationRequestMDT& setTimeStep(uci::type::DurationTypeValue value) = 0;

  /** Returns whether the Element identified by TimeStep exists (is enabled) or not.
    *
    * @return A boolean indicating whether the Element identified by TimeStep is enabled or not.
    */
  virtual bool hasTimeStep() const = 0;

  /** Clears (disabled) the Element identified by TimeStep.
    *
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::SystemEstimationRequestMDT& clearTimeStep() = 0;

  /** Returns a const reference to the accessor that provides access to the complex content identified by EstimationStart.
    *
    * @return A const reference to the accessor that provides access to the complex content identified by EstimationStart.
    */
  virtual const uci::type::SystemEstimationStartType& getEstimationStart() const = 0;

  /** Returns a reference to the accessor that provides access to the complex content identified by EstimationStart.
    *
    * @return A reference to the accessor that provides access to the complex content identified by EstimationStart.
    */
  virtual uci::type::SystemEstimationStartType& getEstimationStart() = 0;

  /** Sets the complex content identified by EstimationStart to the contents of the complex content accessed by the
    * specified accessor.
    *
    * @param value The accessor that provides access to the complex content whose contents are to be used to set the
    *      contents of the complex content identified by EstimationStart.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::SystemEstimationRequestMDT& setEstimationStart(const uci::type::SystemEstimationStartType& value) = 0;

  /** Returns whether the Element identified by EstimationStart exists (is enabled) or not.
    *
    * @return A boolean indicating whether the Element identified by EstimationStart is enabled or not.
    */
  virtual bool hasEstimationStart() const = 0;

  /** Enables the Element identified by EstimationStart.
    *
    * @param type = uci::base::accessorType::null This Accessor's accessor type.
    * @return A reference to the accessor that provides access to the complex content identified by EstimationStart.
    */
  virtual uci::type::SystemEstimationStartType& enableEstimationStart(uci::base::accessorType::AccessorType type = uci::base::accessorType::null) = 0;

  /** Clears (disabled) the Element identified by EstimationStart.
    *
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::SystemEstimationRequestMDT& clearEstimationStart() = 0;

  /** Returns a const reference to the accessor that provides access to the complex content identified by EstimationEnd.
    *
    * @return A const reference to the accessor that provides access to the complex content identified by EstimationEnd.
    */
  virtual const uci::type::SystemEstimationStopType& getEstimationEnd() const = 0;

  /** Returns a reference to the accessor that provides access to the complex content identified by EstimationEnd.
    *
    * @return A reference to the accessor that provides access to the complex content identified by EstimationEnd.
    */
  virtual uci::type::SystemEstimationStopType& getEstimationEnd() = 0;

  /** Sets the complex content identified by EstimationEnd to the contents of the complex content accessed by the specified
    * accessor.
    *
    * @param value The accessor that provides access to the complex content whose contents are to be used to set the
    *      contents of the complex content identified by EstimationEnd.
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::SystemEstimationRequestMDT& setEstimationEnd(const uci::type::SystemEstimationStopType& value) = 0;

  /** Returns whether the Element identified by EstimationEnd exists (is enabled) or not.
    *
    * @return A boolean indicating whether the Element identified by EstimationEnd is enabled or not.
    */
  virtual bool hasEstimationEnd() const = 0;

  /** Enables the Element identified by EstimationEnd.
    *
    * @param type = uci::base::accessorType::null This Accessor's accessor type.
    * @return A reference to the accessor that provides access to the complex content identified by EstimationEnd.
    */
  virtual uci::type::SystemEstimationStopType& enableEstimationEnd(uci::base::accessorType::AccessorType type = uci::base::accessorType::null) = 0;

  /** Clears (disabled) the Element identified by EstimationEnd.
    *
    * @return A reference to the object on which this method was called.
    */
  virtual uci::type::SystemEstimationRequestMDT& clearEstimationEnd() = 0;

protected:

  /** The constructor [only available to derived classes]. */
  SystemEstimationRequestMDT() {
  }

  /** The destructor [only available to derived classes]. */
  ~SystemEstimationRequestMDT() {
  }

  /** The copy constructor [only available to derived classes].
    *
    * @param rhs The SystemEstimationRequestMDT to copy from.
    */
  SystemEstimationRequestMDT(const SystemEstimationRequestMDT& rhs) {
    (void)rhs;
  }

  /** The assignment operator. Sets the contents of this SystemEstimationRequestMDT to the contents of the
    * SystemEstimationRequestMDT on the right hand side (rhs) of the assignment operator [only available to derived
    * classes].
    *
    * @param rhs The SystemEstimationRequestMDT on the right hand side (rhs) of the assignment operator whose contents are
    *      used to set the contents of this SystemEstimationRequestMDT.
    * @return A reference to this SystemEstimationRequestMDT.
    */
  SystemEstimationRequestMDT& operator=(const SystemEstimationRequestMDT& rhs) {
    (void)rhs;

    return *this;
  }

};

} // namespace type
} // namespace uci

#endif // UCI_TYPE_SYSTEMESTIMATIONREQUESTMDT_H

