/** @file PO_CommandResponseType.h
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:14 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#ifndef ASB_UCI_TYPE_PO_COMMANDRESPONSETYPE_H
#define ASB_UCI_TYPE_PO_COMMANDRESPONSETYPE_H

#include <memory>

#include <boost/optional/optional.hpp>
#include <boost/property_tree/ptree.hpp>

#include "../../../include/asb_uci/base/BoundedList.h"
#include "../../../include/asb_uci/type/PO_CapabilityEnum.h"
#include "../../../include/asb_uci/type/SensorSpectrumEnum.h"
#include "../../../../cppInterface/2.3.2/include/uci/type/PO_CommandResponseType.h"

/**  */
namespace asb_uci {

/** The namespace in which all generated data types are declared */
namespace type {

class PO_CollectionConstraintsSettingsType;
class PO_ProductOutputCommandImageryType;

/** See annotations in child elements and messages/elements that use this type for details. */
class PO_CommandResponseType : public virtual uci::type::PO_CommandResponseType {
public:
  /** Indicates the frequency band or spectrum that is used to search, track, or generate products with the PO subsystem.
    * List size for this element is based on "Select All That Apply" condition. [Occurrences: Minimum: 0; Maximum: 14]
    */
  using SensorSpectrum = asb_uci::base::BoundedList<uci::type::SensorSpectrumEnum, uci::type::accessorType::sensorSpectrumEnum, asb_uci::type::SensorSpectrumEnum>;

  /** Indicates a required output Product of the Command. Only Products consistent with Passive Optical and supported by
    * the commanded Passive Optical Capability should be requested. If omitted, no output Product should be produced. See
    * ProductTypeEnum for further details. If the associated Capability supports product generators, this element should be
    * omitted and product output should be controlled via the sibling ComponentSettings element. [Occurrences: Minimum: 0;
    * Maximum: MAX_LENGTH]
    */
  using ProductOutput = asb_uci::base::BoundedList<uci::type::PO_ProductOutputCommandImageryType, uci::type::accessorType::pO_ProductOutputCommandImageryType, asb_uci::type::PO_ProductOutputCommandImageryType>;

  /** The constructor */
  PO_CommandResponseType();

  /** The copy constructor
    *
    * @param rhs The PO_CommandResponseType to copy from
    */
  PO_CommandResponseType(const PO_CommandResponseType& rhs) = delete;

  /** The move constructor
    *
    * @param rhs The PO_CommandResponseType to move from
    */
  PO_CommandResponseType(PO_CommandResponseType&& rhs) = delete;

  /** The assignment operator
    *
    * @param rhs The PO_CommandResponseType to copy from
    * @return The PO_CommandResponseType that was assigned
    */
  PO_CommandResponseType& operator=(const PO_CommandResponseType& rhs) = delete;

  /** The move assignment operator
    *
    * @param rhs The PO_CommandResponseType to move from
    * @return The PO_CommandResponseType that was assigned
    */
  PO_CommandResponseType& operator=(PO_CommandResponseType&& rhs) = delete;

  /** The destructor */
  virtual ~PO_CommandResponseType();

  /** Performs a deep copy of the message data from the specified accessor into the object being operated on by copy(). Any
    * message data originally held by this object will be freed prior to the copy
    *
    * @param accessor The uci::type::PO_CommandResponseType whose contents are to be used to set this
    *      uci::type::PO_CommandResponseType's contents.
    */
  void copy(const uci::type::PO_CommandResponseType& accessor) override;

  /** Performs a deep copy of the message data from the specified accessor into the object being operated on by copy(). Any
    * message data originally held by this object will be freed prior to the copy
    *
    * @param accessor The uci::type::PO_CommandResponseType whose contents are to be used to set this
    *      uci::type::PO_CommandResponseType's contents.
    * @param checkIfDerivation Check if accessor to copy is a derived type.
    */
  void copyImpl(const uci::type::PO_CommandResponseType& accessor, bool checkIfDerivation);

  /** Resets the contents of this object returning these contents to their original state. */
  void reset() noexcept override;

  /** Returns the contents of the message's Capability field
    *
    * @return The contents of the Capability field
    */
  const uci::type::PO_CapabilityEnum& getCapability() const override;

  /** Returns the contents of the message's Capability field
    *
    * @return The contents of the Capability field
    */
  uci::type::PO_CapabilityEnum& getCapability() override;

  /** Sets the contents of the message's Capability field
    *
    * @param accessor The accessor to use to set the Capability field to
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_CommandResponseType& setCapability(const uci::type::PO_CapabilityEnum& accessor) override;

  /** Sets the contents of the message's Capability field
    *
    * @param value The new value to set the Capability field to
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_CommandResponseType& setCapability(uci::type::PO_CapabilityEnum::EnumerationItem value) override;

  /** Returns the accessor to the SensorSpectrum field contained in this message fragment
    *
    * @return The const reference to the accessor to the SensorSpectrum field.
    */
  const uci::type::PO_CommandResponseType::SensorSpectrum& getSensorSpectrum() const override;

  /** Returns the accessor to the SensorSpectrum field contained in this message fragment
    *
    * @return The reference to the accessor to the SensorSpectrum field.
    */
  uci::type::PO_CommandResponseType::SensorSpectrum& getSensorSpectrum() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_CommandResponseType& setSensorSpectrum(const uci::type::PO_CommandResponseType::SensorSpectrum& accessor) override;

  /** Returns the accessor that provides access to the contents of the optional field accessed by this accesor
    *
    * @return The accessor that provides access to the contents of the optional field accessed by this accesor
    */
  uci::type::PO_CollectionConstraintsSettingsType& getCollectionConstraints_() const;

  /** Returns the accessor that provides access to the contents of the optional field accessed by this accesor
    *
    * @return The accessor that provides access to the contents of the optional field accessed by this accesor
    */
  const uci::type::PO_CollectionConstraintsSettingsType& getCollectionConstraints() const override;

  /** Returns the accessor that provides access to the contents of the optional field accessed by this accesor
    *
    * @return The accessor that provides access to the contents of the optional field accessed by this accesor
    */
  uci::type::PO_CollectionConstraintsSettingsType& getCollectionConstraints() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_CommandResponseType& setCollectionConstraints(const uci::type::PO_CollectionConstraintsSettingsType& accessor) override;

  /** Returns whether this optional field CollectionConstraintsis available
    *
    * @return Whether the optional field is available (true) or not (false).
    */
  bool hasCollectionConstraints() const noexcept override;

  /** Enables the optional field such that getCollectionConstraints will return the optional field and not throw an
    * exception when invoked.
    *
    * @param type The value to set the optional field to
    * @return The accessor that provides access to the contents of the optional field accessed by this accesor
    */
  uci::type::PO_CollectionConstraintsSettingsType& enableCollectionConstraints(uci::base::accessorType::AccessorType type = uci::base::accessorType::null) override;

  /** Clears the value of the optional field accessed by this accesor
    *
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_CommandResponseType& clearCollectionConstraints() noexcept override;

  /** Returns the accessor to the ProductOutput field contained in this message fragment
    *
    * @return The const reference to the accessor to the ProductOutput field.
    */
  const uci::type::PO_CommandResponseType::ProductOutput& getProductOutput() const override;

  /** Returns the accessor to the ProductOutput field contained in this message fragment
    *
    * @return The reference to the accessor to the ProductOutput field.
    */
  uci::type::PO_CommandResponseType::ProductOutput& getProductOutput() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_CommandResponseType& setProductOutput(const uci::type::PO_CommandResponseType::ProductOutput& accessor) override;

  /** 
    *
    * @param type .
    * @return .
    */
  static std::unique_ptr<PO_CommandResponseType> create(uci::base::accessorType::AccessorType type);

  /** 
    *
    * @param propTree .
    * @param accessor .
    * @param nodeName .
    * @param nsPrefix .
    * @param topLevel .
    */
  static void deserialize(const boost::property_tree::ptree& propTree, uci::type::PO_CommandResponseType& accessor, std::string& nodeName, std::string& nsPrefix, bool topLevel = false);

  /** 
    *
    * @param accessor .
    * @param propTree .
    * @param nodeName .
    * @param createNode .
    * @param addTypeAttribute .
    * @param checkIfDerivation .
    * @param topLevel .
    * @return .
    */
  static std::string serialize(const uci::type::PO_CommandResponseType& accessor, boost::property_tree::ptree& propTree, const std::string& nodeName, bool createNode = true, bool addTypeAttribute = false, bool checkIfDerivation = true, bool topLevel = false);

private:
  std::unique_ptr<PO_CapabilityEnum> capability_Accessor;
  std::unique_ptr<SensorSpectrum> sensorSpectrum_Accessor;
  std::unique_ptr<PO_CollectionConstraintsSettingsType> collectionConstraints_Accessor;
  std::unique_ptr<ProductOutput> productOutput_Accessor;

};

} // namespace type

} // namespace asb_uci

#endif // ASB_UCI_TYPE_PO_COMMANDRESPONSETYPE_H
