/** @file PO_ComponentSettingsGeneratorSettingsType.h
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:14 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#ifndef ASB_UCI_TYPE_PO_COMPONENTSETTINGSGENERATORSETTINGSTYPE_H
#define ASB_UCI_TYPE_PO_COMPONENTSETTINGSGENERATORSETTINGSTYPE_H

#include <memory>

#include <boost/optional/optional.hpp>
#include <boost/property_tree/ptree.hpp>

#include "asb_uci/base/BoundedList.h"
#include "uci/type/PO_ComponentSettingsGeneratorSettingsType.h"

/**  */
namespace asb_uci {

/** The namespace in which all generated data types are declared */
namespace type {

class DoubleMinMaxType;

/** See annotations in child elements and messages/elements that use this type for details. */
class PO_ComponentSettingsGeneratorSettingsType : public virtual uci::type::PO_ComponentSettingsGeneratorSettingsType {
public:
  /** The new settings of the visible image generator. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  using VisibleImageSetting = asb_uci::base::BoundedList<uci::type::DoubleMinMaxType, uci::type::accessorType::doubleMinMaxType, asb_uci::type::DoubleMinMaxType>;

  /** The new settings of the infrared image generator. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  using InfraredImageSetting = asb_uci::base::BoundedList<uci::type::DoubleMinMaxType, uci::type::accessorType::doubleMinMaxType, asb_uci::type::DoubleMinMaxType>;

  /** The new settings of the hyperspectral image generator. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  using HyperspectralImageSetting = asb_uci::base::BoundedList<uci::type::DoubleMinMaxType, uci::type::accessorType::doubleMinMaxType, asb_uci::type::DoubleMinMaxType>;

  /** The new settings of the image generator. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  using ImageSetting = asb_uci::base::BoundedList<uci::type::DoubleMinMaxType, uci::type::accessorType::doubleMinMaxType, asb_uci::type::DoubleMinMaxType>;

  /** The new settings of the visible video clip generator. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  using VideoClipVisibleSetting = asb_uci::base::BoundedList<uci::type::DoubleMinMaxType, uci::type::accessorType::doubleMinMaxType, asb_uci::type::DoubleMinMaxType>;

  /** The new settings of the infrared video clip generator. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  using VideoClipInfraredSetting = asb_uci::base::BoundedList<uci::type::DoubleMinMaxType, uci::type::accessorType::doubleMinMaxType, asb_uci::type::DoubleMinMaxType>;

  /** The new settings of the hyperspectral video clip generator. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  using VideoClipHyperspectralSetting = asb_uci::base::BoundedList<uci::type::DoubleMinMaxType, uci::type::accessorType::doubleMinMaxType, asb_uci::type::DoubleMinMaxType>;

  /** The new settings of the video clip generator. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  using VideoClipSetting = asb_uci::base::BoundedList<uci::type::DoubleMinMaxType, uci::type::accessorType::doubleMinMaxType, asb_uci::type::DoubleMinMaxType>;

  /** The new settings of the visible video stream generator. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  using VideoStreamVisibleSetting = asb_uci::base::BoundedList<uci::type::DoubleMinMaxType, uci::type::accessorType::doubleMinMaxType, asb_uci::type::DoubleMinMaxType>;

  /** The new settings of the infrared video stream generator. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  using VideoStreamInfraredSetting = asb_uci::base::BoundedList<uci::type::DoubleMinMaxType, uci::type::accessorType::doubleMinMaxType, asb_uci::type::DoubleMinMaxType>;

  /** The new settings of the hyperspectral video stream generator. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  using VideoStreamHyperspectralSetting = asb_uci::base::BoundedList<uci::type::DoubleMinMaxType, uci::type::accessorType::doubleMinMaxType, asb_uci::type::DoubleMinMaxType>;

  /** The new settings of the stream generator. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH] */
  using VideoStreamSetting = asb_uci::base::BoundedList<uci::type::DoubleMinMaxType, uci::type::accessorType::doubleMinMaxType, asb_uci::type::DoubleMinMaxType>;

  /** The constructor */
  PO_ComponentSettingsGeneratorSettingsType();

  /** The copy constructor
    *
    * @param rhs The PO_ComponentSettingsGeneratorSettingsType to copy from
    */
  PO_ComponentSettingsGeneratorSettingsType(const PO_ComponentSettingsGeneratorSettingsType& rhs) = delete;

  /** The move constructor
    *
    * @param rhs The PO_ComponentSettingsGeneratorSettingsType to move from
    */
  PO_ComponentSettingsGeneratorSettingsType(PO_ComponentSettingsGeneratorSettingsType&& rhs) = delete;

  /** The assignment operator
    *
    * @param rhs The PO_ComponentSettingsGeneratorSettingsType to copy from
    * @return The PO_ComponentSettingsGeneratorSettingsType that was assigned
    */
  PO_ComponentSettingsGeneratorSettingsType& operator=(const PO_ComponentSettingsGeneratorSettingsType& rhs) = delete;

  /** The move assignment operator
    *
    * @param rhs The PO_ComponentSettingsGeneratorSettingsType to move from
    * @return The PO_ComponentSettingsGeneratorSettingsType that was assigned
    */
  PO_ComponentSettingsGeneratorSettingsType& operator=(PO_ComponentSettingsGeneratorSettingsType&& rhs) = delete;

  /** The destructor */
  virtual ~PO_ComponentSettingsGeneratorSettingsType();

  /** Performs a deep copy of the message data from the specified accessor into the object being operated on by copy(). Any
    * message data originally held by this object will be freed prior to the copy
    *
    * @param accessor The uci::type::PO_ComponentSettingsGeneratorSettingsType whose contents are to be used to set this
    *      uci::type::PO_ComponentSettingsGeneratorSettingsType's contents.
    */
  void copy(const uci::type::PO_ComponentSettingsGeneratorSettingsType& accessor) override;

  /** Performs a deep copy of the message data from the specified accessor into the object being operated on by copy(). Any
    * message data originally held by this object will be freed prior to the copy
    *
    * @param accessor The uci::type::PO_ComponentSettingsGeneratorSettingsType whose contents are to be used to set this
    *      uci::type::PO_ComponentSettingsGeneratorSettingsType's contents.
    * @param checkIfDerivation Check if accessor to copy is a derived type.
    */
  void copyImpl(const uci::type::PO_ComponentSettingsGeneratorSettingsType& accessor, bool checkIfDerivation);

  /** Resets the contents of this object returning these contents to their original state. */
  void reset() noexcept override;

  /** Returns the accessor to the VisibleImageSetting field contained in this message fragment
    *
    * @return The const reference to the accessor to the VisibleImageSetting field.
    */
  const uci::type::PO_ComponentSettingsGeneratorSettingsType::VisibleImageSetting& getVisibleImageSetting() const override;

  /** Returns the accessor to the VisibleImageSetting field contained in this message fragment
    *
    * @return The reference to the accessor to the VisibleImageSetting field.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType::VisibleImageSetting& getVisibleImageSetting() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType& setVisibleImageSetting(const uci::type::PO_ComponentSettingsGeneratorSettingsType::VisibleImageSetting& accessor) override;

  /** Returns the accessor to the InfraredImageSetting field contained in this message fragment
    *
    * @return The const reference to the accessor to the InfraredImageSetting field.
    */
  const uci::type::PO_ComponentSettingsGeneratorSettingsType::InfraredImageSetting& getInfraredImageSetting() const override;

  /** Returns the accessor to the InfraredImageSetting field contained in this message fragment
    *
    * @return The reference to the accessor to the InfraredImageSetting field.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType::InfraredImageSetting& getInfraredImageSetting() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType& setInfraredImageSetting(const uci::type::PO_ComponentSettingsGeneratorSettingsType::InfraredImageSetting& accessor) override;

  /** Returns the accessor to the HyperspectralImageSetting field contained in this message fragment
    *
    * @return The const reference to the accessor to the HyperspectralImageSetting field.
    */
  const uci::type::PO_ComponentSettingsGeneratorSettingsType::HyperspectralImageSetting& getHyperspectralImageSetting() const override;

  /** Returns the accessor to the HyperspectralImageSetting field contained in this message fragment
    *
    * @return The reference to the accessor to the HyperspectralImageSetting field.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType::HyperspectralImageSetting& getHyperspectralImageSetting() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType& setHyperspectralImageSetting(const uci::type::PO_ComponentSettingsGeneratorSettingsType::HyperspectralImageSetting& accessor) override;

  /** Returns the accessor to the ImageSetting field contained in this message fragment
    *
    * @return The const reference to the accessor to the ImageSetting field.
    */
  const uci::type::PO_ComponentSettingsGeneratorSettingsType::ImageSetting& getImageSetting() const override;

  /** Returns the accessor to the ImageSetting field contained in this message fragment
    *
    * @return The reference to the accessor to the ImageSetting field.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType::ImageSetting& getImageSetting() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType& setImageSetting(const uci::type::PO_ComponentSettingsGeneratorSettingsType::ImageSetting& accessor) override;

  /** Returns the accessor to the VideoClipVisibleSetting field contained in this message fragment
    *
    * @return The const reference to the accessor to the VideoClipVisibleSetting field.
    */
  const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoClipVisibleSetting& getVideoClipVisibleSetting() const override;

  /** Returns the accessor to the VideoClipVisibleSetting field contained in this message fragment
    *
    * @return The reference to the accessor to the VideoClipVisibleSetting field.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoClipVisibleSetting& getVideoClipVisibleSetting() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType& setVideoClipVisibleSetting(const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoClipVisibleSetting& accessor) override;

  /** Returns the accessor to the VideoClipInfraredSetting field contained in this message fragment
    *
    * @return The const reference to the accessor to the VideoClipInfraredSetting field.
    */
  const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoClipInfraredSetting& getVideoClipInfraredSetting() const override;

  /** Returns the accessor to the VideoClipInfraredSetting field contained in this message fragment
    *
    * @return The reference to the accessor to the VideoClipInfraredSetting field.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoClipInfraredSetting& getVideoClipInfraredSetting() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType& setVideoClipInfraredSetting(const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoClipInfraredSetting& accessor) override;

  /** Returns the accessor to the VideoClipHyperspectralSetting field contained in this message fragment
    *
    * @return The const reference to the accessor to the VideoClipHyperspectralSetting field.
    */
  const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoClipHyperspectralSetting& getVideoClipHyperspectralSetting() const override;

  /** Returns the accessor to the VideoClipHyperspectralSetting field contained in this message fragment
    *
    * @return The reference to the accessor to the VideoClipHyperspectralSetting field.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoClipHyperspectralSetting& getVideoClipHyperspectralSetting() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType& setVideoClipHyperspectralSetting(const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoClipHyperspectralSetting& accessor) override;

  /** Returns the accessor to the VideoClipSetting field contained in this message fragment
    *
    * @return The const reference to the accessor to the VideoClipSetting field.
    */
  const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoClipSetting& getVideoClipSetting() const override;

  /** Returns the accessor to the VideoClipSetting field contained in this message fragment
    *
    * @return The reference to the accessor to the VideoClipSetting field.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoClipSetting& getVideoClipSetting() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType& setVideoClipSetting(const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoClipSetting& accessor) override;

  /** Returns the accessor to the VideoStreamVisibleSetting field contained in this message fragment
    *
    * @return The const reference to the accessor to the VideoStreamVisibleSetting field.
    */
  const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoStreamVisibleSetting& getVideoStreamVisibleSetting() const override;

  /** Returns the accessor to the VideoStreamVisibleSetting field contained in this message fragment
    *
    * @return The reference to the accessor to the VideoStreamVisibleSetting field.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoStreamVisibleSetting& getVideoStreamVisibleSetting() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType& setVideoStreamVisibleSetting(const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoStreamVisibleSetting& accessor) override;

  /** Returns the accessor to the VideoStreamInfraredSetting field contained in this message fragment
    *
    * @return The const reference to the accessor to the VideoStreamInfraredSetting field.
    */
  const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoStreamInfraredSetting& getVideoStreamInfraredSetting() const override;

  /** Returns the accessor to the VideoStreamInfraredSetting field contained in this message fragment
    *
    * @return The reference to the accessor to the VideoStreamInfraredSetting field.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoStreamInfraredSetting& getVideoStreamInfraredSetting() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType& setVideoStreamInfraredSetting(const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoStreamInfraredSetting& accessor) override;

  /** Returns the accessor to the VideoStreamHyperspectralSetting field contained in this message fragment
    *
    * @return The const reference to the accessor to the VideoStreamHyperspectralSetting field.
    */
  const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoStreamHyperspectralSetting& getVideoStreamHyperspectralSetting() const override;

  /** Returns the accessor to the VideoStreamHyperspectralSetting field contained in this message fragment
    *
    * @return The reference to the accessor to the VideoStreamHyperspectralSetting field.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoStreamHyperspectralSetting& getVideoStreamHyperspectralSetting() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType& setVideoStreamHyperspectralSetting(const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoStreamHyperspectralSetting& accessor) override;

  /** Returns the accessor to the VideoStreamSetting field contained in this message fragment
    *
    * @return The const reference to the accessor to the VideoStreamSetting field.
    */
  const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoStreamSetting& getVideoStreamSetting() const override;

  /** Returns the accessor to the VideoStreamSetting field contained in this message fragment
    *
    * @return The reference to the accessor to the VideoStreamSetting field.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoStreamSetting& getVideoStreamSetting() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::PO_ComponentSettingsGeneratorSettingsType& setVideoStreamSetting(const uci::type::PO_ComponentSettingsGeneratorSettingsType::VideoStreamSetting& accessor) override;

  /** 
    *
    * @param type .
    * @return .
    */
  static std::unique_ptr<PO_ComponentSettingsGeneratorSettingsType> create(uci::base::accessorType::AccessorType type);

  /** 
    *
    * @param propTree .
    * @param accessor .
    * @param nodeName .
    * @param nsPrefix .
    * @param topLevel .
    */
  static void deserialize(const boost::property_tree::ptree& propTree, uci::type::PO_ComponentSettingsGeneratorSettingsType& accessor, std::string& nodeName, std::string& nsPrefix, bool topLevel = false);

  /** 
    *
    * @param accessor .
    * @param propTree .
    * @param nodeName .
    * @param createNode .
    * @param addTypeAttribute .
    * @param checkIfDerivation .
    * @param topLevel .
    * @return .
    */
  static std::string serialize(const uci::type::PO_ComponentSettingsGeneratorSettingsType& accessor, boost::property_tree::ptree& propTree, const std::string& nodeName, bool createNode = true, bool addTypeAttribute = false, bool checkIfDerivation = true, bool topLevel = false);

private:
  std::unique_ptr<VisibleImageSetting> visibleImageSetting_Accessor;
  std::unique_ptr<InfraredImageSetting> infraredImageSetting_Accessor;
  std::unique_ptr<HyperspectralImageSetting> hyperspectralImageSetting_Accessor;
  std::unique_ptr<ImageSetting> imageSetting_Accessor;
  std::unique_ptr<VideoClipVisibleSetting> videoClipVisibleSetting_Accessor;
  std::unique_ptr<VideoClipInfraredSetting> videoClipInfraredSetting_Accessor;
  std::unique_ptr<VideoClipHyperspectralSetting> videoClipHyperspectralSetting_Accessor;
  std::unique_ptr<VideoClipSetting> videoClipSetting_Accessor;
  std::unique_ptr<VideoStreamVisibleSetting> videoStreamVisibleSetting_Accessor;
  std::unique_ptr<VideoStreamInfraredSetting> videoStreamInfraredSetting_Accessor;
  std::unique_ptr<VideoStreamHyperspectralSetting> videoStreamHyperspectralSetting_Accessor;
  std::unique_ptr<VideoStreamSetting> videoStreamSetting_Accessor;

};

} // namespace type

} // namespace asb_uci

#endif // ASB_UCI_TYPE_PO_COMPONENTSETTINGSGENERATORSETTINGSTYPE_H
