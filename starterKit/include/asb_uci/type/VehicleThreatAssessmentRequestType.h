/** @file VehicleThreatAssessmentRequestType.h
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:15 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#ifndef ASB_UCI_TYPE_VEHICLETHREATASSESSMENTREQUESTTYPE_H
#define ASB_UCI_TYPE_VEHICLETHREATASSESSMENTREQUESTTYPE_H

#include <memory>

#include <boost/optional/optional.hpp>
#include <boost/property_tree/ptree.hpp>

#include "asb_uci/base/BoundedList.h"
#include "asb_uci/type/AssessmentSuppressionEnum.h"
#include "asb_uci/type/ThreatCapabilityEnum.h"
#include "asb_xs/type/simpleXmlSchemaPrimitives.h"
#include "uci/type/VehicleThreatAssessmentRequestType.h"

/**  */
namespace asb_uci {

/** The namespace in which all generated data types are declared */
namespace type {

class DetectionEnvelopeParametersType;
class EntityID_Type;
class SystemPositionSpecificationType;

/** The inputs used in generating and/or requesting a Vehicle Threat Assessment. */
class VehicleThreatAssessmentRequestType : public virtual uci::type::VehicleThreatAssessmentRequestType {
public:
  /** This element identifies the vehicle that should be used for threat assessment. [Occurrences: Minimum: 1; Maximum:
    * MAX_LENGTH]
    */
  using SystemToAssess = asb_uci::base::BoundedList<uci::type::SystemPositionSpecificationType, uci::type::accessorType::systemPositionSpecificationType, asb_uci::type::SystemPositionSpecificationType>;

  /** This element identifies other vehicles that are to be considered for the assessment, but not assessed (i.e. include a
    * vehicle with a supporting capability, but there is no need to assess the supporting vehicle, just the vehicle being
    * supported). [Occurrences: Minimum: 0; Maximum: MAX_LENGTH]
    */
  using SupportingSystem = asb_uci::base::BoundedList<uci::type::SystemPositionSpecificationType, uci::type::accessorType::systemPositionSpecificationType, asb_uci::type::SystemPositionSpecificationType>;

  /** This element is used if the threat assessment should be generated in regards to only certain threats. If this element
    * is not specified then all entities are considered. [Occurrences: Minimum: 0; Maximum: MAX_LENGTH]
    */
  using EntityID = asb_uci::base::BoundedList<uci::type::EntityID_Type, uci::type::accessorType::entityID_Type, asb_uci::type::EntityID_Type>;

  /** The constructor */
  VehicleThreatAssessmentRequestType();

  /** The copy constructor
    *
    * @param rhs The VehicleThreatAssessmentRequestType to copy from
    */
  VehicleThreatAssessmentRequestType(const VehicleThreatAssessmentRequestType& rhs) = delete;

  /** The move constructor
    *
    * @param rhs The VehicleThreatAssessmentRequestType to move from
    */
  VehicleThreatAssessmentRequestType(VehicleThreatAssessmentRequestType&& rhs) = delete;

  /** The assignment operator
    *
    * @param rhs The VehicleThreatAssessmentRequestType to copy from
    * @return The VehicleThreatAssessmentRequestType that was assigned
    */
  VehicleThreatAssessmentRequestType& operator=(const VehicleThreatAssessmentRequestType& rhs) = delete;

  /** The move assignment operator
    *
    * @param rhs The VehicleThreatAssessmentRequestType to move from
    * @return The VehicleThreatAssessmentRequestType that was assigned
    */
  VehicleThreatAssessmentRequestType& operator=(VehicleThreatAssessmentRequestType&& rhs) = delete;

  /** The destructor */
  virtual ~VehicleThreatAssessmentRequestType();

  /** Performs a deep copy of the message data from the specified accessor into the object being operated on by copy(). Any
    * message data originally held by this object will be freed prior to the copy
    *
    * @param accessor The uci::type::VehicleThreatAssessmentRequestType whose contents are to be used to set this
    *      uci::type::VehicleThreatAssessmentRequestType's contents.
    */
  void copy(const uci::type::VehicleThreatAssessmentRequestType& accessor) override;

  /** Performs a deep copy of the message data from the specified accessor into the object being operated on by copy(). Any
    * message data originally held by this object will be freed prior to the copy
    *
    * @param accessor The uci::type::VehicleThreatAssessmentRequestType whose contents are to be used to set this
    *      uci::type::VehicleThreatAssessmentRequestType's contents.
    * @param checkIfDerivation Check if accessor to copy is a derived type.
    */
  void copyImpl(const uci::type::VehicleThreatAssessmentRequestType& accessor, bool checkIfDerivation);

  /** Resets the contents of this object returning these contents to their original state. */
  void reset() noexcept override;

  /** Returns the contents of the message's AssessmentSuppression field
    *
    * @return The contents of the AssessmentSuppression field
    */
  const uci::type::AssessmentSuppressionEnum& getAssessmentSuppression() const override;

  /** Returns the contents of the message's AssessmentSuppression field
    *
    * @return The contents of the AssessmentSuppression field
    */
  uci::type::AssessmentSuppressionEnum& getAssessmentSuppression() override;

  /** Sets the contents of the message's AssessmentSuppression field
    *
    * @param accessor The accessor to use to set the AssessmentSuppression field to
    * @return A reference to the object on which this method was called.
    */
  uci::type::VehicleThreatAssessmentRequestType& setAssessmentSuppression(const uci::type::AssessmentSuppressionEnum& accessor) override;

  /** Sets the contents of the message's AssessmentSuppression field
    *
    * @param value The new value to set the AssessmentSuppression field to
    * @return A reference to the object on which this method was called.
    */
  uci::type::VehicleThreatAssessmentRequestType& setAssessmentSuppression(uci::type::AssessmentSuppressionEnum::EnumerationItem value) override;

  /** Returns the contents of the message's ThreatCapability field
    *
    * @return The contents of the ThreatCapability field
    */
  const uci::type::ThreatCapabilityEnum& getThreatCapability() const override;

  /** Returns the contents of the message's ThreatCapability field
    *
    * @return The contents of the ThreatCapability field
    */
  uci::type::ThreatCapabilityEnum& getThreatCapability() override;

  /** Sets the contents of the message's ThreatCapability field
    *
    * @param accessor The accessor to use to set the ThreatCapability field to
    * @return A reference to the object on which this method was called.
    */
  uci::type::VehicleThreatAssessmentRequestType& setThreatCapability(const uci::type::ThreatCapabilityEnum& accessor) override;

  /** Sets the contents of the message's ThreatCapability field
    *
    * @param value The new value to set the ThreatCapability field to
    * @return A reference to the object on which this method was called.
    */
  uci::type::VehicleThreatAssessmentRequestType& setThreatCapability(uci::type::ThreatCapabilityEnum::EnumerationItem value) override;

  /** Returns the accessor to the SystemToAssess field contained in this message fragment
    *
    * @return The const reference to the accessor to the SystemToAssess field.
    */
  const uci::type::VehicleThreatAssessmentRequestType::SystemToAssess& getSystemToAssess() const override;

  /** Returns the accessor to the SystemToAssess field contained in this message fragment
    *
    * @return The reference to the accessor to the SystemToAssess field.
    */
  uci::type::VehicleThreatAssessmentRequestType::SystemToAssess& getSystemToAssess() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::VehicleThreatAssessmentRequestType& setSystemToAssess(const uci::type::VehicleThreatAssessmentRequestType::SystemToAssess& accessor) override;

  /** Returns the accessor to the SupportingSystem field contained in this message fragment
    *
    * @return The const reference to the accessor to the SupportingSystem field.
    */
  const uci::type::VehicleThreatAssessmentRequestType::SupportingSystem& getSupportingSystem() const override;

  /** Returns the accessor to the SupportingSystem field contained in this message fragment
    *
    * @return The reference to the accessor to the SupportingSystem field.
    */
  uci::type::VehicleThreatAssessmentRequestType::SupportingSystem& getSupportingSystem() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::VehicleThreatAssessmentRequestType& setSupportingSystem(const uci::type::VehicleThreatAssessmentRequestType::SupportingSystem& accessor) override;

  /** Returns the accessor to the EntityID field contained in this message fragment
    *
    * @return The const reference to the accessor to the EntityID field.
    */
  const uci::type::VehicleThreatAssessmentRequestType::EntityID& getEntityID() const override;

  /** Returns the accessor to the EntityID field contained in this message fragment
    *
    * @return The reference to the accessor to the EntityID field.
    */
  uci::type::VehicleThreatAssessmentRequestType::EntityID& getEntityID() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::VehicleThreatAssessmentRequestType& setEntityID(const uci::type::VehicleThreatAssessmentRequestType::EntityID& accessor) override;

  /** Returns the accessor that provides access to the contents of the optional field accessed by this accesor
    *
    * @return The accessor that provides access to the contents of the optional field accessed by this accesor
    */
  uci::type::DetectionEnvelopeParametersType& getGenerateDetectionEnvelope_() const;

  /** Returns the accessor that provides access to the contents of the optional field accessed by this accesor
    *
    * @return The accessor that provides access to the contents of the optional field accessed by this accesor
    */
  const uci::type::DetectionEnvelopeParametersType& getGenerateDetectionEnvelope() const override;

  /** Returns the accessor that provides access to the contents of the optional field accessed by this accesor
    *
    * @return The accessor that provides access to the contents of the optional field accessed by this accesor
    */
  uci::type::DetectionEnvelopeParametersType& getGenerateDetectionEnvelope() override;

  /** Set the contents of the message fragment that this accesssor provides access to to the contents the specified
    * accessor provides access to. A deep copy will be used by this method in setting the contents
    *
    * @param accessor The accessor to use to set the contents of the message fragment that this accessor provides access
    *      to.
    * @return A reference to the object on which this method was called.
    */
  uci::type::VehicleThreatAssessmentRequestType& setGenerateDetectionEnvelope(const uci::type::DetectionEnvelopeParametersType& accessor) override;

  /** Returns whether this optional field GenerateDetectionEnvelopeis available
    *
    * @return Whether the optional field is available (true) or not (false).
    */
  bool hasGenerateDetectionEnvelope() const noexcept override;

  /** Enables the optional field such that getGenerateDetectionEnvelope will return the optional field and not throw an
    * exception when invoked.
    *
    * @param type The value to set the optional field to
    * @return The accessor that provides access to the contents of the optional field accessed by this accesor
    */
  uci::type::DetectionEnvelopeParametersType& enableGenerateDetectionEnvelope(uci::base::accessorType::AccessorType type = uci::base::accessorType::null) override;

  /** Clears the value of the optional field accessed by this accesor
    *
    * @return A reference to the object on which this method was called.
    */
  uci::type::VehicleThreatAssessmentRequestType& clearGenerateDetectionEnvelope() noexcept override;

  /** Returns the value of the optional field accessed by this accesor
    *
    * @return The value of the optional field
    */
  xs::Boolean getGenerateThreatZone() const override;

  /** Sets the value of the optional field accessed by this accesor
    *
    * @param value The value to set the optional field to
    * @return A reference to the object on which this method was called.
    */
  uci::type::VehicleThreatAssessmentRequestType& setGenerateThreatZone(xs::Boolean value) override;

  /** Returns whether this optional field GenerateThreatZoneis available
    *
    * @return Whether the optional field is available (true) or not (false).
    */
  bool hasGenerateThreatZone() const noexcept override;

  /** Clears the optional item marking it as not being set.
    *
    * @return A reference to the object on which this method was called.
    */
  uci::type::VehicleThreatAssessmentRequestType& clearGenerateThreatZone() noexcept override;

  /** 
    *
    * @param type .
    * @return .
    */
  static std::unique_ptr<VehicleThreatAssessmentRequestType> create(uci::base::accessorType::AccessorType type);

  /** 
    *
    * @param propTree .
    * @param accessor .
    * @param nodeName .
    * @param nsPrefix .
    * @param topLevel .
    */
  static void deserialize(const boost::property_tree::ptree& propTree, uci::type::VehicleThreatAssessmentRequestType& accessor, std::string& nodeName, std::string& nsPrefix, bool topLevel = false);

  /** 
    *
    * @param accessor .
    * @param propTree .
    * @param nodeName .
    * @param createNode .
    * @param addTypeAttribute .
    * @param checkIfDerivation .
    * @param topLevel .
    * @return .
    */
  static std::string serialize(const uci::type::VehicleThreatAssessmentRequestType& accessor, boost::property_tree::ptree& propTree, const std::string& nodeName, bool createNode = true, bool addTypeAttribute = false, bool checkIfDerivation = true, bool topLevel = false);

private:
  std::unique_ptr<AssessmentSuppressionEnum> assessmentSuppression_Accessor;
  std::unique_ptr<ThreatCapabilityEnum> threatCapability_Accessor;
  std::unique_ptr<SystemToAssess> systemToAssess_Accessor;
  std::unique_ptr<SupportingSystem> supportingSystem_Accessor;
  std::unique_ptr<EntityID> entityID_Accessor;
  std::unique_ptr<DetectionEnvelopeParametersType> generateDetectionEnvelope_Accessor;
  boost::optional<asb_xs::Boolean> generateThreatZone_Accessor;

};

} // namespace type

} // namespace asb_uci

#endif // ASB_UCI_TYPE_VEHICLETHREATASSESSMENTREQUESTTYPE_H
