/** @file DerivedTypesCreator5.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCreator5.h"

#include <boost/smart_ptr/make_unique.hpp>

#include "asb_uci/type/CS_ActivityDetailType.h"
#include "asb_uci/type/CS_ActivityType.h"
#include "asb_uci/type/CS_AssessmentType.h"
#include "asb_uci/type/CS_CapabilityType.h"
#include "asb_uci/type/ComponentConfigurationType.h"
#include "asb_uci/type/ComponentDetailedStatusInfoType.h"
#include "asb_uci/type/ComponentDetailedStatusType.h"
#include "asb_uci/type/ComponentElementID_Type.h"
#include "asb_uci/type/ComponentExtendedStatusPET.h"
#include "asb_uci/type/ComponentID_Type.h"
#include "asb_uci/type/ComponentSettingsCommandMDT.h"
#include "asb_uci/type/ComponentSettingsCommandMT.h"
#include "asb_uci/type/ComponentSettingsCommandStatusMDT.h"
#include "asb_uci/type/ComponentSettingsCommandStatusMT.h"
#include "asb_uci/type/ComponentStatusDataRequestMDT.h"
#include "asb_uci/type/ComponentStatusDataRequestMT.h"
#include "asb_uci/type/ComponentStatusDataRequestStatusMDT.h"
#include "asb_uci/type/ComponentStatusDataRequestStatusMT.h"
#include "asb_uci/type/ComponentStatusMT.h"
#include "asb_uci/type/ComponentTemperatureType.h"
#include "asb_uci/type/CompressionRatioSettingsType.h"
#include "asb_uci/type/ConstrainingPlanPartsType.h"
#include "asb_uci/type/ControlInterfacesCommandMDT.h"
#include "asb_uci/type/ControlInterfacesCommandMT.h"
#include "asb_uci/type/ControlInterfacesCommandStatusMDT.h"
#include "asb_uci/type/ControlInterfacesCommandStatusMT.h"
#include "asb_uci/type/ControlRequestMDT.h"
#include "asb_uci/type/ControlRequestMT.h"
#include "asb_uci/type/ControlRequestStatusMDT.h"
#include "asb_uci/type/ControlRequestStatusMT.h"
#include "asb_uci/type/ControlSourcesCommandMDT.h"
#include "asb_uci/type/ControlSourcesCommandMT.h"
#include "asb_uci/type/ControlSourcesCommandStatusMDT.h"
#include "asb_uci/type/ControlSourcesCommandStatusMT.h"
#include "asb_uci/type/ControlStatusMT.h"
#include "asb_uci/type/CoordinatedRequirementSetID_Type.h"
#include "asb_uci/type/CoordinatedRequirementSetMT.h"
#include "asb_uci/type/CoordinatedRequirementSetStatusMT.h"
#include "asb_uci/type/CornerPointImageRegionOfInterestType.h"
#include "asb_uci/type/CorrelatedEntityID_Type.h"
#include "asb_uci/type/CounterSpaceActivityMT.h"
#include "asb_uci/type/CounterSpaceCapabilityMDT.h"
#include "asb_uci/type/CounterSpaceCapabilityMT.h"
#include "asb_uci/type/CounterSpaceCapabilityStatusMDT.h"
#include "asb_uci/type/CounterSpaceCapabilityStatusMT.h"
#include "asb_uci/type/CounterSpaceDeconflictionID_Type.h"
#include "asb_uci/type/CounterSpaceDeconflictionMDT.h"
#include "asb_uci/type/CounterSpaceDeconflictionMT.h"
#include "asb_uci/type/CounterSpaceReportID_Type.h"
#include "asb_uci/type/CounterSpaceReportMT.h"
#include "asb_uci/type/CryptoCommandMT.h"
#include "asb_uci/type/CryptoCommandStatusMDT.h"
#include "asb_uci/type/CryptoCommandStatusMT.h"
#include "asb_uci/type/CryptoCommandType.h"
#include "asb_uci/type/CryptoPortID_Type.h"
#include "asb_uci/type/CryptoSlotGroupID_Type.h"
#include "asb_uci/type/CryptoStatusMT.h"
#include "asb_uci/type/CryptoStatusType.h"
#include "asb_uci/type/DamageAssessmentDetailType.h"
#include "asb_uci/type/DamageAssessmentID_Type.h"
#include "asb_uci/type/DamageAssessmentMT.h"
#include "asb_uci/type/DamageAssessmentRequestMDT.h"
#include "asb_uci/type/DamageAssessmentRequestMT.h"
#include "asb_uci/type/DamageAssessmentRequestStatusMDT.h"
#include "asb_uci/type/DamageAssessmentRequestStatusMT.h"
#include "asb_uci/type/DamageEstimateID_Type.h"
#include "asb_uci/type/DamageEstimateMT.h"
#include "asb_uci/type/DamageEstimateRequestMDT.h"
#include "asb_uci/type/DamageEstimateRequestMT.h"
#include "asb_uci/type/DamageEstimateRequestStatusMDT.h"
#include "asb_uci/type/DamageEstimateRequestStatusMT.h"
#include "asb_uci/type/DamageInformationSourceType.h"
#include "asb_uci/type/DamageInformationWeatherSourceType.h"
#include "asb_uci/type/DamageReportDetailType.h"
#include "asb_uci/type/DamageReportID_Type.h"
#include "asb_uci/type/DamageReportMT.h"
#include "asb_uci/type/DamageSummaryID_Type.h"
#include "asb_uci/type/DamageSummaryMT.h"
#include "asb_uci/type/DamagedFunctionType.h"
#include "asb_uci/type/DataDeleteRequestMDT.h"
#include "asb_uci/type/DataDeleteRequestMT.h"
#include "asb_uci/type/DataDeleteRequestStatusMDT.h"
#include "asb_uci/type/DataDeleteRequestStatusMT.h"
#include "asb_uci/type/DataDestinationID_Type.h"
#include "asb_uci/type/DataLinkIdentifierPET.h"
#include "asb_uci/type/DataLinkNativeFilterPET.h"
#include "asb_uci/type/DataLinkNativeFilter_NetworkLinkType.h"
#include "asb_uci/type/DataLinkNativeInfoPET.h"
#include "asb_uci/type/DataManagementRequestMDT.h"
#include "asb_uci/type/DataManagementRequestMT.h"
#include "asb_uci/type/DataManagementRequestStatusMDT.h"
#include "asb_uci/type/DataManagementRequestStatusMT.h"
#include "asb_uci/type/DataPlanActivationCommandMDT.h"
#include "asb_uci/type/DataPlanActivationCommandMT.h"
#include "asb_uci/type/DataPlanActivationCommandStatusMDT.h"
#include "asb_uci/type/DataPlanActivationCommandStatusMT.h"
#include "asb_uci/type/DataPlanActivationStatusMT.h"
#include "asb_uci/type/DataPlanID_Type.h"
#include "asb_uci/type/DataPlanMT.h"
#include "asb_uci/type/DataPlanOverrideRequestMT.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

uci::base::Accessor* DerivedTypesCreator5::create(const uci::base::accessorType::AccessorType type) {
  switch (type) {
    case uci::type::accessorType::componentConfigurationType:
      return boost::make_unique<asb_uci::type::ComponentConfigurationType>().release();
    case uci::type::accessorType::componentDetailedStatusInfoType:
      return boost::make_unique<asb_uci::type::ComponentDetailedStatusInfoType>().release();
    case uci::type::accessorType::componentDetailedStatusType:
      return boost::make_unique<asb_uci::type::ComponentDetailedStatusType>().release();
    case uci::type::accessorType::componentElementID_Type:
      return boost::make_unique<asb_uci::type::ComponentElementID_Type>().release();
    case uci::type::accessorType::componentExtendedStatusPET:
      return boost::make_unique<asb_uci::type::ComponentExtendedStatusPET>().release();
    case uci::type::accessorType::componentID_Type:
      return boost::make_unique<asb_uci::type::ComponentID_Type>().release();
    case uci::type::accessorType::componentSettingsCommandMDT:
      return boost::make_unique<asb_uci::type::ComponentSettingsCommandMDT>().release();
    case uci::type::accessorType::componentSettingsCommandMT:
      return boost::make_unique<asb_uci::type::ComponentSettingsCommandMT>().release();
    case uci::type::accessorType::componentSettingsCommandStatusMDT:
      return boost::make_unique<asb_uci::type::ComponentSettingsCommandStatusMDT>().release();
    case uci::type::accessorType::componentSettingsCommandStatusMT:
      return boost::make_unique<asb_uci::type::ComponentSettingsCommandStatusMT>().release();
    case uci::type::accessorType::componentStatusDataRequestMDT:
      return boost::make_unique<asb_uci::type::ComponentStatusDataRequestMDT>().release();
    case uci::type::accessorType::componentStatusDataRequestMT:
      return boost::make_unique<asb_uci::type::ComponentStatusDataRequestMT>().release();
    case uci::type::accessorType::componentStatusDataRequestStatusMDT:
      return boost::make_unique<asb_uci::type::ComponentStatusDataRequestStatusMDT>().release();
    case uci::type::accessorType::componentStatusDataRequestStatusMT:
      return boost::make_unique<asb_uci::type::ComponentStatusDataRequestStatusMT>().release();
    case uci::type::accessorType::componentStatusMT:
      return boost::make_unique<asb_uci::type::ComponentStatusMT>().release();
    case uci::type::accessorType::componentTemperatureType:
      return boost::make_unique<asb_uci::type::ComponentTemperatureType>().release();
    case uci::type::accessorType::compressionRatioSettingsType:
      return boost::make_unique<asb_uci::type::CompressionRatioSettingsType>().release();
    case uci::type::accessorType::constrainingPlanPartsType:
      return boost::make_unique<asb_uci::type::ConstrainingPlanPartsType>().release();
    case uci::type::accessorType::controlInterfacesCommandMDT:
      return boost::make_unique<asb_uci::type::ControlInterfacesCommandMDT>().release();
    case uci::type::accessorType::controlInterfacesCommandMT:
      return boost::make_unique<asb_uci::type::ControlInterfacesCommandMT>().release();
    case uci::type::accessorType::controlInterfacesCommandStatusMDT:
      return boost::make_unique<asb_uci::type::ControlInterfacesCommandStatusMDT>().release();
    case uci::type::accessorType::controlInterfacesCommandStatusMT:
      return boost::make_unique<asb_uci::type::ControlInterfacesCommandStatusMT>().release();
    case uci::type::accessorType::controlRequestMDT:
      return boost::make_unique<asb_uci::type::ControlRequestMDT>().release();
    case uci::type::accessorType::controlRequestMT:
      return boost::make_unique<asb_uci::type::ControlRequestMT>().release();
    case uci::type::accessorType::controlRequestStatusMDT:
      return boost::make_unique<asb_uci::type::ControlRequestStatusMDT>().release();
    case uci::type::accessorType::controlRequestStatusMT:
      return boost::make_unique<asb_uci::type::ControlRequestStatusMT>().release();
    case uci::type::accessorType::controlSourcesCommandMDT:
      return boost::make_unique<asb_uci::type::ControlSourcesCommandMDT>().release();
    case uci::type::accessorType::controlSourcesCommandMT:
      return boost::make_unique<asb_uci::type::ControlSourcesCommandMT>().release();
    case uci::type::accessorType::controlSourcesCommandStatusMDT:
      return boost::make_unique<asb_uci::type::ControlSourcesCommandStatusMDT>().release();
    case uci::type::accessorType::controlSourcesCommandStatusMT:
      return boost::make_unique<asb_uci::type::ControlSourcesCommandStatusMT>().release();
    case uci::type::accessorType::controlStatusMT:
      return boost::make_unique<asb_uci::type::ControlStatusMT>().release();
    case uci::type::accessorType::coordinatedRequirementSetID_Type:
      return boost::make_unique<asb_uci::type::CoordinatedRequirementSetID_Type>().release();
    case uci::type::accessorType::coordinatedRequirementSetMT:
      return boost::make_unique<asb_uci::type::CoordinatedRequirementSetMT>().release();
    case uci::type::accessorType::coordinatedRequirementSetStatusMT:
      return boost::make_unique<asb_uci::type::CoordinatedRequirementSetStatusMT>().release();
    case uci::type::accessorType::cornerPointImageRegionOfInterestType:
      return boost::make_unique<asb_uci::type::CornerPointImageRegionOfInterestType>().release();
    case uci::type::accessorType::correlatedEntityID_Type:
      return boost::make_unique<asb_uci::type::CorrelatedEntityID_Type>().release();
    case uci::type::accessorType::counterSpaceActivityMT:
      return boost::make_unique<asb_uci::type::CounterSpaceActivityMT>().release();
    case uci::type::accessorType::counterSpaceCapabilityMDT:
      return boost::make_unique<asb_uci::type::CounterSpaceCapabilityMDT>().release();
    case uci::type::accessorType::counterSpaceCapabilityMT:
      return boost::make_unique<asb_uci::type::CounterSpaceCapabilityMT>().release();
    case uci::type::accessorType::counterSpaceCapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::CounterSpaceCapabilityStatusMDT>().release();
    case uci::type::accessorType::counterSpaceCapabilityStatusMT:
      return boost::make_unique<asb_uci::type::CounterSpaceCapabilityStatusMT>().release();
    case uci::type::accessorType::counterSpaceDeconflictionID_Type:
      return boost::make_unique<asb_uci::type::CounterSpaceDeconflictionID_Type>().release();
    case uci::type::accessorType::counterSpaceDeconflictionMDT:
      return boost::make_unique<asb_uci::type::CounterSpaceDeconflictionMDT>().release();
    case uci::type::accessorType::counterSpaceDeconflictionMT:
      return boost::make_unique<asb_uci::type::CounterSpaceDeconflictionMT>().release();
    case uci::type::accessorType::counterSpaceReportID_Type:
      return boost::make_unique<asb_uci::type::CounterSpaceReportID_Type>().release();
    case uci::type::accessorType::counterSpaceReportMT:
      return boost::make_unique<asb_uci::type::CounterSpaceReportMT>().release();
    case uci::type::accessorType::cryptoCommandMT:
      return boost::make_unique<asb_uci::type::CryptoCommandMT>().release();
    case uci::type::accessorType::cryptoCommandStatusMDT:
      return boost::make_unique<asb_uci::type::CryptoCommandStatusMDT>().release();
    case uci::type::accessorType::cryptoCommandStatusMT:
      return boost::make_unique<asb_uci::type::CryptoCommandStatusMT>().release();
    case uci::type::accessorType::cryptoCommandType:
      return boost::make_unique<asb_uci::type::CryptoCommandType>().release();
    case uci::type::accessorType::cryptoPortID_Type:
      return boost::make_unique<asb_uci::type::CryptoPortID_Type>().release();
    case uci::type::accessorType::cryptoSlotGroupID_Type:
      return boost::make_unique<asb_uci::type::CryptoSlotGroupID_Type>().release();
    case uci::type::accessorType::cryptoStatusMT:
      return boost::make_unique<asb_uci::type::CryptoStatusMT>().release();
    case uci::type::accessorType::cryptoStatusType:
      return boost::make_unique<asb_uci::type::CryptoStatusType>().release();
    case uci::type::accessorType::cS_ActivityDetailType:
      return boost::make_unique<asb_uci::type::CS_ActivityDetailType>().release();
    case uci::type::accessorType::cS_ActivityType:
      return boost::make_unique<asb_uci::type::CS_ActivityType>().release();
    case uci::type::accessorType::cS_AssessmentType:
      return boost::make_unique<asb_uci::type::CS_AssessmentType>().release();
    case uci::type::accessorType::cS_CapabilityType:
      return boost::make_unique<asb_uci::type::CS_CapabilityType>().release();
    case uci::type::accessorType::damageAssessmentDetailType:
      return boost::make_unique<asb_uci::type::DamageAssessmentDetailType>().release();
    case uci::type::accessorType::damageAssessmentID_Type:
      return boost::make_unique<asb_uci::type::DamageAssessmentID_Type>().release();
    case uci::type::accessorType::damageAssessmentMT:
      return boost::make_unique<asb_uci::type::DamageAssessmentMT>().release();
    case uci::type::accessorType::damageAssessmentRequestMDT:
      return boost::make_unique<asb_uci::type::DamageAssessmentRequestMDT>().release();
    case uci::type::accessorType::damageAssessmentRequestMT:
      return boost::make_unique<asb_uci::type::DamageAssessmentRequestMT>().release();
    case uci::type::accessorType::damageAssessmentRequestStatusMDT:
      return boost::make_unique<asb_uci::type::DamageAssessmentRequestStatusMDT>().release();
    case uci::type::accessorType::damageAssessmentRequestStatusMT:
      return boost::make_unique<asb_uci::type::DamageAssessmentRequestStatusMT>().release();
    case uci::type::accessorType::damagedFunctionType:
      return boost::make_unique<asb_uci::type::DamagedFunctionType>().release();
    case uci::type::accessorType::damageEstimateID_Type:
      return boost::make_unique<asb_uci::type::DamageEstimateID_Type>().release();
    case uci::type::accessorType::damageEstimateMT:
      return boost::make_unique<asb_uci::type::DamageEstimateMT>().release();
    case uci::type::accessorType::damageEstimateRequestMDT:
      return boost::make_unique<asb_uci::type::DamageEstimateRequestMDT>().release();
    case uci::type::accessorType::damageEstimateRequestMT:
      return boost::make_unique<asb_uci::type::DamageEstimateRequestMT>().release();
    case uci::type::accessorType::damageEstimateRequestStatusMDT:
      return boost::make_unique<asb_uci::type::DamageEstimateRequestStatusMDT>().release();
    case uci::type::accessorType::damageEstimateRequestStatusMT:
      return boost::make_unique<asb_uci::type::DamageEstimateRequestStatusMT>().release();
    case uci::type::accessorType::damageInformationSourceType:
      return boost::make_unique<asb_uci::type::DamageInformationSourceType>().release();
    case uci::type::accessorType::damageInformationWeatherSourceType:
      return boost::make_unique<asb_uci::type::DamageInformationWeatherSourceType>().release();
    case uci::type::accessorType::damageReportDetailType:
      return boost::make_unique<asb_uci::type::DamageReportDetailType>().release();
    case uci::type::accessorType::damageReportID_Type:
      return boost::make_unique<asb_uci::type::DamageReportID_Type>().release();
    case uci::type::accessorType::damageReportMT:
      return boost::make_unique<asb_uci::type::DamageReportMT>().release();
    case uci::type::accessorType::damageSummaryID_Type:
      return boost::make_unique<asb_uci::type::DamageSummaryID_Type>().release();
    case uci::type::accessorType::damageSummaryMT:
      return boost::make_unique<asb_uci::type::DamageSummaryMT>().release();
    case uci::type::accessorType::dataDeleteRequestMDT:
      return boost::make_unique<asb_uci::type::DataDeleteRequestMDT>().release();
    case uci::type::accessorType::dataDeleteRequestMT:
      return boost::make_unique<asb_uci::type::DataDeleteRequestMT>().release();
    case uci::type::accessorType::dataDeleteRequestStatusMDT:
      return boost::make_unique<asb_uci::type::DataDeleteRequestStatusMDT>().release();
    case uci::type::accessorType::dataDeleteRequestStatusMT:
      return boost::make_unique<asb_uci::type::DataDeleteRequestStatusMT>().release();
    case uci::type::accessorType::dataDestinationID_Type:
      return boost::make_unique<asb_uci::type::DataDestinationID_Type>().release();
    case uci::type::accessorType::dataLinkIdentifierPET:
      return boost::make_unique<asb_uci::type::DataLinkIdentifierPET>().release();
    case uci::type::accessorType::dataLinkNativeFilter_NetworkLinkType:
      return boost::make_unique<asb_uci::type::DataLinkNativeFilter_NetworkLinkType>().release();
    case uci::type::accessorType::dataLinkNativeFilterPET:
      return boost::make_unique<asb_uci::type::DataLinkNativeFilterPET>().release();
    case uci::type::accessorType::dataLinkNativeInfoPET:
      return boost::make_unique<asb_uci::type::DataLinkNativeInfoPET>().release();
    case uci::type::accessorType::dataManagementRequestMDT:
      return boost::make_unique<asb_uci::type::DataManagementRequestMDT>().release();
    case uci::type::accessorType::dataManagementRequestMT:
      return boost::make_unique<asb_uci::type::DataManagementRequestMT>().release();
    case uci::type::accessorType::dataManagementRequestStatusMDT:
      return boost::make_unique<asb_uci::type::DataManagementRequestStatusMDT>().release();
    case uci::type::accessorType::dataManagementRequestStatusMT:
      return boost::make_unique<asb_uci::type::DataManagementRequestStatusMT>().release();
    case uci::type::accessorType::dataPlanActivationCommandMDT:
      return boost::make_unique<asb_uci::type::DataPlanActivationCommandMDT>().release();
    case uci::type::accessorType::dataPlanActivationCommandMT:
      return boost::make_unique<asb_uci::type::DataPlanActivationCommandMT>().release();
    case uci::type::accessorType::dataPlanActivationCommandStatusMDT:
      return boost::make_unique<asb_uci::type::DataPlanActivationCommandStatusMDT>().release();
    case uci::type::accessorType::dataPlanActivationCommandStatusMT:
      return boost::make_unique<asb_uci::type::DataPlanActivationCommandStatusMT>().release();
    case uci::type::accessorType::dataPlanActivationStatusMT:
      return boost::make_unique<asb_uci::type::DataPlanActivationStatusMT>().release();
    case uci::type::accessorType::dataPlanID_Type:
      return boost::make_unique<asb_uci::type::DataPlanID_Type>().release();
    case uci::type::accessorType::dataPlanMT:
      return boost::make_unique<asb_uci::type::DataPlanMT>().release();
    case uci::type::accessorType::dataPlanOverrideRequestMT:
      return boost::make_unique<asb_uci::type::DataPlanOverrideRequestMT>().release();
    default:
      return nullptr;
  }
}

} // namespace util

} // namespace asb_uci

