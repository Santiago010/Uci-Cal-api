/** @file DerivedTypesCreator11.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCreator11.h"

#include <boost/smart_ptr/make_unique.hpp>

#include "asb_uci/type/NotificationID_Type.h"
#include "asb_uci/type/OB_SensorID_Type.h"
#include "asb_uci/type/ObservationMeasurementID_Type.h"
#include "asb_uci/type/ObservationMeasurementReportID_Type.h"
#include "asb_uci/type/ObservationMeasurementReportMT.h"
#include "asb_uci/type/ObservationReportID_Type.h"
#include "asb_uci/type/ObservationReportMT.h"
#include "asb_uci/type/OffsetLocationErrorType.h"
#include "asb_uci/type/OffsetLocationType.h"
#include "asb_uci/type/OpBaseType.h"
#include "asb_uci/type/OpLineID_Type.h"
#include "asb_uci/type/OpLineMDT.h"
#include "asb_uci/type/OpLineMT.h"
#include "asb_uci/type/OpLineType.h"
#include "asb_uci/type/OpNotificationMDT.h"
#include "asb_uci/type/OpNotificationMT.h"
#include "asb_uci/type/OpPointBaseType.h"
#include "asb_uci/type/OpPointID_Type.h"
#include "asb_uci/type/OpPointMDT.h"
#include "asb_uci/type/OpPointMT.h"
#include "asb_uci/type/OpRoutingID_Type.h"
#include "asb_uci/type/OpRoutingMT.h"
#include "asb_uci/type/OpVolumeID_Type.h"
#include "asb_uci/type/OpVolumeMDT.h"
#include "asb_uci/type/OpVolumeMT.h"
#include "asb_uci/type/OpZoneFilterAreaPET.h"
#include "asb_uci/type/OpZoneID_Type.h"
#include "asb_uci/type/OpZoneMDT.h"
#include "asb_uci/type/OpZoneMT.h"
#include "asb_uci/type/OpZoneType.h"
#include "asb_uci/type/OpaqueCapabilityMDT.h"
#include "asb_uci/type/OpaqueCapabilityMT.h"
#include "asb_uci/type/OpaqueCapabilityStatusMDT.h"
#include "asb_uci/type/OpaqueCapabilityStatusMT.h"
#include "asb_uci/type/OpaqueSettingsCommandMDT.h"
#include "asb_uci/type/OpaqueSettingsCommandMT.h"
#include "asb_uci/type/OpaqueSettingsCommandStatusMDT.h"
#include "asb_uci/type/OpaqueSettingsCommandStatusMT.h"
#include "asb_uci/type/OperationsAreaDataLinkNativeFilterType.h"
#include "asb_uci/type/OperatorActionCommandMDT.h"
#include "asb_uci/type/OperatorActionCommandMT.h"
#include "asb_uci/type/OperatorActionCommandStatusMDT.h"
#include "asb_uci/type/OperatorActionCommandStatusMT.h"
#include "asb_uci/type/OperatorActionID_Type.h"
#include "asb_uci/type/OperatorAnnotationID_Type.h"
#include "asb_uci/type/OperatorAnnotationMDT.h"
#include "asb_uci/type/OperatorAnnotationMT.h"
#include "asb_uci/type/OperatorID_Type.h"
#include "asb_uci/type/OperatorLocationOfInterestID_Type.h"
#include "asb_uci/type/OperatorLocationOfInterestMDT.h"
#include "asb_uci/type/OperatorLocationOfInterestMT.h"
#include "asb_uci/type/OperatorMDT.h"
#include "asb_uci/type/OperatorMT.h"
#include "asb_uci/type/OperatorNotificationAckID_Type.h"
#include "asb_uci/type/OperatorNotificationAckMT.h"
#include "asb_uci/type/OperatorNotificationID_Type.h"
#include "asb_uci/type/OperatorNotificationMT.h"
#include "asb_uci/type/OperatorNotificationOverrideID_Type.h"
#include "asb_uci/type/OperatorNotificationOverrideMT.h"
#include "asb_uci/type/OperatorRoleID_Type.h"
#include "asb_uci/type/OperatorRoleMDT.h"
#include "asb_uci/type/OperatorRoleMT.h"
#include "asb_uci/type/OpticalCollectionConstraintsType.h"
#include "asb_uci/type/OrbitActivityExecutionStatusType.h"
#include "asb_uci/type/OrbitActivityPlanApprovalStatusMT.h"
#include "asb_uci/type/OrbitActivityPlanCommandID_Type.h"
#include "asb_uci/type/OrbitActivityPlanCommandMT.h"
#include "asb_uci/type/OrbitActivityPlanCommandStatusMT.h"
#include "asb_uci/type/OrbitActivityPlanExecutionStatusMT.h"
#include "asb_uci/type/OrbitActivityPlanID_Type.h"
#include "asb_uci/type/OrbitActivityPlanInputsType.h"
#include "asb_uci/type/OrbitActivityPlanMT.h"
#include "asb_uci/type/OrbitActivityPlanStatusMT.h"
#include "asb_uci/type/OrbitActivityPlanStatusType.h"
#include "asb_uci/type/OrbitActivityPlanValidationCommandMDT.h"
#include "asb_uci/type/OrbitActivityPlanValidationCommandMT.h"
#include "asb_uci/type/OrbitActivityPlanValidationCommandStatusMDT.h"
#include "asb_uci/type/OrbitActivityPlanValidationCommandStatusMT.h"
#include "asb_uci/type/OrbitActivityPlanValidationID_Type.h"
#include "asb_uci/type/OrbitActivityPlanValidationInputsType.h"
#include "asb_uci/type/OrbitActivityPlanValidationMT.h"
#include "asb_uci/type/OrbitActivityType.h"
#include "asb_uci/type/OrbitalConjunctionID_Type.h"
#include "asb_uci/type/OrbitalDebrisCloudID_Type.h"
#include "asb_uci/type/OrbitalDebrisEstimateID_Type.h"
#include "asb_uci/type/OrbitalDebrisEstimateMT.h"
#include "asb_uci/type/OrbitalDebrisEstimateRequestMDT.h"
#include "asb_uci/type/OrbitalDebrisEstimateRequestMT.h"
#include "asb_uci/type/OrbitalDebrisEstimateRequestStatusMDT.h"
#include "asb_uci/type/OrbitalDebrisEstimateRequestStatusMT.h"
#include "asb_uci/type/OrbitalDebrisID_Type.h"
#include "asb_uci/type/OrbitalEphemerisRequestParametersType.h"
#include "asb_uci/type/OrbitalFiltersQueryType.h"
#include "asb_uci/type/OrbitalManeuverDetailsBaseType.h"
#include "asb_uci/type/OrbitalManeuverDetailsType.h"
#include "asb_uci/type/OrbitalManeuverID_Type.h"
#include "asb_uci/type/OrbitalSurveillanceActivityDetailType.h"
#include "asb_uci/type/OrbitalSurveillanceActivityMT.h"
#include "asb_uci/type/OrbitalSurveillanceActivityType.h"
#include "asb_uci/type/OrbitalSurveillanceCapabilityMDT.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

uci::base::Accessor* DerivedTypesCreator11::create(const uci::base::accessorType::AccessorType type) {
  switch (type) {
    case uci::type::accessorType::notificationID_Type:
      return boost::make_unique<asb_uci::type::NotificationID_Type>().release();
    case uci::type::accessorType::oB_SensorID_Type:
      return boost::make_unique<asb_uci::type::OB_SensorID_Type>().release();
    case uci::type::accessorType::observationMeasurementID_Type:
      return boost::make_unique<asb_uci::type::ObservationMeasurementID_Type>().release();
    case uci::type::accessorType::observationMeasurementReportID_Type:
      return boost::make_unique<asb_uci::type::ObservationMeasurementReportID_Type>().release();
    case uci::type::accessorType::observationMeasurementReportMT:
      return boost::make_unique<asb_uci::type::ObservationMeasurementReportMT>().release();
    case uci::type::accessorType::observationReportID_Type:
      return boost::make_unique<asb_uci::type::ObservationReportID_Type>().release();
    case uci::type::accessorType::observationReportMT:
      return boost::make_unique<asb_uci::type::ObservationReportMT>().release();
    case uci::type::accessorType::offsetLocationErrorType:
      return boost::make_unique<asb_uci::type::OffsetLocationErrorType>().release();
    case uci::type::accessorType::offsetLocationType:
      return boost::make_unique<asb_uci::type::OffsetLocationType>().release();
    case uci::type::accessorType::opaqueCapabilityMDT:
      return boost::make_unique<asb_uci::type::OpaqueCapabilityMDT>().release();
    case uci::type::accessorType::opaqueCapabilityMT:
      return boost::make_unique<asb_uci::type::OpaqueCapabilityMT>().release();
    case uci::type::accessorType::opaqueCapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::OpaqueCapabilityStatusMDT>().release();
    case uci::type::accessorType::opaqueCapabilityStatusMT:
      return boost::make_unique<asb_uci::type::OpaqueCapabilityStatusMT>().release();
    case uci::type::accessorType::opaqueSettingsCommandMDT:
      return boost::make_unique<asb_uci::type::OpaqueSettingsCommandMDT>().release();
    case uci::type::accessorType::opaqueSettingsCommandMT:
      return boost::make_unique<asb_uci::type::OpaqueSettingsCommandMT>().release();
    case uci::type::accessorType::opaqueSettingsCommandStatusMDT:
      return boost::make_unique<asb_uci::type::OpaqueSettingsCommandStatusMDT>().release();
    case uci::type::accessorType::opaqueSettingsCommandStatusMT:
      return boost::make_unique<asb_uci::type::OpaqueSettingsCommandStatusMT>().release();
    case uci::type::accessorType::opBaseType:
      return boost::make_unique<asb_uci::type::OpBaseType>().release();
    case uci::type::accessorType::operationsAreaDataLinkNativeFilterType:
      return boost::make_unique<asb_uci::type::OperationsAreaDataLinkNativeFilterType>().release();
    case uci::type::accessorType::operatorActionCommandMDT:
      return boost::make_unique<asb_uci::type::OperatorActionCommandMDT>().release();
    case uci::type::accessorType::operatorActionCommandMT:
      return boost::make_unique<asb_uci::type::OperatorActionCommandMT>().release();
    case uci::type::accessorType::operatorActionCommandStatusMDT:
      return boost::make_unique<asb_uci::type::OperatorActionCommandStatusMDT>().release();
    case uci::type::accessorType::operatorActionCommandStatusMT:
      return boost::make_unique<asb_uci::type::OperatorActionCommandStatusMT>().release();
    case uci::type::accessorType::operatorActionID_Type:
      return boost::make_unique<asb_uci::type::OperatorActionID_Type>().release();
    case uci::type::accessorType::operatorAnnotationID_Type:
      return boost::make_unique<asb_uci::type::OperatorAnnotationID_Type>().release();
    case uci::type::accessorType::operatorAnnotationMDT:
      return boost::make_unique<asb_uci::type::OperatorAnnotationMDT>().release();
    case uci::type::accessorType::operatorAnnotationMT:
      return boost::make_unique<asb_uci::type::OperatorAnnotationMT>().release();
    case uci::type::accessorType::operatorID_Type:
      return boost::make_unique<asb_uci::type::OperatorID_Type>().release();
    case uci::type::accessorType::operatorLocationOfInterestID_Type:
      return boost::make_unique<asb_uci::type::OperatorLocationOfInterestID_Type>().release();
    case uci::type::accessorType::operatorLocationOfInterestMDT:
      return boost::make_unique<asb_uci::type::OperatorLocationOfInterestMDT>().release();
    case uci::type::accessorType::operatorLocationOfInterestMT:
      return boost::make_unique<asb_uci::type::OperatorLocationOfInterestMT>().release();
    case uci::type::accessorType::operatorMDT:
      return boost::make_unique<asb_uci::type::OperatorMDT>().release();
    case uci::type::accessorType::operatorMT:
      return boost::make_unique<asb_uci::type::OperatorMT>().release();
    case uci::type::accessorType::operatorNotificationAckID_Type:
      return boost::make_unique<asb_uci::type::OperatorNotificationAckID_Type>().release();
    case uci::type::accessorType::operatorNotificationAckMT:
      return boost::make_unique<asb_uci::type::OperatorNotificationAckMT>().release();
    case uci::type::accessorType::operatorNotificationID_Type:
      return boost::make_unique<asb_uci::type::OperatorNotificationID_Type>().release();
    case uci::type::accessorType::operatorNotificationMT:
      return boost::make_unique<asb_uci::type::OperatorNotificationMT>().release();
    case uci::type::accessorType::operatorNotificationOverrideID_Type:
      return boost::make_unique<asb_uci::type::OperatorNotificationOverrideID_Type>().release();
    case uci::type::accessorType::operatorNotificationOverrideMT:
      return boost::make_unique<asb_uci::type::OperatorNotificationOverrideMT>().release();
    case uci::type::accessorType::operatorRoleID_Type:
      return boost::make_unique<asb_uci::type::OperatorRoleID_Type>().release();
    case uci::type::accessorType::operatorRoleMDT:
      return boost::make_unique<asb_uci::type::OperatorRoleMDT>().release();
    case uci::type::accessorType::operatorRoleMT:
      return boost::make_unique<asb_uci::type::OperatorRoleMT>().release();
    case uci::type::accessorType::opLineID_Type:
      return boost::make_unique<asb_uci::type::OpLineID_Type>().release();
    case uci::type::accessorType::opLineMDT:
      return boost::make_unique<asb_uci::type::OpLineMDT>().release();
    case uci::type::accessorType::opLineMT:
      return boost::make_unique<asb_uci::type::OpLineMT>().release();
    case uci::type::accessorType::opLineType:
      return boost::make_unique<asb_uci::type::OpLineType>().release();
    case uci::type::accessorType::opNotificationMDT:
      return boost::make_unique<asb_uci::type::OpNotificationMDT>().release();
    case uci::type::accessorType::opNotificationMT:
      return boost::make_unique<asb_uci::type::OpNotificationMT>().release();
    case uci::type::accessorType::opPointBaseType:
      return boost::make_unique<asb_uci::type::OpPointBaseType>().release();
    case uci::type::accessorType::opPointID_Type:
      return boost::make_unique<asb_uci::type::OpPointID_Type>().release();
    case uci::type::accessorType::opPointMDT:
      return boost::make_unique<asb_uci::type::OpPointMDT>().release();
    case uci::type::accessorType::opPointMT:
      return boost::make_unique<asb_uci::type::OpPointMT>().release();
    case uci::type::accessorType::opRoutingID_Type:
      return boost::make_unique<asb_uci::type::OpRoutingID_Type>().release();
    case uci::type::accessorType::opRoutingMT:
      return boost::make_unique<asb_uci::type::OpRoutingMT>().release();
    case uci::type::accessorType::opticalCollectionConstraintsType:
      return boost::make_unique<asb_uci::type::OpticalCollectionConstraintsType>().release();
    case uci::type::accessorType::opVolumeID_Type:
      return boost::make_unique<asb_uci::type::OpVolumeID_Type>().release();
    case uci::type::accessorType::opVolumeMDT:
      return boost::make_unique<asb_uci::type::OpVolumeMDT>().release();
    case uci::type::accessorType::opVolumeMT:
      return boost::make_unique<asb_uci::type::OpVolumeMT>().release();
    case uci::type::accessorType::opZoneFilterAreaPET:
      return boost::make_unique<asb_uci::type::OpZoneFilterAreaPET>().release();
    case uci::type::accessorType::opZoneID_Type:
      return boost::make_unique<asb_uci::type::OpZoneID_Type>().release();
    case uci::type::accessorType::opZoneMDT:
      return boost::make_unique<asb_uci::type::OpZoneMDT>().release();
    case uci::type::accessorType::opZoneMT:
      return boost::make_unique<asb_uci::type::OpZoneMT>().release();
    case uci::type::accessorType::opZoneType:
      return boost::make_unique<asb_uci::type::OpZoneType>().release();
    case uci::type::accessorType::orbitActivityExecutionStatusType:
      return boost::make_unique<asb_uci::type::OrbitActivityExecutionStatusType>().release();
    case uci::type::accessorType::orbitActivityPlanApprovalStatusMT:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanApprovalStatusMT>().release();
    case uci::type::accessorType::orbitActivityPlanCommandID_Type:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanCommandID_Type>().release();
    case uci::type::accessorType::orbitActivityPlanCommandMT:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanCommandMT>().release();
    case uci::type::accessorType::orbitActivityPlanCommandStatusMT:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanCommandStatusMT>().release();
    case uci::type::accessorType::orbitActivityPlanExecutionStatusMT:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanExecutionStatusMT>().release();
    case uci::type::accessorType::orbitActivityPlanID_Type:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanID_Type>().release();
    case uci::type::accessorType::orbitActivityPlanInputsType:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanInputsType>().release();
    case uci::type::accessorType::orbitActivityPlanMT:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanMT>().release();
    case uci::type::accessorType::orbitActivityPlanStatusMT:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanStatusMT>().release();
    case uci::type::accessorType::orbitActivityPlanStatusType:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanStatusType>().release();
    case uci::type::accessorType::orbitActivityPlanValidationCommandMDT:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanValidationCommandMDT>().release();
    case uci::type::accessorType::orbitActivityPlanValidationCommandMT:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanValidationCommandMT>().release();
    case uci::type::accessorType::orbitActivityPlanValidationCommandStatusMDT:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanValidationCommandStatusMDT>().release();
    case uci::type::accessorType::orbitActivityPlanValidationCommandStatusMT:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanValidationCommandStatusMT>().release();
    case uci::type::accessorType::orbitActivityPlanValidationID_Type:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanValidationID_Type>().release();
    case uci::type::accessorType::orbitActivityPlanValidationInputsType:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanValidationInputsType>().release();
    case uci::type::accessorType::orbitActivityPlanValidationMT:
      return boost::make_unique<asb_uci::type::OrbitActivityPlanValidationMT>().release();
    case uci::type::accessorType::orbitActivityType:
      return boost::make_unique<asb_uci::type::OrbitActivityType>().release();
    case uci::type::accessorType::orbitalConjunctionID_Type:
      return boost::make_unique<asb_uci::type::OrbitalConjunctionID_Type>().release();
    case uci::type::accessorType::orbitalDebrisCloudID_Type:
      return boost::make_unique<asb_uci::type::OrbitalDebrisCloudID_Type>().release();
    case uci::type::accessorType::orbitalDebrisEstimateID_Type:
      return boost::make_unique<asb_uci::type::OrbitalDebrisEstimateID_Type>().release();
    case uci::type::accessorType::orbitalDebrisEstimateMT:
      return boost::make_unique<asb_uci::type::OrbitalDebrisEstimateMT>().release();
    case uci::type::accessorType::orbitalDebrisEstimateRequestMDT:
      return boost::make_unique<asb_uci::type::OrbitalDebrisEstimateRequestMDT>().release();
    case uci::type::accessorType::orbitalDebrisEstimateRequestMT:
      return boost::make_unique<asb_uci::type::OrbitalDebrisEstimateRequestMT>().release();
    case uci::type::accessorType::orbitalDebrisEstimateRequestStatusMDT:
      return boost::make_unique<asb_uci::type::OrbitalDebrisEstimateRequestStatusMDT>().release();
    case uci::type::accessorType::orbitalDebrisEstimateRequestStatusMT:
      return boost::make_unique<asb_uci::type::OrbitalDebrisEstimateRequestStatusMT>().release();
    case uci::type::accessorType::orbitalDebrisID_Type:
      return boost::make_unique<asb_uci::type::OrbitalDebrisID_Type>().release();
    case uci::type::accessorType::orbitalEphemerisRequestParametersType:
      return boost::make_unique<asb_uci::type::OrbitalEphemerisRequestParametersType>().release();
    case uci::type::accessorType::orbitalFiltersQueryType:
      return boost::make_unique<asb_uci::type::OrbitalFiltersQueryType>().release();
    case uci::type::accessorType::orbitalManeuverDetailsBaseType:
      return boost::make_unique<asb_uci::type::OrbitalManeuverDetailsBaseType>().release();
    case uci::type::accessorType::orbitalManeuverDetailsType:
      return boost::make_unique<asb_uci::type::OrbitalManeuverDetailsType>().release();
    case uci::type::accessorType::orbitalManeuverID_Type:
      return boost::make_unique<asb_uci::type::OrbitalManeuverID_Type>().release();
    case uci::type::accessorType::orbitalSurveillanceActivityDetailType:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceActivityDetailType>().release();
    case uci::type::accessorType::orbitalSurveillanceActivityMT:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceActivityMT>().release();
    case uci::type::accessorType::orbitalSurveillanceActivityType:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceActivityType>().release();
    case uci::type::accessorType::orbitalSurveillanceCapabilityMDT:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceCapabilityMDT>().release();
    default:
      return nullptr;
  }
}

} // namespace util

} // namespace asb_uci

