/** @file DerivedTypesCreator12.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCreator12.h"

#include <boost/smart_ptr/make_unique.hpp>

#include "asb_uci/type/OrbitChangeActivityMT.h"
#include "asb_uci/type/OrbitChangeActivityType.h"
#include "asb_uci/type/OrbitChangeCapabilityMDT.h"
#include "asb_uci/type/OrbitChangeCapabilityMT.h"
#include "asb_uci/type/OrbitChangeCapabilityStatusMDT.h"
#include "asb_uci/type/OrbitChangeCapabilityStatusMT.h"
#include "asb_uci/type/OrbitChangeCapabilityType.h"
#include "asb_uci/type/OrbitChangeTaskBaseType.h"
#include "asb_uci/type/OrbitChangeTaskType.h"
#include "asb_uci/type/OrbitConjunctionAssessmentID_Type.h"
#include "asb_uci/type/OrbitConjunctionAssessmentMT.h"
#include "asb_uci/type/OrbitConjunctionAssessmentRequestMDT.h"
#include "asb_uci/type/OrbitConjunctionAssessmentRequestMT.h"
#include "asb_uci/type/OrbitConjunctionAssessmentRequestStatusMDT.h"
#include "asb_uci/type/OrbitConjunctionAssessmentRequestStatusMT.h"
#include "asb_uci/type/OrbitExecutionPlanSetType.h"
#include "asb_uci/type/OrbitKinematicsParametersType.h"
#include "asb_uci/type/OrbitKinematicsSequenceID_Type.h"
#include "asb_uci/type/OrbitKinematicsSequenceInsertionType.h"
#include "asb_uci/type/OrbitKinematicsSequenceType.h"
#include "asb_uci/type/OrbitKinematicsType.h"
#include "asb_uci/type/OrbitManeuverSegmentID_Type.h"
#include "asb_uci/type/OrbitMetricsID_Type.h"
#include "asb_uci/type/OrbitMetricsMT.h"
#include "asb_uci/type/OrbitMetricsRequestMDT.h"
#include "asb_uci/type/OrbitMetricsRequestMT.h"
#include "asb_uci/type/OrbitMetricsRequestStatusMDT.h"
#include "asb_uci/type/OrbitMetricsRequestStatusMT.h"
#include "asb_uci/type/OrbitModificationRequestMDT.h"
#include "asb_uci/type/OrbitModificationRequestMT.h"
#include "asb_uci/type/OrbitModificationRequestStatusMDT.h"
#include "asb_uci/type/OrbitModificationRequestStatusMT.h"
#include "asb_uci/type/OrbitPlanApprovalStatusMT.h"
#include "asb_uci/type/OrbitPlanCommandID_Type.h"
#include "asb_uci/type/OrbitPlanCommandMT.h"
#include "asb_uci/type/OrbitPlanCommandStatusMT.h"
#include "asb_uci/type/OrbitPlanExecutionStatusMT.h"
#include "asb_uci/type/OrbitPlanID_Type.h"
#include "asb_uci/type/OrbitPlanInputsType.h"
#include "asb_uci/type/OrbitPlanMT.h"
#include "asb_uci/type/OrbitPlanProcessDescriptionType.h"
#include "asb_uci/type/OrbitPlanStatusMT.h"
#include "asb_uci/type/OrbitPlanStatusType.h"
#include "asb_uci/type/OrbitPlanValidationCommandMDT.h"
#include "asb_uci/type/OrbitPlanValidationCommandMT.h"
#include "asb_uci/type/OrbitPlanValidationCommandStatusMDT.h"
#include "asb_uci/type/OrbitPlanValidationCommandStatusMT.h"
#include "asb_uci/type/OrbitPlanValidationID_Type.h"
#include "asb_uci/type/OrbitPlanValidationInputsType.h"
#include "asb_uci/type/OrbitPlanValidationMT.h"
#include "asb_uci/type/OrbitPlanningCandidateType.h"
#include "asb_uci/type/OrbitSequenceCompletedType.h"
#include "asb_uci/type/OrbitSequenceEstimateType.h"
#include "asb_uci/type/OrbitalSurveillanceCapabilityMT.h"
#include "asb_uci/type/OrbitalSurveillanceCapabilityStatusMDT.h"
#include "asb_uci/type/OrbitalSurveillanceCapabilityStatusMT.h"
#include "asb_uci/type/OrbitalSurveillanceCapabilityType.h"
#include "asb_uci/type/OrbitalSurveillanceObjectBaseType.h"
#include "asb_uci/type/OrbitalSurveillanceObjectType.h"
#include "asb_uci/type/OrbitalSurveillanceSensorActivityMT.h"
#include "asb_uci/type/OrbitalSurveillanceSensorActivityType.h"
#include "asb_uci/type/OrbitalSurveillanceSensorCapabilityMDT.h"
#include "asb_uci/type/OrbitalSurveillanceSensorCapabilityMT.h"
#include "asb_uci/type/OrbitalSurveillanceSensorCapabilityStatusMDT.h"
#include "asb_uci/type/OrbitalSurveillanceSensorCapabilityStatusMT.h"
#include "asb_uci/type/OrbitalSurveillanceSensorCapabilityType.h"
#include "asb_uci/type/OrbitalSurveillanceSensorTaskBaseType.h"
#include "asb_uci/type/OrbitalSurveillanceSensorTaskType.h"
#include "asb_uci/type/OrbitalSurveillanceTaskBaseType.h"
#include "asb_uci/type/OrbitalSurveillanceTaskType.h"
#include "asb_uci/type/OrderOfBattleC2_EmitterType.h"
#include "asb_uci/type/OrderOfBattleEmitterType.h"
#include "asb_uci/type/OrderOfBattleID_Type.h"
#include "asb_uci/type/OrderOfBattleMDT.h"
#include "asb_uci/type/OrderOfBattleMT.h"
#include "asb_uci/type/PackageID_Type.h"
#include "asb_uci/type/PackageMDT.h"
#include "asb_uci/type/PackageMT.h"
#include "asb_uci/type/PackageStatusMT.h"
#include "asb_uci/type/ParameterID_Type.h"
#include "asb_uci/type/PathID_Type.h"
#include "asb_uci/type/PixelCountSettingsType.h"
#include "asb_uci/type/PixelDataType.h"
#include "asb_uci/type/PixelOutputDataType.h"
#include "asb_uci/type/PlanInputsCoreType.h"
#include "asb_uci/type/PlanModificationRequestMDT.h"
#include "asb_uci/type/PlanModificationRequestMT.h"
#include "asb_uci/type/PlanModificationRequestStatusMDT.h"
#include "asb_uci/type/PlanModificationRequestStatusMT.h"
#include "asb_uci/type/PlannedActivityBaseType.h"
#include "asb_uci/type/PlannedActivityExecutionStatusType.h"
#include "asb_uci/type/PlannedActivityID_Type.h"
#include "asb_uci/type/PlannedActivityTriggerType.h"
#include "asb_uci/type/PlannedActivityType.h"
#include "asb_uci/type/PlannedCommActionExtendedType.h"
#include "asb_uci/type/PlannedCommActionType.h"
#include "asb_uci/type/PlanningAllowedType.h"
#include "asb_uci/type/PlanningApplicabilitySystemType.h"
#include "asb_uci/type/PlanningCandidateBaseType.h"
#include "asb_uci/type/PlanningDiscoveryBaseType.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

uci::base::Accessor* DerivedTypesCreator12::create(const uci::base::accessorType::AccessorType type) {
  switch (type) {
    case uci::type::accessorType::orbitalSurveillanceCapabilityMT:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceCapabilityMT>().release();
    case uci::type::accessorType::orbitalSurveillanceCapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceCapabilityStatusMDT>().release();
    case uci::type::accessorType::orbitalSurveillanceCapabilityStatusMT:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceCapabilityStatusMT>().release();
    case uci::type::accessorType::orbitalSurveillanceCapabilityType:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceCapabilityType>().release();
    case uci::type::accessorType::orbitalSurveillanceObjectBaseType:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceObjectBaseType>().release();
    case uci::type::accessorType::orbitalSurveillanceObjectType:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceObjectType>().release();
    case uci::type::accessorType::orbitalSurveillanceSensorActivityMT:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceSensorActivityMT>().release();
    case uci::type::accessorType::orbitalSurveillanceSensorActivityType:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceSensorActivityType>().release();
    case uci::type::accessorType::orbitalSurveillanceSensorCapabilityMDT:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceSensorCapabilityMDT>().release();
    case uci::type::accessorType::orbitalSurveillanceSensorCapabilityMT:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceSensorCapabilityMT>().release();
    case uci::type::accessorType::orbitalSurveillanceSensorCapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceSensorCapabilityStatusMDT>().release();
    case uci::type::accessorType::orbitalSurveillanceSensorCapabilityStatusMT:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceSensorCapabilityStatusMT>().release();
    case uci::type::accessorType::orbitalSurveillanceSensorCapabilityType:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceSensorCapabilityType>().release();
    case uci::type::accessorType::orbitalSurveillanceSensorTaskBaseType:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceSensorTaskBaseType>().release();
    case uci::type::accessorType::orbitalSurveillanceSensorTaskType:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceSensorTaskType>().release();
    case uci::type::accessorType::orbitalSurveillanceTaskBaseType:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceTaskBaseType>().release();
    case uci::type::accessorType::orbitalSurveillanceTaskType:
      return boost::make_unique<asb_uci::type::OrbitalSurveillanceTaskType>().release();
    case uci::type::accessorType::orbitChangeActivityMT:
      return boost::make_unique<asb_uci::type::OrbitChangeActivityMT>().release();
    case uci::type::accessorType::orbitChangeActivityType:
      return boost::make_unique<asb_uci::type::OrbitChangeActivityType>().release();
    case uci::type::accessorType::orbitChangeCapabilityMDT:
      return boost::make_unique<asb_uci::type::OrbitChangeCapabilityMDT>().release();
    case uci::type::accessorType::orbitChangeCapabilityMT:
      return boost::make_unique<asb_uci::type::OrbitChangeCapabilityMT>().release();
    case uci::type::accessorType::orbitChangeCapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::OrbitChangeCapabilityStatusMDT>().release();
    case uci::type::accessorType::orbitChangeCapabilityStatusMT:
      return boost::make_unique<asb_uci::type::OrbitChangeCapabilityStatusMT>().release();
    case uci::type::accessorType::orbitChangeCapabilityType:
      return boost::make_unique<asb_uci::type::OrbitChangeCapabilityType>().release();
    case uci::type::accessorType::orbitChangeTaskBaseType:
      return boost::make_unique<asb_uci::type::OrbitChangeTaskBaseType>().release();
    case uci::type::accessorType::orbitChangeTaskType:
      return boost::make_unique<asb_uci::type::OrbitChangeTaskType>().release();
    case uci::type::accessorType::orbitConjunctionAssessmentID_Type:
      return boost::make_unique<asb_uci::type::OrbitConjunctionAssessmentID_Type>().release();
    case uci::type::accessorType::orbitConjunctionAssessmentMT:
      return boost::make_unique<asb_uci::type::OrbitConjunctionAssessmentMT>().release();
    case uci::type::accessorType::orbitConjunctionAssessmentRequestMDT:
      return boost::make_unique<asb_uci::type::OrbitConjunctionAssessmentRequestMDT>().release();
    case uci::type::accessorType::orbitConjunctionAssessmentRequestMT:
      return boost::make_unique<asb_uci::type::OrbitConjunctionAssessmentRequestMT>().release();
    case uci::type::accessorType::orbitConjunctionAssessmentRequestStatusMDT:
      return boost::make_unique<asb_uci::type::OrbitConjunctionAssessmentRequestStatusMDT>().release();
    case uci::type::accessorType::orbitConjunctionAssessmentRequestStatusMT:
      return boost::make_unique<asb_uci::type::OrbitConjunctionAssessmentRequestStatusMT>().release();
    case uci::type::accessorType::orbitExecutionPlanSetType:
      return boost::make_unique<asb_uci::type::OrbitExecutionPlanSetType>().release();
    case uci::type::accessorType::orbitKinematicsParametersType:
      return boost::make_unique<asb_uci::type::OrbitKinematicsParametersType>().release();
    case uci::type::accessorType::orbitKinematicsSequenceID_Type:
      return boost::make_unique<asb_uci::type::OrbitKinematicsSequenceID_Type>().release();
    case uci::type::accessorType::orbitKinematicsSequenceInsertionType:
      return boost::make_unique<asb_uci::type::OrbitKinematicsSequenceInsertionType>().release();
    case uci::type::accessorType::orbitKinematicsSequenceType:
      return boost::make_unique<asb_uci::type::OrbitKinematicsSequenceType>().release();
    case uci::type::accessorType::orbitKinematicsType:
      return boost::make_unique<asb_uci::type::OrbitKinematicsType>().release();
    case uci::type::accessorType::orbitManeuverSegmentID_Type:
      return boost::make_unique<asb_uci::type::OrbitManeuverSegmentID_Type>().release();
    case uci::type::accessorType::orbitMetricsID_Type:
      return boost::make_unique<asb_uci::type::OrbitMetricsID_Type>().release();
    case uci::type::accessorType::orbitMetricsMT:
      return boost::make_unique<asb_uci::type::OrbitMetricsMT>().release();
    case uci::type::accessorType::orbitMetricsRequestMDT:
      return boost::make_unique<asb_uci::type::OrbitMetricsRequestMDT>().release();
    case uci::type::accessorType::orbitMetricsRequestMT:
      return boost::make_unique<asb_uci::type::OrbitMetricsRequestMT>().release();
    case uci::type::accessorType::orbitMetricsRequestStatusMDT:
      return boost::make_unique<asb_uci::type::OrbitMetricsRequestStatusMDT>().release();
    case uci::type::accessorType::orbitMetricsRequestStatusMT:
      return boost::make_unique<asb_uci::type::OrbitMetricsRequestStatusMT>().release();
    case uci::type::accessorType::orbitModificationRequestMDT:
      return boost::make_unique<asb_uci::type::OrbitModificationRequestMDT>().release();
    case uci::type::accessorType::orbitModificationRequestMT:
      return boost::make_unique<asb_uci::type::OrbitModificationRequestMT>().release();
    case uci::type::accessorType::orbitModificationRequestStatusMDT:
      return boost::make_unique<asb_uci::type::OrbitModificationRequestStatusMDT>().release();
    case uci::type::accessorType::orbitModificationRequestStatusMT:
      return boost::make_unique<asb_uci::type::OrbitModificationRequestStatusMT>().release();
    case uci::type::accessorType::orbitPlanApprovalStatusMT:
      return boost::make_unique<asb_uci::type::OrbitPlanApprovalStatusMT>().release();
    case uci::type::accessorType::orbitPlanCommandID_Type:
      return boost::make_unique<asb_uci::type::OrbitPlanCommandID_Type>().release();
    case uci::type::accessorType::orbitPlanCommandMT:
      return boost::make_unique<asb_uci::type::OrbitPlanCommandMT>().release();
    case uci::type::accessorType::orbitPlanCommandStatusMT:
      return boost::make_unique<asb_uci::type::OrbitPlanCommandStatusMT>().release();
    case uci::type::accessorType::orbitPlanExecutionStatusMT:
      return boost::make_unique<asb_uci::type::OrbitPlanExecutionStatusMT>().release();
    case uci::type::accessorType::orbitPlanID_Type:
      return boost::make_unique<asb_uci::type::OrbitPlanID_Type>().release();
    case uci::type::accessorType::orbitPlanInputsType:
      return boost::make_unique<asb_uci::type::OrbitPlanInputsType>().release();
    case uci::type::accessorType::orbitPlanMT:
      return boost::make_unique<asb_uci::type::OrbitPlanMT>().release();
    case uci::type::accessorType::orbitPlanningCandidateType:
      return boost::make_unique<asb_uci::type::OrbitPlanningCandidateType>().release();
    case uci::type::accessorType::orbitPlanProcessDescriptionType:
      return boost::make_unique<asb_uci::type::OrbitPlanProcessDescriptionType>().release();
    case uci::type::accessorType::orbitPlanStatusMT:
      return boost::make_unique<asb_uci::type::OrbitPlanStatusMT>().release();
    case uci::type::accessorType::orbitPlanStatusType:
      return boost::make_unique<asb_uci::type::OrbitPlanStatusType>().release();
    case uci::type::accessorType::orbitPlanValidationCommandMDT:
      return boost::make_unique<asb_uci::type::OrbitPlanValidationCommandMDT>().release();
    case uci::type::accessorType::orbitPlanValidationCommandMT:
      return boost::make_unique<asb_uci::type::OrbitPlanValidationCommandMT>().release();
    case uci::type::accessorType::orbitPlanValidationCommandStatusMDT:
      return boost::make_unique<asb_uci::type::OrbitPlanValidationCommandStatusMDT>().release();
    case uci::type::accessorType::orbitPlanValidationCommandStatusMT:
      return boost::make_unique<asb_uci::type::OrbitPlanValidationCommandStatusMT>().release();
    case uci::type::accessorType::orbitPlanValidationID_Type:
      return boost::make_unique<asb_uci::type::OrbitPlanValidationID_Type>().release();
    case uci::type::accessorType::orbitPlanValidationInputsType:
      return boost::make_unique<asb_uci::type::OrbitPlanValidationInputsType>().release();
    case uci::type::accessorType::orbitPlanValidationMT:
      return boost::make_unique<asb_uci::type::OrbitPlanValidationMT>().release();
    case uci::type::accessorType::orbitSequenceCompletedType:
      return boost::make_unique<asb_uci::type::OrbitSequenceCompletedType>().release();
    case uci::type::accessorType::orbitSequenceEstimateType:
      return boost::make_unique<asb_uci::type::OrbitSequenceEstimateType>().release();
    case uci::type::accessorType::orderOfBattleC2_EmitterType:
      return boost::make_unique<asb_uci::type::OrderOfBattleC2_EmitterType>().release();
    case uci::type::accessorType::orderOfBattleEmitterType:
      return boost::make_unique<asb_uci::type::OrderOfBattleEmitterType>().release();
    case uci::type::accessorType::orderOfBattleID_Type:
      return boost::make_unique<asb_uci::type::OrderOfBattleID_Type>().release();
    case uci::type::accessorType::orderOfBattleMDT:
      return boost::make_unique<asb_uci::type::OrderOfBattleMDT>().release();
    case uci::type::accessorType::orderOfBattleMT:
      return boost::make_unique<asb_uci::type::OrderOfBattleMT>().release();
    case uci::type::accessorType::packageID_Type:
      return boost::make_unique<asb_uci::type::PackageID_Type>().release();
    case uci::type::accessorType::packageMDT:
      return boost::make_unique<asb_uci::type::PackageMDT>().release();
    case uci::type::accessorType::packageMT:
      return boost::make_unique<asb_uci::type::PackageMT>().release();
    case uci::type::accessorType::packageStatusMT:
      return boost::make_unique<asb_uci::type::PackageStatusMT>().release();
    case uci::type::accessorType::parameterID_Type:
      return boost::make_unique<asb_uci::type::ParameterID_Type>().release();
    case uci::type::accessorType::pathID_Type:
      return boost::make_unique<asb_uci::type::PathID_Type>().release();
    case uci::type::accessorType::pixelCountSettingsType:
      return boost::make_unique<asb_uci::type::PixelCountSettingsType>().release();
    case uci::type::accessorType::pixelDataType:
      return boost::make_unique<asb_uci::type::PixelDataType>().release();
    case uci::type::accessorType::pixelOutputDataType:
      return boost::make_unique<asb_uci::type::PixelOutputDataType>().release();
    case uci::type::accessorType::planInputsCoreType:
      return boost::make_unique<asb_uci::type::PlanInputsCoreType>().release();
    case uci::type::accessorType::planModificationRequestMDT:
      return boost::make_unique<asb_uci::type::PlanModificationRequestMDT>().release();
    case uci::type::accessorType::planModificationRequestMT:
      return boost::make_unique<asb_uci::type::PlanModificationRequestMT>().release();
    case uci::type::accessorType::planModificationRequestStatusMDT:
      return boost::make_unique<asb_uci::type::PlanModificationRequestStatusMDT>().release();
    case uci::type::accessorType::planModificationRequestStatusMT:
      return boost::make_unique<asb_uci::type::PlanModificationRequestStatusMT>().release();
    case uci::type::accessorType::plannedActivityBaseType:
      return boost::make_unique<asb_uci::type::PlannedActivityBaseType>().release();
    case uci::type::accessorType::plannedActivityExecutionStatusType:
      return boost::make_unique<asb_uci::type::PlannedActivityExecutionStatusType>().release();
    case uci::type::accessorType::plannedActivityID_Type:
      return boost::make_unique<asb_uci::type::PlannedActivityID_Type>().release();
    case uci::type::accessorType::plannedActivityTriggerType:
      return boost::make_unique<asb_uci::type::PlannedActivityTriggerType>().release();
    case uci::type::accessorType::plannedActivityType:
      return boost::make_unique<asb_uci::type::PlannedActivityType>().release();
    case uci::type::accessorType::plannedCommActionExtendedType:
      return boost::make_unique<asb_uci::type::PlannedCommActionExtendedType>().release();
    case uci::type::accessorType::plannedCommActionType:
      return boost::make_unique<asb_uci::type::PlannedCommActionType>().release();
    case uci::type::accessorType::planningAllowedType:
      return boost::make_unique<asb_uci::type::PlanningAllowedType>().release();
    case uci::type::accessorType::planningApplicabilitySystemType:
      return boost::make_unique<asb_uci::type::PlanningApplicabilitySystemType>().release();
    case uci::type::accessorType::planningCandidateBaseType:
      return boost::make_unique<asb_uci::type::PlanningCandidateBaseType>().release();
    case uci::type::accessorType::planningDiscoveryBaseType:
      return boost::make_unique<asb_uci::type::PlanningDiscoveryBaseType>().release();
    default:
      return nullptr;
  }
}

} // namespace util

} // namespace asb_uci

