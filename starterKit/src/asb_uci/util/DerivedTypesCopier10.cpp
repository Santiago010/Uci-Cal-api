/** @file DerivedTypesCopier10.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCopier10.h"

#include "asb_uci/type/LOS_MeasurementWithUncertaintyType.h"
#include "asb_uci/type/LOS_VariableA_Type.h"
#include "asb_uci/type/LOS_VariableB_Type.h"
#include "asb_uci/type/LogMT.h"
#include "asb_uci/type/MDF_ID_Type.h"
#include "asb_uci/type/MDF_SubCategoryFileID_Type.h"
#include "asb_uci/type/MDF_SubCategoryID_Type.h"
#include "asb_uci/type/MTI_ActivityStatusBaseType.h"
#include "asb_uci/type/MTI_ActivityStatusDetailType.h"
#include "asb_uci/type/MTI_OpZoneFilterAreaType.h"
#include "asb_uci/type/MTI_STANAG_4607_OpZoneFilterAreaType.h"
#include "asb_uci/type/ManagedListBaseType.h"
#include "asb_uci/type/MeasurementGroupID_Type.h"
#include "asb_uci/type/MeasurementID_Type.h"
#include "asb_uci/type/MessageConfigurationID_Type.h"
#include "asb_uci/type/MessageTransmissionFilterRecordDRLE.h"
#include "asb_uci/type/MessageTransmissionFilterRecordID_Type.h"
#include "asb_uci/type/MessageTransmissionFilterRecordMDT.h"
#include "asb_uci/type/MessageTransmissionFilterRecordMT.h"
#include "asb_uci/type/MessageTransmissionListDRL.h"
#include "asb_uci/type/MessageTransmissionListID_Type.h"
#include "asb_uci/type/MessageTransmissionListMDT.h"
#include "asb_uci/type/MessageTransmissionListMT.h"
#include "asb_uci/type/MessageType.h"
#include "asb_uci/type/MetadataID_Type.h"
#include "asb_uci/type/MissionActivationRequestMDT.h"
#include "asb_uci/type/MissionActivationRequestMT.h"
#include "asb_uci/type/MissionActivationRequestStatusMDT.h"
#include "asb_uci/type/MissionActivationRequestStatusMT.h"
#include "asb_uci/type/MissionContingencyAlertID_Type.h"
#include "asb_uci/type/MissionContingencyAlertMT.h"
#include "asb_uci/type/MissionDefinitionID_Type.h"
#include "asb_uci/type/MissionDefinitionMDT.h"
#include "asb_uci/type/MissionDefinitionMT.h"
#include "asb_uci/type/MissionEnvironmentObjectActionType.h"
#include "asb_uci/type/MissionEnvironmentObjectBaseType.h"
#include "asb_uci/type/MissionEnvironmentObjectEffectType.h"
#include "asb_uci/type/MissionEnvironmentObjectEntityType.h"
#include "asb_uci/type/MissionEnvironmentObjectOpLineType.h"
#include "asb_uci/type/MissionEnvironmentObjectOpPointType.h"
#include "asb_uci/type/MissionEnvironmentObjectOpVolumeType.h"
#include "asb_uci/type/MissionEnvironmentObjectOpZoneType.h"
#include "asb_uci/type/MissionEnvironmentObjectResponseType.h"
#include "asb_uci/type/MissionEnvironmentObjectSystemType.h"
#include "asb_uci/type/MissionEnvironmentObjectTaskType.h"
#include "asb_uci/type/MissionEnvironmentOverrideID_Type.h"
#include "asb_uci/type/MissionEnvironmentOverrideMDT.h"
#include "asb_uci/type/MissionEnvironmentOverrideMT.h"
#include "asb_uci/type/MissionID_Type.h"
#include "asb_uci/type/MissionPlanActivationApprovalStatusMT.h"
#include "asb_uci/type/MissionPlanActivationCommandID_Type.h"
#include "asb_uci/type/MissionPlanActivationCommandMT.h"
#include "asb_uci/type/MissionPlanActivationCommandStatusMT.h"
#include "asb_uci/type/MissionPlanActivationStatusMT.h"
#include "asb_uci/type/MissionPlanApprovalStatusMT.h"
#include "asb_uci/type/MissionPlanCommandID_Type.h"
#include "asb_uci/type/MissionPlanCommandMT.h"
#include "asb_uci/type/MissionPlanCommandStatusMT.h"
#include "asb_uci/type/MissionPlanExecutionStatusMT.h"
#include "asb_uci/type/MissionPlanID_Type.h"
#include "asb_uci/type/MissionPlanInputsType.h"
#include "asb_uci/type/MissionPlanMT.h"
#include "asb_uci/type/MissionPlanMetricsReportID_Type.h"
#include "asb_uci/type/MissionPlanMetricsReportMT.h"
#include "asb_uci/type/MissionPlanMetricsReportRequestMDT.h"
#include "asb_uci/type/MissionPlanMetricsReportRequestMT.h"
#include "asb_uci/type/MissionPlanMetricsReportRequestStatusMDT.h"
#include "asb_uci/type/MissionPlanMetricsReportRequestStatusMT.h"
#include "asb_uci/type/MissionPlanProcessDescriptionType.h"
#include "asb_uci/type/MissionPlanStatusMT.h"
#include "asb_uci/type/MissionPlanValidationCommandMDT.h"
#include "asb_uci/type/MissionPlanValidationCommandMT.h"
#include "asb_uci/type/MissionPlanValidationCommandStatusMDT.h"
#include "asb_uci/type/MissionPlanValidationCommandStatusMT.h"
#include "asb_uci/type/MissionPlanValidationID_Type.h"
#include "asb_uci/type/MissionPlanValidationInputsType.h"
#include "asb_uci/type/MissionPlanValidationMT.h"
#include "asb_uci/type/MissionPlanningOrchestrationID_Type.h"
#include "asb_uci/type/MissionPlanningOrchestrationMDT.h"
#include "asb_uci/type/MissionPlanningOrchestrationMT.h"
#include "asb_uci/type/MissionRequirementStatusMT.h"
#include "asb_uci/type/ModRateDataType.h"
#include "asb_uci/type/ModulationOnPulseDataBaseType.h"
#include "asb_uci/type/ModulationOnPulseDataType.h"
#include "asb_uci/type/MultiObjectType.h"
#include "asb_uci/type/MultistaticEmitterDataID_Type.h"
#include "asb_uci/type/MultistaticEmitterDataMT.h"
#include "asb_uci/type/MultistaticEmitterID_Type.h"
#include "asb_uci/type/MvAnomalyEventID_Type.h"
#include "asb_uci/type/MvAnomalyEventMDT.h"
#include "asb_uci/type/MvAnomalyEventMT.h"
#include "asb_uci/type/NATO_Link1DataLinkIdentifierType.h"
#include "asb_uci/type/NATO_Link1QuerySpecificDataType.h"
#include "asb_uci/type/NITF_PackingPlanPET.h"
#include "asb_uci/type/NITF_PackingPlanRevA_Type.h"
#include "asb_uci/type/NITF_PackingPlanType.h"
#include "asb_uci/type/NameValuePairType.h"
#include "asb_uci/type/NavigationReportMT.h"
#include "asb_uci/type/NetworkLinkID_Type.h"
#include "asb_uci/type/NotificationBaseType.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"
#include "uci/type/LOS_MeasurementWithUncertaintyType.h"
#include "uci/type/LOS_VariableA_Type.h"
#include "uci/type/LOS_VariableB_Type.h"
#include "uci/type/LogMT.h"
#include "uci/type/MDF_ID_Type.h"
#include "uci/type/MDF_SubCategoryFileID_Type.h"
#include "uci/type/MDF_SubCategoryID_Type.h"
#include "uci/type/MTI_ActivityStatusBaseType.h"
#include "uci/type/MTI_ActivityStatusDetailType.h"
#include "uci/type/MTI_OpZoneFilterAreaType.h"
#include "uci/type/MTI_STANAG_4607_OpZoneFilterAreaType.h"
#include "uci/type/ManagedListBaseType.h"
#include "uci/type/MeasurementGroupID_Type.h"
#include "uci/type/MeasurementID_Type.h"
#include "uci/type/MessageConfigurationID_Type.h"
#include "uci/type/MessageTransmissionFilterRecordDRLE.h"
#include "uci/type/MessageTransmissionFilterRecordID_Type.h"
#include "uci/type/MessageTransmissionFilterRecordMDT.h"
#include "uci/type/MessageTransmissionFilterRecordMT.h"
#include "uci/type/MessageTransmissionListDRL.h"
#include "uci/type/MessageTransmissionListID_Type.h"
#include "uci/type/MessageTransmissionListMDT.h"
#include "uci/type/MessageTransmissionListMT.h"
#include "uci/type/MessageType.h"
#include "uci/type/MetadataID_Type.h"
#include "uci/type/MissionActivationRequestMDT.h"
#include "uci/type/MissionActivationRequestMT.h"
#include "uci/type/MissionActivationRequestStatusMDT.h"
#include "uci/type/MissionActivationRequestStatusMT.h"
#include "uci/type/MissionContingencyAlertID_Type.h"
#include "uci/type/MissionContingencyAlertMT.h"
#include "uci/type/MissionDefinitionID_Type.h"
#include "uci/type/MissionDefinitionMDT.h"
#include "uci/type/MissionDefinitionMT.h"
#include "uci/type/MissionEnvironmentObjectActionType.h"
#include "uci/type/MissionEnvironmentObjectBaseType.h"
#include "uci/type/MissionEnvironmentObjectEffectType.h"
#include "uci/type/MissionEnvironmentObjectEntityType.h"
#include "uci/type/MissionEnvironmentObjectOpLineType.h"
#include "uci/type/MissionEnvironmentObjectOpPointType.h"
#include "uci/type/MissionEnvironmentObjectOpVolumeType.h"
#include "uci/type/MissionEnvironmentObjectOpZoneType.h"
#include "uci/type/MissionEnvironmentObjectResponseType.h"
#include "uci/type/MissionEnvironmentObjectSystemType.h"
#include "uci/type/MissionEnvironmentObjectTaskType.h"
#include "uci/type/MissionEnvironmentOverrideID_Type.h"
#include "uci/type/MissionEnvironmentOverrideMDT.h"
#include "uci/type/MissionEnvironmentOverrideMT.h"
#include "uci/type/MissionID_Type.h"
#include "uci/type/MissionPlanActivationApprovalStatusMT.h"
#include "uci/type/MissionPlanActivationCommandID_Type.h"
#include "uci/type/MissionPlanActivationCommandMT.h"
#include "uci/type/MissionPlanActivationCommandStatusMT.h"
#include "uci/type/MissionPlanActivationStatusMT.h"
#include "uci/type/MissionPlanApprovalStatusMT.h"
#include "uci/type/MissionPlanCommandID_Type.h"
#include "uci/type/MissionPlanCommandMT.h"
#include "uci/type/MissionPlanCommandStatusMT.h"
#include "uci/type/MissionPlanExecutionStatusMT.h"
#include "uci/type/MissionPlanID_Type.h"
#include "uci/type/MissionPlanInputsType.h"
#include "uci/type/MissionPlanMT.h"
#include "uci/type/MissionPlanMetricsReportID_Type.h"
#include "uci/type/MissionPlanMetricsReportMT.h"
#include "uci/type/MissionPlanMetricsReportRequestMDT.h"
#include "uci/type/MissionPlanMetricsReportRequestMT.h"
#include "uci/type/MissionPlanMetricsReportRequestStatusMDT.h"
#include "uci/type/MissionPlanMetricsReportRequestStatusMT.h"
#include "uci/type/MissionPlanProcessDescriptionType.h"
#include "uci/type/MissionPlanStatusMT.h"
#include "uci/type/MissionPlanValidationCommandMDT.h"
#include "uci/type/MissionPlanValidationCommandMT.h"
#include "uci/type/MissionPlanValidationCommandStatusMDT.h"
#include "uci/type/MissionPlanValidationCommandStatusMT.h"
#include "uci/type/MissionPlanValidationID_Type.h"
#include "uci/type/MissionPlanValidationInputsType.h"
#include "uci/type/MissionPlanValidationMT.h"
#include "uci/type/MissionPlanningOrchestrationID_Type.h"
#include "uci/type/MissionPlanningOrchestrationMDT.h"
#include "uci/type/MissionPlanningOrchestrationMT.h"
#include "uci/type/MissionRequirementStatusMT.h"
#include "uci/type/ModRateDataType.h"
#include "uci/type/ModulationOnPulseDataBaseType.h"
#include "uci/type/ModulationOnPulseDataType.h"
#include "uci/type/MultiObjectType.h"
#include "uci/type/MultistaticEmitterDataID_Type.h"
#include "uci/type/MultistaticEmitterDataMT.h"
#include "uci/type/MultistaticEmitterID_Type.h"
#include "uci/type/MvAnomalyEventID_Type.h"
#include "uci/type/MvAnomalyEventMDT.h"
#include "uci/type/MvAnomalyEventMT.h"
#include "uci/type/NATO_Link1DataLinkIdentifierType.h"
#include "uci/type/NATO_Link1QuerySpecificDataType.h"
#include "uci/type/NITF_PackingPlanPET.h"
#include "uci/type/NITF_PackingPlanRevA_Type.h"
#include "uci/type/NITF_PackingPlanType.h"
#include "uci/type/NameValuePairType.h"
#include "uci/type/NavigationReportMT.h"
#include "uci/type/NetworkLinkID_Type.h"
#include "uci/type/NotificationBaseType.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

bool DerivedTypesCopier10::copy(const uci::base::Accessor& source, uci::base::Accessor& destination) {
  switch (source.getAccessorType()) {
    case uci::type::accessorType::logMT:
      dynamic_cast<asb_uci::type::LogMT&>(destination).copyImpl(dynamic_cast<const uci::type::LogMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::lOS_MeasurementWithUncertaintyType:
      dynamic_cast<asb_uci::type::LOS_MeasurementWithUncertaintyType&>(destination).copyImpl(dynamic_cast<const uci::type::LOS_MeasurementWithUncertaintyType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::lOS_VariableA_Type:
      dynamic_cast<asb_uci::type::LOS_VariableA_Type&>(destination).copyImpl(dynamic_cast<const uci::type::LOS_VariableA_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::lOS_VariableB_Type:
      dynamic_cast<asb_uci::type::LOS_VariableB_Type&>(destination).copyImpl(dynamic_cast<const uci::type::LOS_VariableB_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::managedListBaseType:
      dynamic_cast<asb_uci::type::ManagedListBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::ManagedListBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::mDF_ID_Type:
      dynamic_cast<asb_uci::type::MDF_ID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MDF_ID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::mDF_SubCategoryFileID_Type:
      dynamic_cast<asb_uci::type::MDF_SubCategoryFileID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MDF_SubCategoryFileID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::mDF_SubCategoryID_Type:
      dynamic_cast<asb_uci::type::MDF_SubCategoryID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MDF_SubCategoryID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::measurementGroupID_Type:
      dynamic_cast<asb_uci::type::MeasurementGroupID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MeasurementGroupID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::measurementID_Type:
      dynamic_cast<asb_uci::type::MeasurementID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MeasurementID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::messageConfigurationID_Type:
      dynamic_cast<asb_uci::type::MessageConfigurationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MessageConfigurationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::messageTransmissionFilterRecordDRLE:
      dynamic_cast<asb_uci::type::MessageTransmissionFilterRecordDRLE&>(destination).copyImpl(dynamic_cast<const uci::type::MessageTransmissionFilterRecordDRLE&>(source), false);
      return true;
      break;
    case uci::type::accessorType::messageTransmissionFilterRecordID_Type:
      dynamic_cast<asb_uci::type::MessageTransmissionFilterRecordID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MessageTransmissionFilterRecordID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::messageTransmissionFilterRecordMDT:
      dynamic_cast<asb_uci::type::MessageTransmissionFilterRecordMDT&>(destination).copyImpl(dynamic_cast<const uci::type::MessageTransmissionFilterRecordMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::messageTransmissionFilterRecordMT:
      dynamic_cast<asb_uci::type::MessageTransmissionFilterRecordMT&>(destination).copyImpl(dynamic_cast<const uci::type::MessageTransmissionFilterRecordMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::messageTransmissionListDRL:
      dynamic_cast<asb_uci::type::MessageTransmissionListDRL&>(destination).copyImpl(dynamic_cast<const uci::type::MessageTransmissionListDRL&>(source), false);
      return true;
      break;
    case uci::type::accessorType::messageTransmissionListID_Type:
      dynamic_cast<asb_uci::type::MessageTransmissionListID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MessageTransmissionListID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::messageTransmissionListMDT:
      dynamic_cast<asb_uci::type::MessageTransmissionListMDT&>(destination).copyImpl(dynamic_cast<const uci::type::MessageTransmissionListMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::messageTransmissionListMT:
      dynamic_cast<asb_uci::type::MessageTransmissionListMT&>(destination).copyImpl(dynamic_cast<const uci::type::MessageTransmissionListMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::messageType:
      dynamic_cast<asb_uci::type::MessageType&>(destination).copyImpl(dynamic_cast<const uci::type::MessageType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::metadataID_Type:
      dynamic_cast<asb_uci::type::MetadataID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MetadataID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionActivationRequestMDT:
      dynamic_cast<asb_uci::type::MissionActivationRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionActivationRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionActivationRequestMT:
      dynamic_cast<asb_uci::type::MissionActivationRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionActivationRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionActivationRequestStatusMDT:
      dynamic_cast<asb_uci::type::MissionActivationRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionActivationRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionActivationRequestStatusMT:
      dynamic_cast<asb_uci::type::MissionActivationRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionActivationRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionContingencyAlertID_Type:
      dynamic_cast<asb_uci::type::MissionContingencyAlertID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MissionContingencyAlertID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionContingencyAlertMT:
      dynamic_cast<asb_uci::type::MissionContingencyAlertMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionContingencyAlertMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionDefinitionID_Type:
      dynamic_cast<asb_uci::type::MissionDefinitionID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MissionDefinitionID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionDefinitionMDT:
      dynamic_cast<asb_uci::type::MissionDefinitionMDT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionDefinitionMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionDefinitionMT:
      dynamic_cast<asb_uci::type::MissionDefinitionMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionDefinitionMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentObjectActionType:
      dynamic_cast<asb_uci::type::MissionEnvironmentObjectActionType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentObjectActionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentObjectBaseType:
      dynamic_cast<asb_uci::type::MissionEnvironmentObjectBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentObjectBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentObjectEffectType:
      dynamic_cast<asb_uci::type::MissionEnvironmentObjectEffectType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentObjectEffectType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentObjectEntityType:
      dynamic_cast<asb_uci::type::MissionEnvironmentObjectEntityType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentObjectEntityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentObjectOpLineType:
      dynamic_cast<asb_uci::type::MissionEnvironmentObjectOpLineType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentObjectOpLineType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentObjectOpPointType:
      dynamic_cast<asb_uci::type::MissionEnvironmentObjectOpPointType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentObjectOpPointType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentObjectOpVolumeType:
      dynamic_cast<asb_uci::type::MissionEnvironmentObjectOpVolumeType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentObjectOpVolumeType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentObjectOpZoneType:
      dynamic_cast<asb_uci::type::MissionEnvironmentObjectOpZoneType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentObjectOpZoneType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentObjectResponseType:
      dynamic_cast<asb_uci::type::MissionEnvironmentObjectResponseType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentObjectResponseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentObjectSystemType:
      dynamic_cast<asb_uci::type::MissionEnvironmentObjectSystemType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentObjectSystemType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentObjectTaskType:
      dynamic_cast<asb_uci::type::MissionEnvironmentObjectTaskType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentObjectTaskType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentOverrideID_Type:
      dynamic_cast<asb_uci::type::MissionEnvironmentOverrideID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentOverrideID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentOverrideMDT:
      dynamic_cast<asb_uci::type::MissionEnvironmentOverrideMDT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentOverrideMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionEnvironmentOverrideMT:
      dynamic_cast<asb_uci::type::MissionEnvironmentOverrideMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionEnvironmentOverrideMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionID_Type:
      dynamic_cast<asb_uci::type::MissionID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MissionID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanActivationApprovalStatusMT:
      dynamic_cast<asb_uci::type::MissionPlanActivationApprovalStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanActivationApprovalStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanActivationCommandID_Type:
      dynamic_cast<asb_uci::type::MissionPlanActivationCommandID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanActivationCommandID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanActivationCommandMT:
      dynamic_cast<asb_uci::type::MissionPlanActivationCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanActivationCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanActivationCommandStatusMT:
      dynamic_cast<asb_uci::type::MissionPlanActivationCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanActivationCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanActivationStatusMT:
      dynamic_cast<asb_uci::type::MissionPlanActivationStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanActivationStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanApprovalStatusMT:
      dynamic_cast<asb_uci::type::MissionPlanApprovalStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanApprovalStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanCommandID_Type:
      dynamic_cast<asb_uci::type::MissionPlanCommandID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanCommandID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanCommandMT:
      dynamic_cast<asb_uci::type::MissionPlanCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanCommandStatusMT:
      dynamic_cast<asb_uci::type::MissionPlanCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanExecutionStatusMT:
      dynamic_cast<asb_uci::type::MissionPlanExecutionStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanExecutionStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanID_Type:
      dynamic_cast<asb_uci::type::MissionPlanID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanInputsType:
      dynamic_cast<asb_uci::type::MissionPlanInputsType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanInputsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanMetricsReportID_Type:
      dynamic_cast<asb_uci::type::MissionPlanMetricsReportID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanMetricsReportID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanMetricsReportMT:
      dynamic_cast<asb_uci::type::MissionPlanMetricsReportMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanMetricsReportMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanMetricsReportRequestMDT:
      dynamic_cast<asb_uci::type::MissionPlanMetricsReportRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanMetricsReportRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanMetricsReportRequestMT:
      dynamic_cast<asb_uci::type::MissionPlanMetricsReportRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanMetricsReportRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanMetricsReportRequestStatusMDT:
      dynamic_cast<asb_uci::type::MissionPlanMetricsReportRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanMetricsReportRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanMetricsReportRequestStatusMT:
      dynamic_cast<asb_uci::type::MissionPlanMetricsReportRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanMetricsReportRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanMT:
      dynamic_cast<asb_uci::type::MissionPlanMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanningOrchestrationID_Type:
      dynamic_cast<asb_uci::type::MissionPlanningOrchestrationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanningOrchestrationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanningOrchestrationMDT:
      dynamic_cast<asb_uci::type::MissionPlanningOrchestrationMDT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanningOrchestrationMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanningOrchestrationMT:
      dynamic_cast<asb_uci::type::MissionPlanningOrchestrationMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanningOrchestrationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanProcessDescriptionType:
      dynamic_cast<asb_uci::type::MissionPlanProcessDescriptionType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanProcessDescriptionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanStatusMT:
      dynamic_cast<asb_uci::type::MissionPlanStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanValidationCommandMDT:
      dynamic_cast<asb_uci::type::MissionPlanValidationCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanValidationCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanValidationCommandMT:
      dynamic_cast<asb_uci::type::MissionPlanValidationCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanValidationCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanValidationCommandStatusMDT:
      dynamic_cast<asb_uci::type::MissionPlanValidationCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanValidationCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanValidationCommandStatusMT:
      dynamic_cast<asb_uci::type::MissionPlanValidationCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanValidationCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanValidationID_Type:
      dynamic_cast<asb_uci::type::MissionPlanValidationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanValidationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanValidationInputsType:
      dynamic_cast<asb_uci::type::MissionPlanValidationInputsType&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanValidationInputsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionPlanValidationMT:
      dynamic_cast<asb_uci::type::MissionPlanValidationMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionPlanValidationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::missionRequirementStatusMT:
      dynamic_cast<asb_uci::type::MissionRequirementStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::MissionRequirementStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::modRateDataType:
      dynamic_cast<asb_uci::type::ModRateDataType&>(destination).copyImpl(dynamic_cast<const uci::type::ModRateDataType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::modulationOnPulseDataBaseType:
      dynamic_cast<asb_uci::type::ModulationOnPulseDataBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::ModulationOnPulseDataBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::modulationOnPulseDataType:
      dynamic_cast<asb_uci::type::ModulationOnPulseDataType&>(destination).copyImpl(dynamic_cast<const uci::type::ModulationOnPulseDataType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::mTI_ActivityStatusBaseType:
      dynamic_cast<asb_uci::type::MTI_ActivityStatusBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::MTI_ActivityStatusBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::mTI_ActivityStatusDetailType:
      dynamic_cast<asb_uci::type::MTI_ActivityStatusDetailType&>(destination).copyImpl(dynamic_cast<const uci::type::MTI_ActivityStatusDetailType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::mTI_OpZoneFilterAreaType:
      dynamic_cast<asb_uci::type::MTI_OpZoneFilterAreaType&>(destination).copyImpl(dynamic_cast<const uci::type::MTI_OpZoneFilterAreaType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::mTI_STANAG_4607_OpZoneFilterAreaType:
      dynamic_cast<asb_uci::type::MTI_STANAG_4607_OpZoneFilterAreaType&>(destination).copyImpl(dynamic_cast<const uci::type::MTI_STANAG_4607_OpZoneFilterAreaType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::multiObjectType:
      dynamic_cast<asb_uci::type::MultiObjectType&>(destination).copyImpl(dynamic_cast<const uci::type::MultiObjectType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::multistaticEmitterDataID_Type:
      dynamic_cast<asb_uci::type::MultistaticEmitterDataID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MultistaticEmitterDataID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::multistaticEmitterDataMT:
      dynamic_cast<asb_uci::type::MultistaticEmitterDataMT&>(destination).copyImpl(dynamic_cast<const uci::type::MultistaticEmitterDataMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::multistaticEmitterID_Type:
      dynamic_cast<asb_uci::type::MultistaticEmitterID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MultistaticEmitterID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::mvAnomalyEventID_Type:
      dynamic_cast<asb_uci::type::MvAnomalyEventID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::MvAnomalyEventID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::mvAnomalyEventMDT:
      dynamic_cast<asb_uci::type::MvAnomalyEventMDT&>(destination).copyImpl(dynamic_cast<const uci::type::MvAnomalyEventMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::mvAnomalyEventMT:
      dynamic_cast<asb_uci::type::MvAnomalyEventMT&>(destination).copyImpl(dynamic_cast<const uci::type::MvAnomalyEventMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::nameValuePairType:
      dynamic_cast<asb_uci::type::NameValuePairType&>(destination).copyImpl(dynamic_cast<const uci::type::NameValuePairType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::nATO_Link1DataLinkIdentifierType:
      dynamic_cast<asb_uci::type::NATO_Link1DataLinkIdentifierType&>(destination).copyImpl(dynamic_cast<const uci::type::NATO_Link1DataLinkIdentifierType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::nATO_Link1QuerySpecificDataType:
      dynamic_cast<asb_uci::type::NATO_Link1QuerySpecificDataType&>(destination).copyImpl(dynamic_cast<const uci::type::NATO_Link1QuerySpecificDataType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::navigationReportMT:
      dynamic_cast<asb_uci::type::NavigationReportMT&>(destination).copyImpl(dynamic_cast<const uci::type::NavigationReportMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::networkLinkID_Type:
      dynamic_cast<asb_uci::type::NetworkLinkID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::NetworkLinkID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::nITF_PackingPlanPET:
      dynamic_cast<asb_uci::type::NITF_PackingPlanPET&>(destination).copyImpl(dynamic_cast<const uci::type::NITF_PackingPlanPET&>(source), false);
      return true;
      break;
    case uci::type::accessorType::nITF_PackingPlanRevA_Type:
      dynamic_cast<asb_uci::type::NITF_PackingPlanRevA_Type&>(destination).copyImpl(dynamic_cast<const uci::type::NITF_PackingPlanRevA_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::nITF_PackingPlanType:
      dynamic_cast<asb_uci::type::NITF_PackingPlanType&>(destination).copyImpl(dynamic_cast<const uci::type::NITF_PackingPlanType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::notificationBaseType:
      dynamic_cast<asb_uci::type::NotificationBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::NotificationBaseType&>(source), false);
      return true;
      break;
    default:
      return false;
  }
}

} // namespace util

} // namespace asb_uci

