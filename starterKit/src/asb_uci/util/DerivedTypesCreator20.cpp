/** @file DerivedTypesCreator20.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCreator20.h"

#include <boost/smart_ptr/make_unique.hpp>

#include "asb_uci/type/TLE_BaseType.h"
#include "asb_uci/type/TLE_Type.h"
#include "asb_uci/type/TLE_WithParametersType.h"
#include "asb_uci/type/TagAssociationMT.h"
#include "asb_uci/type/TaskAchievabilityAssessmentPET.h"
#include "asb_uci/type/TaskAchievabilityAssessmentRequestPET.h"
#include "asb_uci/type/TaskAllocationType.h"
#include "asb_uci/type/TaskCancelCommandMDT.h"
#include "asb_uci/type/TaskCancelCommandMT.h"
#include "asb_uci/type/TaskCancelCommandStatusMDT.h"
#include "asb_uci/type/TaskCancelCommandStatusMT.h"
#include "asb_uci/type/TaskCapabilityCommandType.h"
#include "asb_uci/type/TaskCommandMT.h"
#include "asb_uci/type/TaskCommandStatusMDT.h"
#include "asb_uci/type/TaskCommandStatusMT.h"
#include "asb_uci/type/TaskExecutionApprovalStatusMDT.h"
#include "asb_uci/type/TaskExecutionApprovalStatusMT.h"
#include "asb_uci/type/TaskID_Type.h"
#include "asb_uci/type/TaskMT.h"
#include "asb_uci/type/TaskPlanApprovalStatusMT.h"
#include "asb_uci/type/TaskPlanCommandID_Type.h"
#include "asb_uci/type/TaskPlanCommandMT.h"
#include "asb_uci/type/TaskPlanCommandStatusMT.h"
#include "asb_uci/type/TaskPlanExecutionStatusMT.h"
#include "asb_uci/type/TaskPlanID_Type.h"
#include "asb_uci/type/TaskPlanInputsType.h"
#include "asb_uci/type/TaskPlanMT.h"
#include "asb_uci/type/TaskPlanProcessDescriptionType.h"
#include "asb_uci/type/TaskPlanStatusMT.h"
#include "asb_uci/type/TaskPlanValidationCommandMDT.h"
#include "asb_uci/type/TaskPlanValidationCommandMT.h"
#include "asb_uci/type/TaskPlanValidationCommandStatusMDT.h"
#include "asb_uci/type/TaskPlanValidationCommandStatusMT.h"
#include "asb_uci/type/TaskPlanValidationID_Type.h"
#include "asb_uci/type/TaskPlanValidationInputsType.h"
#include "asb_uci/type/TaskPlanValidationMT.h"
#include "asb_uci/type/TaskPlanningResultType.h"
#include "asb_uci/type/TaskPlanningStatusMDT.h"
#include "asb_uci/type/TaskPlanningStatusMT.h"
#include "asb_uci/type/TaskStatusMDT.h"
#include "asb_uci/type/TaskStatusMT.h"
#include "asb_uci/type/TemperatureStatusType.h"
#include "asb_uci/type/ThreatAssessmentRequestType.h"
#include "asb_uci/type/TimeAndPolarDataType.h"
#include "asb_uci/type/TimeAndPolarRecordType.h"
#include "asb_uci/type/TimedZoneType.h"
#include "asb_uci/type/TrackOptionsID_Type.h"
#include "asb_uci/type/TrackingOpZoneFilterAreaType.h"
#include "asb_uci/type/TurretCommandMT.h"
#include "asb_uci/type/TurretCommandStatusMDT.h"
#include "asb_uci/type/TurretCommandStatusMT.h"
#include "asb_uci/type/TurretCommandType.h"
#include "asb_uci/type/TurretReportID_Type.h"
#include "asb_uci/type/TurretReportMT.h"
#include "asb_uci/type/TurretStatusMDT.h"
#include "asb_uci/type/TurretStatusMT.h"
#include "asb_uci/type/UMID_AudioID_Type.h"
#include "asb_uci/type/UMID_DataID_Type.h"
#include "asb_uci/type/UMID_SystemID_Type.h"
#include "asb_uci/type/UMID_VideoID_Type.h"
#include "asb_uci/type/UnallocatedReasonType.h"
#include "asb_uci/type/UnitID_Type.h"
#include "asb_uci/type/UnitVectorType.h"
#include "asb_uci/type/UnsignedIntegerMinMaxType.h"
#include "asb_uci/type/ValidationCommandBaseType.h"
#include "asb_uci/type/ValidationCommandStatusBaseType.h"
#include "asb_uci/type/ValveDataStatusType.h"
#include "asb_uci/type/VehicleConfigurationType.h"
#include "asb_uci/type/VehicleIdentificationType.h"
#include "asb_uci/type/Velocity2D_Type.h"
#include "asb_uci/type/Velocity2D_UncertaintyType.h"
#include "asb_uci/type/VersionedID_Type.h"
#include "asb_uci/type/VideoAugmentationParametersType.h"
#include "asb_uci/type/WeaponeeringLocationType.h"
#include "asb_uci/type/WeaponeeringStoreType.h"
#include "asb_uci/type/WeaponeeringTargetType.h"
#include "asb_uci/type/WeaponeeringType.h"
#include "asb_uci/type/WeatherAugmentationParametersType.h"
#include "asb_uci/type/WeatherDatasetID_Type.h"
#include "asb_uci/type/WeatherDatasetMDT.h"
#include "asb_uci/type/WeatherDatasetMT.h"
#include "asb_uci/type/WeatherMT.h"
#include "asb_uci/type/WeatherObservationMT.h"
#include "asb_uci/type/WeatherRadarActivityMT.h"
#include "asb_uci/type/WeatherRadarActivityType.h"
#include "asb_uci/type/WeatherRadarCapabilityCommandType.h"
#include "asb_uci/type/WeatherRadarCapabilityMDT.h"
#include "asb_uci/type/WeatherRadarCapabilityMT.h"
#include "asb_uci/type/WeatherRadarCapabilityStatusMDT.h"
#include "asb_uci/type/WeatherRadarCapabilityStatusMT.h"
#include "asb_uci/type/WeatherRadarCapabilityType.h"
#include "asb_uci/type/WeatherRadarCommandMT.h"
#include "asb_uci/type/WeatherRadarCommandStatusMDT.h"
#include "asb_uci/type/WeatherRadarCommandStatusMT.h"
#include "asb_uci/type/WeatherRadarObservationMT.h"
#include "asb_uci/type/WeatherRadarSettingsCommandMDT.h"
#include "asb_uci/type/WeatherRadarSettingsCommandMT.h"
#include "asb_uci/type/WeatherRadarSettingsCommandStatusMDT.h"
#include "asb_uci/type/WeatherRadarSettingsCommandStatusMT.h"
#include "asb_uci/type/WeatherReportGridDataType.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

uci::base::Accessor* DerivedTypesCreator20::create(const uci::base::accessorType::AccessorType type) {
  switch (type) {
    case uci::type::accessorType::tagAssociationMT:
      return boost::make_unique<asb_uci::type::TagAssociationMT>().release();
    case uci::type::accessorType::taskAchievabilityAssessmentPET:
      return boost::make_unique<asb_uci::type::TaskAchievabilityAssessmentPET>().release();
    case uci::type::accessorType::taskAchievabilityAssessmentRequestPET:
      return boost::make_unique<asb_uci::type::TaskAchievabilityAssessmentRequestPET>().release();
    case uci::type::accessorType::taskAllocationType:
      return boost::make_unique<asb_uci::type::TaskAllocationType>().release();
    case uci::type::accessorType::taskCancelCommandMDT:
      return boost::make_unique<asb_uci::type::TaskCancelCommandMDT>().release();
    case uci::type::accessorType::taskCancelCommandMT:
      return boost::make_unique<asb_uci::type::TaskCancelCommandMT>().release();
    case uci::type::accessorType::taskCancelCommandStatusMDT:
      return boost::make_unique<asb_uci::type::TaskCancelCommandStatusMDT>().release();
    case uci::type::accessorType::taskCancelCommandStatusMT:
      return boost::make_unique<asb_uci::type::TaskCancelCommandStatusMT>().release();
    case uci::type::accessorType::taskCapabilityCommandType:
      return boost::make_unique<asb_uci::type::TaskCapabilityCommandType>().release();
    case uci::type::accessorType::taskCommandMT:
      return boost::make_unique<asb_uci::type::TaskCommandMT>().release();
    case uci::type::accessorType::taskCommandStatusMDT:
      return boost::make_unique<asb_uci::type::TaskCommandStatusMDT>().release();
    case uci::type::accessorType::taskCommandStatusMT:
      return boost::make_unique<asb_uci::type::TaskCommandStatusMT>().release();
    case uci::type::accessorType::taskExecutionApprovalStatusMDT:
      return boost::make_unique<asb_uci::type::TaskExecutionApprovalStatusMDT>().release();
    case uci::type::accessorType::taskExecutionApprovalStatusMT:
      return boost::make_unique<asb_uci::type::TaskExecutionApprovalStatusMT>().release();
    case uci::type::accessorType::taskID_Type:
      return boost::make_unique<asb_uci::type::TaskID_Type>().release();
    case uci::type::accessorType::taskMT:
      return boost::make_unique<asb_uci::type::TaskMT>().release();
    case uci::type::accessorType::taskPlanApprovalStatusMT:
      return boost::make_unique<asb_uci::type::TaskPlanApprovalStatusMT>().release();
    case uci::type::accessorType::taskPlanCommandID_Type:
      return boost::make_unique<asb_uci::type::TaskPlanCommandID_Type>().release();
    case uci::type::accessorType::taskPlanCommandMT:
      return boost::make_unique<asb_uci::type::TaskPlanCommandMT>().release();
    case uci::type::accessorType::taskPlanCommandStatusMT:
      return boost::make_unique<asb_uci::type::TaskPlanCommandStatusMT>().release();
    case uci::type::accessorType::taskPlanExecutionStatusMT:
      return boost::make_unique<asb_uci::type::TaskPlanExecutionStatusMT>().release();
    case uci::type::accessorType::taskPlanID_Type:
      return boost::make_unique<asb_uci::type::TaskPlanID_Type>().release();
    case uci::type::accessorType::taskPlanInputsType:
      return boost::make_unique<asb_uci::type::TaskPlanInputsType>().release();
    case uci::type::accessorType::taskPlanMT:
      return boost::make_unique<asb_uci::type::TaskPlanMT>().release();
    case uci::type::accessorType::taskPlanningResultType:
      return boost::make_unique<asb_uci::type::TaskPlanningResultType>().release();
    case uci::type::accessorType::taskPlanningStatusMDT:
      return boost::make_unique<asb_uci::type::TaskPlanningStatusMDT>().release();
    case uci::type::accessorType::taskPlanningStatusMT:
      return boost::make_unique<asb_uci::type::TaskPlanningStatusMT>().release();
    case uci::type::accessorType::taskPlanProcessDescriptionType:
      return boost::make_unique<asb_uci::type::TaskPlanProcessDescriptionType>().release();
    case uci::type::accessorType::taskPlanStatusMT:
      return boost::make_unique<asb_uci::type::TaskPlanStatusMT>().release();
    case uci::type::accessorType::taskPlanValidationCommandMDT:
      return boost::make_unique<asb_uci::type::TaskPlanValidationCommandMDT>().release();
    case uci::type::accessorType::taskPlanValidationCommandMT:
      return boost::make_unique<asb_uci::type::TaskPlanValidationCommandMT>().release();
    case uci::type::accessorType::taskPlanValidationCommandStatusMDT:
      return boost::make_unique<asb_uci::type::TaskPlanValidationCommandStatusMDT>().release();
    case uci::type::accessorType::taskPlanValidationCommandStatusMT:
      return boost::make_unique<asb_uci::type::TaskPlanValidationCommandStatusMT>().release();
    case uci::type::accessorType::taskPlanValidationID_Type:
      return boost::make_unique<asb_uci::type::TaskPlanValidationID_Type>().release();
    case uci::type::accessorType::taskPlanValidationInputsType:
      return boost::make_unique<asb_uci::type::TaskPlanValidationInputsType>().release();
    case uci::type::accessorType::taskPlanValidationMT:
      return boost::make_unique<asb_uci::type::TaskPlanValidationMT>().release();
    case uci::type::accessorType::taskStatusMDT:
      return boost::make_unique<asb_uci::type::TaskStatusMDT>().release();
    case uci::type::accessorType::taskStatusMT:
      return boost::make_unique<asb_uci::type::TaskStatusMT>().release();
    case uci::type::accessorType::temperatureStatusType:
      return boost::make_unique<asb_uci::type::TemperatureStatusType>().release();
    case uci::type::accessorType::threatAssessmentRequestType:
      return boost::make_unique<asb_uci::type::ThreatAssessmentRequestType>().release();
    case uci::type::accessorType::timeAndPolarDataType:
      return boost::make_unique<asb_uci::type::TimeAndPolarDataType>().release();
    case uci::type::accessorType::timeAndPolarRecordType:
      return boost::make_unique<asb_uci::type::TimeAndPolarRecordType>().release();
    case uci::type::accessorType::timedZoneType:
      return boost::make_unique<asb_uci::type::TimedZoneType>().release();
    case uci::type::accessorType::tLE_BaseType:
      return boost::make_unique<asb_uci::type::TLE_BaseType>().release();
    case uci::type::accessorType::tLE_Type:
      return boost::make_unique<asb_uci::type::TLE_Type>().release();
    case uci::type::accessorType::tLE_WithParametersType:
      return boost::make_unique<asb_uci::type::TLE_WithParametersType>().release();
    case uci::type::accessorType::trackingOpZoneFilterAreaType:
      return boost::make_unique<asb_uci::type::TrackingOpZoneFilterAreaType>().release();
    case uci::type::accessorType::trackOptionsID_Type:
      return boost::make_unique<asb_uci::type::TrackOptionsID_Type>().release();
    case uci::type::accessorType::turretCommandMT:
      return boost::make_unique<asb_uci::type::TurretCommandMT>().release();
    case uci::type::accessorType::turretCommandStatusMDT:
      return boost::make_unique<asb_uci::type::TurretCommandStatusMDT>().release();
    case uci::type::accessorType::turretCommandStatusMT:
      return boost::make_unique<asb_uci::type::TurretCommandStatusMT>().release();
    case uci::type::accessorType::turretCommandType:
      return boost::make_unique<asb_uci::type::TurretCommandType>().release();
    case uci::type::accessorType::turretReportID_Type:
      return boost::make_unique<asb_uci::type::TurretReportID_Type>().release();
    case uci::type::accessorType::turretReportMT:
      return boost::make_unique<asb_uci::type::TurretReportMT>().release();
    case uci::type::accessorType::turretStatusMDT:
      return boost::make_unique<asb_uci::type::TurretStatusMDT>().release();
    case uci::type::accessorType::turretStatusMT:
      return boost::make_unique<asb_uci::type::TurretStatusMT>().release();
    case uci::type::accessorType::uMID_AudioID_Type:
      return boost::make_unique<asb_uci::type::UMID_AudioID_Type>().release();
    case uci::type::accessorType::uMID_DataID_Type:
      return boost::make_unique<asb_uci::type::UMID_DataID_Type>().release();
    case uci::type::accessorType::uMID_SystemID_Type:
      return boost::make_unique<asb_uci::type::UMID_SystemID_Type>().release();
    case uci::type::accessorType::uMID_VideoID_Type:
      return boost::make_unique<asb_uci::type::UMID_VideoID_Type>().release();
    case uci::type::accessorType::unallocatedReasonType:
      return boost::make_unique<asb_uci::type::UnallocatedReasonType>().release();
    case uci::type::accessorType::unitID_Type:
      return boost::make_unique<asb_uci::type::UnitID_Type>().release();
    case uci::type::accessorType::unitVectorType:
      return boost::make_unique<asb_uci::type::UnitVectorType>().release();
    case uci::type::accessorType::unsignedIntegerMinMaxType:
      return boost::make_unique<asb_uci::type::UnsignedIntegerMinMaxType>().release();
    case uci::type::accessorType::validationCommandBaseType:
      return boost::make_unique<asb_uci::type::ValidationCommandBaseType>().release();
    case uci::type::accessorType::validationCommandStatusBaseType:
      return boost::make_unique<asb_uci::type::ValidationCommandStatusBaseType>().release();
    case uci::type::accessorType::valveDataStatusType:
      return boost::make_unique<asb_uci::type::ValveDataStatusType>().release();
    case uci::type::accessorType::vehicleConfigurationType:
      return boost::make_unique<asb_uci::type::VehicleConfigurationType>().release();
    case uci::type::accessorType::vehicleIdentificationType:
      return boost::make_unique<asb_uci::type::VehicleIdentificationType>().release();
    case uci::type::accessorType::velocity2D_Type:
      return boost::make_unique<asb_uci::type::Velocity2D_Type>().release();
    case uci::type::accessorType::velocity2D_UncertaintyType:
      return boost::make_unique<asb_uci::type::Velocity2D_UncertaintyType>().release();
    case uci::type::accessorType::versionedID_Type:
      return boost::make_unique<asb_uci::type::VersionedID_Type>().release();
    case uci::type::accessorType::videoAugmentationParametersType:
      return boost::make_unique<asb_uci::type::VideoAugmentationParametersType>().release();
    case uci::type::accessorType::weaponeeringLocationType:
      return boost::make_unique<asb_uci::type::WeaponeeringLocationType>().release();
    case uci::type::accessorType::weaponeeringStoreType:
      return boost::make_unique<asb_uci::type::WeaponeeringStoreType>().release();
    case uci::type::accessorType::weaponeeringTargetType:
      return boost::make_unique<asb_uci::type::WeaponeeringTargetType>().release();
    case uci::type::accessorType::weaponeeringType:
      return boost::make_unique<asb_uci::type::WeaponeeringType>().release();
    case uci::type::accessorType::weatherAugmentationParametersType:
      return boost::make_unique<asb_uci::type::WeatherAugmentationParametersType>().release();
    case uci::type::accessorType::weatherDatasetID_Type:
      return boost::make_unique<asb_uci::type::WeatherDatasetID_Type>().release();
    case uci::type::accessorType::weatherDatasetMDT:
      return boost::make_unique<asb_uci::type::WeatherDatasetMDT>().release();
    case uci::type::accessorType::weatherDatasetMT:
      return boost::make_unique<asb_uci::type::WeatherDatasetMT>().release();
    case uci::type::accessorType::weatherMT:
      return boost::make_unique<asb_uci::type::WeatherMT>().release();
    case uci::type::accessorType::weatherObservationMT:
      return boost::make_unique<asb_uci::type::WeatherObservationMT>().release();
    case uci::type::accessorType::weatherRadarActivityMT:
      return boost::make_unique<asb_uci::type::WeatherRadarActivityMT>().release();
    case uci::type::accessorType::weatherRadarActivityType:
      return boost::make_unique<asb_uci::type::WeatherRadarActivityType>().release();
    case uci::type::accessorType::weatherRadarCapabilityCommandType:
      return boost::make_unique<asb_uci::type::WeatherRadarCapabilityCommandType>().release();
    case uci::type::accessorType::weatherRadarCapabilityMDT:
      return boost::make_unique<asb_uci::type::WeatherRadarCapabilityMDT>().release();
    case uci::type::accessorType::weatherRadarCapabilityMT:
      return boost::make_unique<asb_uci::type::WeatherRadarCapabilityMT>().release();
    case uci::type::accessorType::weatherRadarCapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::WeatherRadarCapabilityStatusMDT>().release();
    case uci::type::accessorType::weatherRadarCapabilityStatusMT:
      return boost::make_unique<asb_uci::type::WeatherRadarCapabilityStatusMT>().release();
    case uci::type::accessorType::weatherRadarCapabilityType:
      return boost::make_unique<asb_uci::type::WeatherRadarCapabilityType>().release();
    case uci::type::accessorType::weatherRadarCommandMT:
      return boost::make_unique<asb_uci::type::WeatherRadarCommandMT>().release();
    case uci::type::accessorType::weatherRadarCommandStatusMDT:
      return boost::make_unique<asb_uci::type::WeatherRadarCommandStatusMDT>().release();
    case uci::type::accessorType::weatherRadarCommandStatusMT:
      return boost::make_unique<asb_uci::type::WeatherRadarCommandStatusMT>().release();
    case uci::type::accessorType::weatherRadarObservationMT:
      return boost::make_unique<asb_uci::type::WeatherRadarObservationMT>().release();
    case uci::type::accessorType::weatherRadarSettingsCommandMDT:
      return boost::make_unique<asb_uci::type::WeatherRadarSettingsCommandMDT>().release();
    case uci::type::accessorType::weatherRadarSettingsCommandMT:
      return boost::make_unique<asb_uci::type::WeatherRadarSettingsCommandMT>().release();
    case uci::type::accessorType::weatherRadarSettingsCommandStatusMDT:
      return boost::make_unique<asb_uci::type::WeatherRadarSettingsCommandStatusMDT>().release();
    case uci::type::accessorType::weatherRadarSettingsCommandStatusMT:
      return boost::make_unique<asb_uci::type::WeatherRadarSettingsCommandStatusMT>().release();
    case uci::type::accessorType::weatherReportGridDataType:
      return boost::make_unique<asb_uci::type::WeatherReportGridDataType>().release();
    default:
      return nullptr;
  }
}

} // namespace util

} // namespace asb_uci

