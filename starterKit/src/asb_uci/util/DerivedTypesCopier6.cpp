/** @file DerivedTypesCopier6.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCopier6.h"

#include "asb_uci/type/DLZ_ID_Type.h"
#include "asb_uci/type/DLZ_MT.h"
#include "asb_uci/type/DLZ_RequestMDT.h"
#include "asb_uci/type/DLZ_RequestMT.h"
#include "asb_uci/type/DLZ_RequestStatusMDT.h"
#include "asb_uci/type/DLZ_RequestStatusMT.h"
#include "asb_uci/type/DMPI_AchievabilityAssessmentRequestType.h"
#include "asb_uci/type/DMPI_AchievabilityAssessmentType.h"
#include "asb_uci/type/DMPI_CancelCommandMDT.h"
#include "asb_uci/type/DMPI_CancelCommandMT.h"
#include "asb_uci/type/DMPI_CancelCommandStatusMDT.h"
#include "asb_uci/type/DMPI_CancelCommandStatusMT.h"
#include "asb_uci/type/DMPI_DesignationID_Type.h"
#include "asb_uci/type/DMPI_DesignationMDT.h"
#include "asb_uci/type/DMPI_DesignationMT.h"
#include "asb_uci/type/DMPI_DesignationRequestMDT.h"
#include "asb_uci/type/DMPI_DesignationRequestMT.h"
#include "asb_uci/type/DMPI_DesignationRequestStatusMDT.h"
#include "asb_uci/type/DMPI_DesignationRequestStatusMT.h"
#include "asb_uci/type/DMPI_ID_Type.h"
#include "asb_uci/type/DMPI_MDT.h"
#include "asb_uci/type/DMPI_MT.h"
#include "asb_uci/type/DMPI_PatternID_Type.h"
#include "asb_uci/type/DMPI_PatternMDT.h"
#include "asb_uci/type/DMPI_PatternMT.h"
#include "asb_uci/type/DMPI_PatternType.h"
#include "asb_uci/type/DMPI_RadialPatternType.h"
#include "asb_uci/type/DMPI_StatusMT.h"
#include "asb_uci/type/DMPI_XbyY_PatternType.h"
#include "asb_uci/type/DVR_ProcessingParametersType.h"
#include "asb_uci/type/DataPlanOverrideRequestStatusMDT.h"
#include "asb_uci/type/DataPlanOverrideRequestStatusMT.h"
#include "asb_uci/type/DataPlanOverrideRequestType.h"
#include "asb_uci/type/DataRateDataType.h"
#include "asb_uci/type/DataRecordBaseType.h"
#include "asb_uci/type/DataRecordInstanceID_Type.h"
#include "asb_uci/type/DataRecordListBaseType.h"
#include "asb_uci/type/DataRecordListID_Type.h"
#include "asb_uci/type/DataRecordListManagementRequestMDT.h"
#include "asb_uci/type/DataRecordListManagementRequestMT.h"
#include "asb_uci/type/DataRecordListManagementRequestStatusMDT.h"
#include "asb_uci/type/DataRecordListManagementRequestStatusMT.h"
#include "asb_uci/type/DataRecordManagementRequestMDT.h"
#include "asb_uci/type/DataRecordManagementRequestMT.h"
#include "asb_uci/type/DataRecordManagementRequestStatusMDT.h"
#include "asb_uci/type/DataRecordManagementRequestStatusMT.h"
#include "asb_uci/type/DataStorageUtilizationRequestMDT.h"
#include "asb_uci/type/DataStorageUtilizationRequestMT.h"
#include "asb_uci/type/DataStorageUtilizationRequestStatusMDT.h"
#include "asb_uci/type/DataStorageUtilizationRequestStatusMT.h"
#include "asb_uci/type/DataUpdateRequestMDT.h"
#include "asb_uci/type/DataUpdateRequestMT.h"
#include "asb_uci/type/DataUpdateRequestStatusMDT.h"
#include "asb_uci/type/DataUpdateRequestStatusMT.h"
#include "asb_uci/type/DeploymentDetectionType.h"
#include "asb_uci/type/DesignationID_Type.h"
#include "asb_uci/type/DesignationMT.h"
#include "asb_uci/type/DesignationRequestMDT.h"
#include "asb_uci/type/DesignationRequestMT.h"
#include "asb_uci/type/DesignationRequestStatusMDT.h"
#include "asb_uci/type/DesignationRequestStatusMT.h"
#include "asb_uci/type/DiscreteDataLinkIdentifierType.h"
#include "asb_uci/type/DiscreteStatusMT.h"
#include "asb_uci/type/DisseminationConstrainedSubplanType.h"
#include "asb_uci/type/DisseminationSubplanType.h"
#include "asb_uci/type/DoorCommandMT.h"
#include "asb_uci/type/DoorCommandStatusMDT.h"
#include "asb_uci/type/DoorCommandStatusMT.h"
#include "asb_uci/type/DoorCommandType.h"
#include "asb_uci/type/DoorStatusMT.h"
#include "asb_uci/type/DoorStatusType.h"
#include "asb_uci/type/DwellID_Type.h"
#include "asb_uci/type/EA_ActivityCommandType.h"
#include "asb_uci/type/EA_ActivityMT.h"
#include "asb_uci/type/EA_ActivityType.h"
#include "asb_uci/type/EA_CapabilityCommandType.h"
#include "asb_uci/type/EA_CapabilityMDT.h"
#include "asb_uci/type/EA_CapabilityMT.h"
#include "asb_uci/type/EA_CapabilityStatusMDT.h"
#include "asb_uci/type/EA_CapabilityStatusMT.h"
#include "asb_uci/type/EA_CapabilityType.h"
#include "asb_uci/type/EA_CommandMT.h"
#include "asb_uci/type/EA_CommandStatusMDT.h"
#include "asb_uci/type/EA_CommandStatusMT.h"
#include "asb_uci/type/EA_ConsentRequestMT.h"
#include "asb_uci/type/EA_ConsentRequestStatusMDT.h"
#include "asb_uci/type/EA_ConsentRequestStatusMT.h"
#include "asb_uci/type/EA_ConsentRequestType.h"
#include "asb_uci/type/EA_SettingsCommandMDT.h"
#include "asb_uci/type/EA_SettingsCommandMT.h"
#include "asb_uci/type/EA_SettingsCommandStatusMDT.h"
#include "asb_uci/type/EA_SettingsCommandStatusMT.h"
#include "asb_uci/type/EA_TechniqueIdentifierType.h"
#include "asb_uci/type/ECEF_UnitVectorType.h"
#include "asb_uci/type/EEI_ID_Type.h"
#include "asb_uci/type/EEI_MDT.h"
#include "asb_uci/type/EEI_MT.h"
#include "asb_uci/type/EarthOrientationParametersID_Type.h"
#include "asb_uci/type/EarthOrientationParametersMT.h"
#include "asb_uci/type/EffectActivityMT.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"
#include "uci/type/DLZ_ID_Type.h"
#include "uci/type/DLZ_MT.h"
#include "uci/type/DLZ_RequestMDT.h"
#include "uci/type/DLZ_RequestMT.h"
#include "uci/type/DLZ_RequestStatusMDT.h"
#include "uci/type/DLZ_RequestStatusMT.h"
#include "uci/type/DMPI_AchievabilityAssessmentRequestType.h"
#include "uci/type/DMPI_AchievabilityAssessmentType.h"
#include "uci/type/DMPI_CancelCommandMDT.h"
#include "uci/type/DMPI_CancelCommandMT.h"
#include "uci/type/DMPI_CancelCommandStatusMDT.h"
#include "uci/type/DMPI_CancelCommandStatusMT.h"
#include "uci/type/DMPI_DesignationID_Type.h"
#include "uci/type/DMPI_DesignationMDT.h"
#include "uci/type/DMPI_DesignationMT.h"
#include "uci/type/DMPI_DesignationRequestMDT.h"
#include "uci/type/DMPI_DesignationRequestMT.h"
#include "uci/type/DMPI_DesignationRequestStatusMDT.h"
#include "uci/type/DMPI_DesignationRequestStatusMT.h"
#include "uci/type/DMPI_ID_Type.h"
#include "uci/type/DMPI_MDT.h"
#include "uci/type/DMPI_MT.h"
#include "uci/type/DMPI_PatternID_Type.h"
#include "uci/type/DMPI_PatternMDT.h"
#include "uci/type/DMPI_PatternMT.h"
#include "uci/type/DMPI_PatternType.h"
#include "uci/type/DMPI_RadialPatternType.h"
#include "uci/type/DMPI_StatusMT.h"
#include "uci/type/DMPI_XbyY_PatternType.h"
#include "uci/type/DVR_ProcessingParametersType.h"
#include "uci/type/DataPlanOverrideRequestStatusMDT.h"
#include "uci/type/DataPlanOverrideRequestStatusMT.h"
#include "uci/type/DataPlanOverrideRequestType.h"
#include "uci/type/DataRateDataType.h"
#include "uci/type/DataRecordBaseType.h"
#include "uci/type/DataRecordInstanceID_Type.h"
#include "uci/type/DataRecordListBaseType.h"
#include "uci/type/DataRecordListID_Type.h"
#include "uci/type/DataRecordListManagementRequestMDT.h"
#include "uci/type/DataRecordListManagementRequestMT.h"
#include "uci/type/DataRecordListManagementRequestStatusMDT.h"
#include "uci/type/DataRecordListManagementRequestStatusMT.h"
#include "uci/type/DataRecordManagementRequestMDT.h"
#include "uci/type/DataRecordManagementRequestMT.h"
#include "uci/type/DataRecordManagementRequestStatusMDT.h"
#include "uci/type/DataRecordManagementRequestStatusMT.h"
#include "uci/type/DataStorageUtilizationRequestMDT.h"
#include "uci/type/DataStorageUtilizationRequestMT.h"
#include "uci/type/DataStorageUtilizationRequestStatusMDT.h"
#include "uci/type/DataStorageUtilizationRequestStatusMT.h"
#include "uci/type/DataUpdateRequestMDT.h"
#include "uci/type/DataUpdateRequestMT.h"
#include "uci/type/DataUpdateRequestStatusMDT.h"
#include "uci/type/DataUpdateRequestStatusMT.h"
#include "uci/type/DeploymentDetectionType.h"
#include "uci/type/DesignationID_Type.h"
#include "uci/type/DesignationMT.h"
#include "uci/type/DesignationRequestMDT.h"
#include "uci/type/DesignationRequestMT.h"
#include "uci/type/DesignationRequestStatusMDT.h"
#include "uci/type/DesignationRequestStatusMT.h"
#include "uci/type/DiscreteDataLinkIdentifierType.h"
#include "uci/type/DiscreteStatusMT.h"
#include "uci/type/DisseminationConstrainedSubplanType.h"
#include "uci/type/DisseminationSubplanType.h"
#include "uci/type/DoorCommandMT.h"
#include "uci/type/DoorCommandStatusMDT.h"
#include "uci/type/DoorCommandStatusMT.h"
#include "uci/type/DoorCommandType.h"
#include "uci/type/DoorStatusMT.h"
#include "uci/type/DoorStatusType.h"
#include "uci/type/DwellID_Type.h"
#include "uci/type/EA_ActivityCommandType.h"
#include "uci/type/EA_ActivityMT.h"
#include "uci/type/EA_ActivityType.h"
#include "uci/type/EA_CapabilityCommandType.h"
#include "uci/type/EA_CapabilityMDT.h"
#include "uci/type/EA_CapabilityMT.h"
#include "uci/type/EA_CapabilityStatusMDT.h"
#include "uci/type/EA_CapabilityStatusMT.h"
#include "uci/type/EA_CapabilityType.h"
#include "uci/type/EA_CommandMT.h"
#include "uci/type/EA_CommandStatusMDT.h"
#include "uci/type/EA_CommandStatusMT.h"
#include "uci/type/EA_ConsentRequestMT.h"
#include "uci/type/EA_ConsentRequestStatusMDT.h"
#include "uci/type/EA_ConsentRequestStatusMT.h"
#include "uci/type/EA_ConsentRequestType.h"
#include "uci/type/EA_SettingsCommandMDT.h"
#include "uci/type/EA_SettingsCommandMT.h"
#include "uci/type/EA_SettingsCommandStatusMDT.h"
#include "uci/type/EA_SettingsCommandStatusMT.h"
#include "uci/type/EA_TechniqueIdentifierType.h"
#include "uci/type/ECEF_UnitVectorType.h"
#include "uci/type/EEI_ID_Type.h"
#include "uci/type/EEI_MDT.h"
#include "uci/type/EEI_MT.h"
#include "uci/type/EarthOrientationParametersID_Type.h"
#include "uci/type/EarthOrientationParametersMT.h"
#include "uci/type/EffectActivityMT.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

bool DerivedTypesCopier6::copy(const uci::base::Accessor& source, uci::base::Accessor& destination) {
  switch (source.getAccessorType()) {
    case uci::type::accessorType::dataPlanOverrideRequestStatusMDT:
      dynamic_cast<asb_uci::type::DataPlanOverrideRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataPlanOverrideRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataPlanOverrideRequestStatusMT:
      dynamic_cast<asb_uci::type::DataPlanOverrideRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataPlanOverrideRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataPlanOverrideRequestType:
      dynamic_cast<asb_uci::type::DataPlanOverrideRequestType&>(destination).copyImpl(dynamic_cast<const uci::type::DataPlanOverrideRequestType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRateDataType:
      dynamic_cast<asb_uci::type::DataRateDataType&>(destination).copyImpl(dynamic_cast<const uci::type::DataRateDataType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRecordBaseType:
      dynamic_cast<asb_uci::type::DataRecordBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::DataRecordBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRecordInstanceID_Type:
      dynamic_cast<asb_uci::type::DataRecordInstanceID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DataRecordInstanceID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRecordListBaseType:
      dynamic_cast<asb_uci::type::DataRecordListBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::DataRecordListBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRecordListID_Type:
      dynamic_cast<asb_uci::type::DataRecordListID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DataRecordListID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRecordListManagementRequestMDT:
      dynamic_cast<asb_uci::type::DataRecordListManagementRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataRecordListManagementRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRecordListManagementRequestMT:
      dynamic_cast<asb_uci::type::DataRecordListManagementRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataRecordListManagementRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRecordListManagementRequestStatusMDT:
      dynamic_cast<asb_uci::type::DataRecordListManagementRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataRecordListManagementRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRecordListManagementRequestStatusMT:
      dynamic_cast<asb_uci::type::DataRecordListManagementRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataRecordListManagementRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRecordManagementRequestMDT:
      dynamic_cast<asb_uci::type::DataRecordManagementRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataRecordManagementRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRecordManagementRequestMT:
      dynamic_cast<asb_uci::type::DataRecordManagementRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataRecordManagementRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRecordManagementRequestStatusMDT:
      dynamic_cast<asb_uci::type::DataRecordManagementRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataRecordManagementRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataRecordManagementRequestStatusMT:
      dynamic_cast<asb_uci::type::DataRecordManagementRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataRecordManagementRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataStorageUtilizationRequestMDT:
      dynamic_cast<asb_uci::type::DataStorageUtilizationRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataStorageUtilizationRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataStorageUtilizationRequestMT:
      dynamic_cast<asb_uci::type::DataStorageUtilizationRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataStorageUtilizationRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataStorageUtilizationRequestStatusMDT:
      dynamic_cast<asb_uci::type::DataStorageUtilizationRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataStorageUtilizationRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataStorageUtilizationRequestStatusMT:
      dynamic_cast<asb_uci::type::DataStorageUtilizationRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataStorageUtilizationRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataUpdateRequestMDT:
      dynamic_cast<asb_uci::type::DataUpdateRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataUpdateRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataUpdateRequestMT:
      dynamic_cast<asb_uci::type::DataUpdateRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataUpdateRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataUpdateRequestStatusMDT:
      dynamic_cast<asb_uci::type::DataUpdateRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataUpdateRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataUpdateRequestStatusMT:
      dynamic_cast<asb_uci::type::DataUpdateRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataUpdateRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::deploymentDetectionType:
      dynamic_cast<asb_uci::type::DeploymentDetectionType&>(destination).copyImpl(dynamic_cast<const uci::type::DeploymentDetectionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::designationID_Type:
      dynamic_cast<asb_uci::type::DesignationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DesignationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::designationMT:
      dynamic_cast<asb_uci::type::DesignationMT&>(destination).copyImpl(dynamic_cast<const uci::type::DesignationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::designationRequestMDT:
      dynamic_cast<asb_uci::type::DesignationRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DesignationRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::designationRequestMT:
      dynamic_cast<asb_uci::type::DesignationRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::DesignationRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::designationRequestStatusMDT:
      dynamic_cast<asb_uci::type::DesignationRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DesignationRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::designationRequestStatusMT:
      dynamic_cast<asb_uci::type::DesignationRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DesignationRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::discreteDataLinkIdentifierType:
      dynamic_cast<asb_uci::type::DiscreteDataLinkIdentifierType&>(destination).copyImpl(dynamic_cast<const uci::type::DiscreteDataLinkIdentifierType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::discreteStatusMT:
      dynamic_cast<asb_uci::type::DiscreteStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DiscreteStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::disseminationConstrainedSubplanType:
      dynamic_cast<asb_uci::type::DisseminationConstrainedSubplanType&>(destination).copyImpl(dynamic_cast<const uci::type::DisseminationConstrainedSubplanType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::disseminationSubplanType:
      dynamic_cast<asb_uci::type::DisseminationSubplanType&>(destination).copyImpl(dynamic_cast<const uci::type::DisseminationSubplanType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dLZ_ID_Type:
      dynamic_cast<asb_uci::type::DLZ_ID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DLZ_ID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dLZ_MT:
      dynamic_cast<asb_uci::type::DLZ_MT&>(destination).copyImpl(dynamic_cast<const uci::type::DLZ_MT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dLZ_RequestMDT:
      dynamic_cast<asb_uci::type::DLZ_RequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DLZ_RequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dLZ_RequestMT:
      dynamic_cast<asb_uci::type::DLZ_RequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::DLZ_RequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dLZ_RequestStatusMDT:
      dynamic_cast<asb_uci::type::DLZ_RequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DLZ_RequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dLZ_RequestStatusMT:
      dynamic_cast<asb_uci::type::DLZ_RequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DLZ_RequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_AchievabilityAssessmentRequestType:
      dynamic_cast<asb_uci::type::DMPI_AchievabilityAssessmentRequestType&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_AchievabilityAssessmentRequestType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_AchievabilityAssessmentType:
      dynamic_cast<asb_uci::type::DMPI_AchievabilityAssessmentType&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_AchievabilityAssessmentType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_CancelCommandMDT:
      dynamic_cast<asb_uci::type::DMPI_CancelCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_CancelCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_CancelCommandMT:
      dynamic_cast<asb_uci::type::DMPI_CancelCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_CancelCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_CancelCommandStatusMDT:
      dynamic_cast<asb_uci::type::DMPI_CancelCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_CancelCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_CancelCommandStatusMT:
      dynamic_cast<asb_uci::type::DMPI_CancelCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_CancelCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_DesignationID_Type:
      dynamic_cast<asb_uci::type::DMPI_DesignationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_DesignationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_DesignationMDT:
      dynamic_cast<asb_uci::type::DMPI_DesignationMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_DesignationMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_DesignationMT:
      dynamic_cast<asb_uci::type::DMPI_DesignationMT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_DesignationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_DesignationRequestMDT:
      dynamic_cast<asb_uci::type::DMPI_DesignationRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_DesignationRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_DesignationRequestMT:
      dynamic_cast<asb_uci::type::DMPI_DesignationRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_DesignationRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_DesignationRequestStatusMDT:
      dynamic_cast<asb_uci::type::DMPI_DesignationRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_DesignationRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_DesignationRequestStatusMT:
      dynamic_cast<asb_uci::type::DMPI_DesignationRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_DesignationRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_ID_Type:
      dynamic_cast<asb_uci::type::DMPI_ID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_ID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_MDT:
      dynamic_cast<asb_uci::type::DMPI_MDT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_MDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_MT:
      dynamic_cast<asb_uci::type::DMPI_MT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_MT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_PatternID_Type:
      dynamic_cast<asb_uci::type::DMPI_PatternID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_PatternID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_PatternMDT:
      dynamic_cast<asb_uci::type::DMPI_PatternMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_PatternMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_PatternMT:
      dynamic_cast<asb_uci::type::DMPI_PatternMT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_PatternMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_PatternType:
      dynamic_cast<asb_uci::type::DMPI_PatternType&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_PatternType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_RadialPatternType:
      dynamic_cast<asb_uci::type::DMPI_RadialPatternType&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_RadialPatternType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_StatusMT:
      dynamic_cast<asb_uci::type::DMPI_StatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_StatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dMPI_XbyY_PatternType:
      dynamic_cast<asb_uci::type::DMPI_XbyY_PatternType&>(destination).copyImpl(dynamic_cast<const uci::type::DMPI_XbyY_PatternType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::doorCommandMT:
      dynamic_cast<asb_uci::type::DoorCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::DoorCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::doorCommandStatusMDT:
      dynamic_cast<asb_uci::type::DoorCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DoorCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::doorCommandStatusMT:
      dynamic_cast<asb_uci::type::DoorCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DoorCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::doorCommandType:
      dynamic_cast<asb_uci::type::DoorCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::DoorCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::doorStatusMT:
      dynamic_cast<asb_uci::type::DoorStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DoorStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::doorStatusType:
      dynamic_cast<asb_uci::type::DoorStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::DoorStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dVR_ProcessingParametersType:
      dynamic_cast<asb_uci::type::DVR_ProcessingParametersType&>(destination).copyImpl(dynamic_cast<const uci::type::DVR_ProcessingParametersType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dwellID_Type:
      dynamic_cast<asb_uci::type::DwellID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DwellID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_ActivityCommandType:
      dynamic_cast<asb_uci::type::EA_ActivityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::EA_ActivityCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_ActivityMT:
      dynamic_cast<asb_uci::type::EA_ActivityMT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_ActivityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_ActivityType:
      dynamic_cast<asb_uci::type::EA_ActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::EA_ActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_CapabilityCommandType:
      dynamic_cast<asb_uci::type::EA_CapabilityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::EA_CapabilityCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_CapabilityMDT:
      dynamic_cast<asb_uci::type::EA_CapabilityMDT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_CapabilityMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_CapabilityMT:
      dynamic_cast<asb_uci::type::EA_CapabilityMT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_CapabilityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_CapabilityStatusMDT:
      dynamic_cast<asb_uci::type::EA_CapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_CapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_CapabilityStatusMT:
      dynamic_cast<asb_uci::type::EA_CapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_CapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_CapabilityType:
      dynamic_cast<asb_uci::type::EA_CapabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::EA_CapabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_CommandMT:
      dynamic_cast<asb_uci::type::EA_CommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_CommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_CommandStatusMDT:
      dynamic_cast<asb_uci::type::EA_CommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_CommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_CommandStatusMT:
      dynamic_cast<asb_uci::type::EA_CommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_CommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_ConsentRequestMT:
      dynamic_cast<asb_uci::type::EA_ConsentRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_ConsentRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_ConsentRequestStatusMDT:
      dynamic_cast<asb_uci::type::EA_ConsentRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_ConsentRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_ConsentRequestStatusMT:
      dynamic_cast<asb_uci::type::EA_ConsentRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_ConsentRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_ConsentRequestType:
      dynamic_cast<asb_uci::type::EA_ConsentRequestType&>(destination).copyImpl(dynamic_cast<const uci::type::EA_ConsentRequestType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_SettingsCommandMDT:
      dynamic_cast<asb_uci::type::EA_SettingsCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_SettingsCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_SettingsCommandMT:
      dynamic_cast<asb_uci::type::EA_SettingsCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_SettingsCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_SettingsCommandStatusMDT:
      dynamic_cast<asb_uci::type::EA_SettingsCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_SettingsCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_SettingsCommandStatusMT:
      dynamic_cast<asb_uci::type::EA_SettingsCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::EA_SettingsCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eA_TechniqueIdentifierType:
      dynamic_cast<asb_uci::type::EA_TechniqueIdentifierType&>(destination).copyImpl(dynamic_cast<const uci::type::EA_TechniqueIdentifierType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::earthOrientationParametersID_Type:
      dynamic_cast<asb_uci::type::EarthOrientationParametersID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::EarthOrientationParametersID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::earthOrientationParametersMT:
      dynamic_cast<asb_uci::type::EarthOrientationParametersMT&>(destination).copyImpl(dynamic_cast<const uci::type::EarthOrientationParametersMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eCEF_UnitVectorType:
      dynamic_cast<asb_uci::type::ECEF_UnitVectorType&>(destination).copyImpl(dynamic_cast<const uci::type::ECEF_UnitVectorType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eEI_ID_Type:
      dynamic_cast<asb_uci::type::EEI_ID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::EEI_ID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eEI_MDT:
      dynamic_cast<asb_uci::type::EEI_MDT&>(destination).copyImpl(dynamic_cast<const uci::type::EEI_MDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eEI_MT:
      dynamic_cast<asb_uci::type::EEI_MT&>(destination).copyImpl(dynamic_cast<const uci::type::EEI_MT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::effectActivityMT:
      dynamic_cast<asb_uci::type::EffectActivityMT&>(destination).copyImpl(dynamic_cast<const uci::type::EffectActivityMT&>(source), false);
      return true;
      break;
    default:
      return false;
  }
}

} // namespace util

} // namespace asb_uci

