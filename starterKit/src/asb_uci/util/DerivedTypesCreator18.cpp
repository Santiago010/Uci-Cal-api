/** @file DerivedTypesCreator18.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCreator18.h"

#include <boost/smart_ptr/make_unique.hpp>

#include "asb_uci/type/STANAG_4607_PackingPlanPET.h"
#include "asb_uci/type/STANAG_4607_PackingPlanRevA_Type.h"
#include "asb_uci/type/STANAG_4607_PackingPlanType.h"
#include "asb_uci/type/SpecialCodeDataLinkIdentifierType.h"
#include "asb_uci/type/SpecificBlueSeparationType.h"
#include "asb_uci/type/SpecificEmitterIdentityConfidenceType.h"
#include "asb_uci/type/SpecificEmitterIdentityType.h"
#include "asb_uci/type/SpecificIdentityConfidenceType.h"
#include "asb_uci/type/SpecificIdentityType.h"
#include "asb_uci/type/SpecificRedSeparationType.h"
#include "asb_uci/type/SpecificVehicleIdentityConfidenceType.h"
#include "asb_uci/type/SpectralDensityReportID_Type.h"
#include "asb_uci/type/SpectralDensityReportMT.h"
#include "asb_uci/type/StandardIdentityConfidenceType.h"
#include "asb_uci/type/StandardIdentityType.h"
#include "asb_uci/type/StateCovarianceNED_Type.h"
#include "asb_uci/type/StoreCarriageCapabilityStatusBaseType.h"
#include "asb_uci/type/StoreCarriageCapabilityStatusMT.h"
#include "asb_uci/type/StoreCarriageCapabilityStatusType.h"
#include "asb_uci/type/StoreCarriageStatusType.h"
#include "asb_uci/type/StoreInformationBaseType.h"
#include "asb_uci/type/StoreInformationType.h"
#include "asb_uci/type/StoreLoadoutConfigurationID_Type.h"
#include "asb_uci/type/StoreLoadoutConfigurationMT.h"
#include "asb_uci/type/StoreLoadoutItemPET.h"
#include "asb_uci/type/StoreLoadoutItemType.h"
#include "asb_uci/type/StoreManagementCommandMT.h"
#include "asb_uci/type/StoreManagementCommandStatusMDT.h"
#include "asb_uci/type/StoreManagementCommandStatusMT.h"
#include "asb_uci/type/StoreManagementCommandType.h"
#include "asb_uci/type/StoreManagementReportID_Type.h"
#include "asb_uci/type/StoreManagementReportMT.h"
#include "asb_uci/type/StoreManagementStatusMDT.h"
#include "asb_uci/type/StoreManagementStatusMT.h"
#include "asb_uci/type/StoreStatusBaseType.h"
#include "asb_uci/type/StoreStatusType.h"
#include "asb_uci/type/StoreType.h"
#include "asb_uci/type/StrikeActivityCommandType.h"
#include "asb_uci/type/StrikeActivityMT.h"
#include "asb_uci/type/StrikeActivityType.h"
#include "asb_uci/type/StrikeCapabilityCommandType.h"
#include "asb_uci/type/StrikeCapabilityMDT.h"
#include "asb_uci/type/StrikeCapabilityMT.h"
#include "asb_uci/type/StrikeCapabilityStatusMDT.h"
#include "asb_uci/type/StrikeCapabilityStatusMT.h"
#include "asb_uci/type/StrikeCapabilityStatusType.h"
#include "asb_uci/type/StrikeCapabilityType.h"
#include "asb_uci/type/StrikeCommandMT.h"
#include "asb_uci/type/StrikeCommandStatusMDT.h"
#include "asb_uci/type/StrikeCommandStatusMT.h"
#include "asb_uci/type/StrikeConsentRequestMT.h"
#include "asb_uci/type/StrikeConsentRequestStatusMDT.h"
#include "asb_uci/type/StrikeConsentRequestStatusMT.h"
#include "asb_uci/type/StrikeConsentRequestType.h"
#include "asb_uci/type/StrikeSettingsCommandMDT.h"
#include "asb_uci/type/StrikeSettingsCommandMT.h"
#include "asb_uci/type/StrikeSettingsCommandStatusMDT.h"
#include "asb_uci/type/StrikeSettingsCommandStatusMT.h"
#include "asb_uci/type/StrikeTaskAchievabilityAssessmentRequestType.h"
#include "asb_uci/type/StrikeTaskAchievabilityAssessmentType.h"
#include "asb_uci/type/StrikeTaskWeaponType.h"
#include "asb_uci/type/SubCapabilityID_Type.h"
#include "asb_uci/type/SubsystemBIT_CommandMDT.h"
#include "asb_uci/type/SubsystemBIT_CommandMT.h"
#include "asb_uci/type/SubsystemBIT_CommandStatusMDT.h"
#include "asb_uci/type/SubsystemBIT_CommandStatusMT.h"
#include "asb_uci/type/SubsystemBIT_ConfigurationID_Type.h"
#include "asb_uci/type/SubsystemBIT_ConfigurationMT.h"
#include "asb_uci/type/SubsystemBIT_StatusMT.h"
#include "asb_uci/type/SubsystemCalibrationCommandMDT.h"
#include "asb_uci/type/SubsystemCalibrationCommandMT.h"
#include "asb_uci/type/SubsystemCalibrationCommandStatusMDT.h"
#include "asb_uci/type/SubsystemCalibrationCommandStatusMT.h"
#include "asb_uci/type/SubsystemCalibrationConfigurationID_Type.h"
#include "asb_uci/type/SubsystemCalibrationConfigurationMT.h"
#include "asb_uci/type/SubsystemCalibrationStatusMT.h"
#include "asb_uci/type/SubsystemCommandStatusBaseType.h"
#include "asb_uci/type/SubsystemConfigurationDataRequestMDT.h"
#include "asb_uci/type/SubsystemConfigurationDataRequestMT.h"
#include "asb_uci/type/SubsystemConfigurationDataRequestStatusMDT.h"
#include "asb_uci/type/SubsystemConfigurationDataRequestStatusMT.h"
#include "asb_uci/type/SubsystemConfigurationID_Type.h"
#include "asb_uci/type/SubsystemConfigurationMT.h"
#include "asb_uci/type/SubsystemEraseCommandMDT.h"
#include "asb_uci/type/SubsystemEraseCommandMT.h"
#include "asb_uci/type/SubsystemEraseCommandStatusMDT.h"
#include "asb_uci/type/SubsystemEraseCommandStatusMT.h"
#include "asb_uci/type/SubsystemExtendedStatusPET.h"
#include "asb_uci/type/SubsystemID_Type.h"
#include "asb_uci/type/SubsystemMaintenanceCommandMDT.h"
#include "asb_uci/type/SubsystemMaintenanceCommandMT.h"
#include "asb_uci/type/SubsystemMaintenanceCommandStatusMDT.h"
#include "asb_uci/type/SubsystemMaintenanceCommandStatusMT.h"
#include "asb_uci/type/SubsystemMaintenanceConfigurationID_Type.h"
#include "asb_uci/type/SubsystemMaintenanceConfigurationMT.h"
#include "asb_uci/type/SubsystemMaintenanceID_Type.h"
#include "asb_uci/type/SubsystemMaintenanceStatusMT.h"
#include "asb_uci/type/SubsystemMaintenanceTestCommandPET.h"
#include "asb_uci/type/SubsystemMaintenanceTestCommandType.h"
#include "asb_uci/type/SubsystemMaintenanceTestPET.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

uci::base::Accessor* DerivedTypesCreator18::create(const uci::base::accessorType::AccessorType type) {
  switch (type) {
    case uci::type::accessorType::specialCodeDataLinkIdentifierType:
      return boost::make_unique<asb_uci::type::SpecialCodeDataLinkIdentifierType>().release();
    case uci::type::accessorType::specificBlueSeparationType:
      return boost::make_unique<asb_uci::type::SpecificBlueSeparationType>().release();
    case uci::type::accessorType::specificEmitterIdentityConfidenceType:
      return boost::make_unique<asb_uci::type::SpecificEmitterIdentityConfidenceType>().release();
    case uci::type::accessorType::specificEmitterIdentityType:
      return boost::make_unique<asb_uci::type::SpecificEmitterIdentityType>().release();
    case uci::type::accessorType::specificIdentityConfidenceType:
      return boost::make_unique<asb_uci::type::SpecificIdentityConfidenceType>().release();
    case uci::type::accessorType::specificIdentityType:
      return boost::make_unique<asb_uci::type::SpecificIdentityType>().release();
    case uci::type::accessorType::specificRedSeparationType:
      return boost::make_unique<asb_uci::type::SpecificRedSeparationType>().release();
    case uci::type::accessorType::specificVehicleIdentityConfidenceType:
      return boost::make_unique<asb_uci::type::SpecificVehicleIdentityConfidenceType>().release();
    case uci::type::accessorType::spectralDensityReportID_Type:
      return boost::make_unique<asb_uci::type::SpectralDensityReportID_Type>().release();
    case uci::type::accessorType::spectralDensityReportMT:
      return boost::make_unique<asb_uci::type::SpectralDensityReportMT>().release();
    case uci::type::accessorType::sTANAG_4607_PackingPlanPET:
      return boost::make_unique<asb_uci::type::STANAG_4607_PackingPlanPET>().release();
    case uci::type::accessorType::sTANAG_4607_PackingPlanRevA_Type:
      return boost::make_unique<asb_uci::type::STANAG_4607_PackingPlanRevA_Type>().release();
    case uci::type::accessorType::sTANAG_4607_PackingPlanType:
      return boost::make_unique<asb_uci::type::STANAG_4607_PackingPlanType>().release();
    case uci::type::accessorType::standardIdentityConfidenceType:
      return boost::make_unique<asb_uci::type::StandardIdentityConfidenceType>().release();
    case uci::type::accessorType::standardIdentityType:
      return boost::make_unique<asb_uci::type::StandardIdentityType>().release();
    case uci::type::accessorType::stateCovarianceNED_Type:
      return boost::make_unique<asb_uci::type::StateCovarianceNED_Type>().release();
    case uci::type::accessorType::storeCarriageCapabilityStatusBaseType:
      return boost::make_unique<asb_uci::type::StoreCarriageCapabilityStatusBaseType>().release();
    case uci::type::accessorType::storeCarriageCapabilityStatusMT:
      return boost::make_unique<asb_uci::type::StoreCarriageCapabilityStatusMT>().release();
    case uci::type::accessorType::storeCarriageCapabilityStatusType:
      return boost::make_unique<asb_uci::type::StoreCarriageCapabilityStatusType>().release();
    case uci::type::accessorType::storeCarriageStatusType:
      return boost::make_unique<asb_uci::type::StoreCarriageStatusType>().release();
    case uci::type::accessorType::storeInformationBaseType:
      return boost::make_unique<asb_uci::type::StoreInformationBaseType>().release();
    case uci::type::accessorType::storeInformationType:
      return boost::make_unique<asb_uci::type::StoreInformationType>().release();
    case uci::type::accessorType::storeLoadoutConfigurationID_Type:
      return boost::make_unique<asb_uci::type::StoreLoadoutConfigurationID_Type>().release();
    case uci::type::accessorType::storeLoadoutConfigurationMT:
      return boost::make_unique<asb_uci::type::StoreLoadoutConfigurationMT>().release();
    case uci::type::accessorType::storeLoadoutItemPET:
      return boost::make_unique<asb_uci::type::StoreLoadoutItemPET>().release();
    case uci::type::accessorType::storeLoadoutItemType:
      return boost::make_unique<asb_uci::type::StoreLoadoutItemType>().release();
    case uci::type::accessorType::storeManagementCommandMT:
      return boost::make_unique<asb_uci::type::StoreManagementCommandMT>().release();
    case uci::type::accessorType::storeManagementCommandStatusMDT:
      return boost::make_unique<asb_uci::type::StoreManagementCommandStatusMDT>().release();
    case uci::type::accessorType::storeManagementCommandStatusMT:
      return boost::make_unique<asb_uci::type::StoreManagementCommandStatusMT>().release();
    case uci::type::accessorType::storeManagementCommandType:
      return boost::make_unique<asb_uci::type::StoreManagementCommandType>().release();
    case uci::type::accessorType::storeManagementReportID_Type:
      return boost::make_unique<asb_uci::type::StoreManagementReportID_Type>().release();
    case uci::type::accessorType::storeManagementReportMT:
      return boost::make_unique<asb_uci::type::StoreManagementReportMT>().release();
    case uci::type::accessorType::storeManagementStatusMDT:
      return boost::make_unique<asb_uci::type::StoreManagementStatusMDT>().release();
    case uci::type::accessorType::storeManagementStatusMT:
      return boost::make_unique<asb_uci::type::StoreManagementStatusMT>().release();
    case uci::type::accessorType::storeStatusBaseType:
      return boost::make_unique<asb_uci::type::StoreStatusBaseType>().release();
    case uci::type::accessorType::storeStatusType:
      return boost::make_unique<asb_uci::type::StoreStatusType>().release();
    case uci::type::accessorType::storeType:
      return boost::make_unique<asb_uci::type::StoreType>().release();
    case uci::type::accessorType::strikeActivityCommandType:
      return boost::make_unique<asb_uci::type::StrikeActivityCommandType>().release();
    case uci::type::accessorType::strikeActivityMT:
      return boost::make_unique<asb_uci::type::StrikeActivityMT>().release();
    case uci::type::accessorType::strikeActivityType:
      return boost::make_unique<asb_uci::type::StrikeActivityType>().release();
    case uci::type::accessorType::strikeCapabilityCommandType:
      return boost::make_unique<asb_uci::type::StrikeCapabilityCommandType>().release();
    case uci::type::accessorType::strikeCapabilityMDT:
      return boost::make_unique<asb_uci::type::StrikeCapabilityMDT>().release();
    case uci::type::accessorType::strikeCapabilityMT:
      return boost::make_unique<asb_uci::type::StrikeCapabilityMT>().release();
    case uci::type::accessorType::strikeCapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::StrikeCapabilityStatusMDT>().release();
    case uci::type::accessorType::strikeCapabilityStatusMT:
      return boost::make_unique<asb_uci::type::StrikeCapabilityStatusMT>().release();
    case uci::type::accessorType::strikeCapabilityStatusType:
      return boost::make_unique<asb_uci::type::StrikeCapabilityStatusType>().release();
    case uci::type::accessorType::strikeCapabilityType:
      return boost::make_unique<asb_uci::type::StrikeCapabilityType>().release();
    case uci::type::accessorType::strikeCommandMT:
      return boost::make_unique<asb_uci::type::StrikeCommandMT>().release();
    case uci::type::accessorType::strikeCommandStatusMDT:
      return boost::make_unique<asb_uci::type::StrikeCommandStatusMDT>().release();
    case uci::type::accessorType::strikeCommandStatusMT:
      return boost::make_unique<asb_uci::type::StrikeCommandStatusMT>().release();
    case uci::type::accessorType::strikeConsentRequestMT:
      return boost::make_unique<asb_uci::type::StrikeConsentRequestMT>().release();
    case uci::type::accessorType::strikeConsentRequestStatusMDT:
      return boost::make_unique<asb_uci::type::StrikeConsentRequestStatusMDT>().release();
    case uci::type::accessorType::strikeConsentRequestStatusMT:
      return boost::make_unique<asb_uci::type::StrikeConsentRequestStatusMT>().release();
    case uci::type::accessorType::strikeConsentRequestType:
      return boost::make_unique<asb_uci::type::StrikeConsentRequestType>().release();
    case uci::type::accessorType::strikeSettingsCommandMDT:
      return boost::make_unique<asb_uci::type::StrikeSettingsCommandMDT>().release();
    case uci::type::accessorType::strikeSettingsCommandMT:
      return boost::make_unique<asb_uci::type::StrikeSettingsCommandMT>().release();
    case uci::type::accessorType::strikeSettingsCommandStatusMDT:
      return boost::make_unique<asb_uci::type::StrikeSettingsCommandStatusMDT>().release();
    case uci::type::accessorType::strikeSettingsCommandStatusMT:
      return boost::make_unique<asb_uci::type::StrikeSettingsCommandStatusMT>().release();
    case uci::type::accessorType::strikeTaskAchievabilityAssessmentRequestType:
      return boost::make_unique<asb_uci::type::StrikeTaskAchievabilityAssessmentRequestType>().release();
    case uci::type::accessorType::strikeTaskAchievabilityAssessmentType:
      return boost::make_unique<asb_uci::type::StrikeTaskAchievabilityAssessmentType>().release();
    case uci::type::accessorType::strikeTaskWeaponType:
      return boost::make_unique<asb_uci::type::StrikeTaskWeaponType>().release();
    case uci::type::accessorType::subCapabilityID_Type:
      return boost::make_unique<asb_uci::type::SubCapabilityID_Type>().release();
    case uci::type::accessorType::subsystemBIT_CommandMDT:
      return boost::make_unique<asb_uci::type::SubsystemBIT_CommandMDT>().release();
    case uci::type::accessorType::subsystemBIT_CommandMT:
      return boost::make_unique<asb_uci::type::SubsystemBIT_CommandMT>().release();
    case uci::type::accessorType::subsystemBIT_CommandStatusMDT:
      return boost::make_unique<asb_uci::type::SubsystemBIT_CommandStatusMDT>().release();
    case uci::type::accessorType::subsystemBIT_CommandStatusMT:
      return boost::make_unique<asb_uci::type::SubsystemBIT_CommandStatusMT>().release();
    case uci::type::accessorType::subsystemBIT_ConfigurationID_Type:
      return boost::make_unique<asb_uci::type::SubsystemBIT_ConfigurationID_Type>().release();
    case uci::type::accessorType::subsystemBIT_ConfigurationMT:
      return boost::make_unique<asb_uci::type::SubsystemBIT_ConfigurationMT>().release();
    case uci::type::accessorType::subsystemBIT_StatusMT:
      return boost::make_unique<asb_uci::type::SubsystemBIT_StatusMT>().release();
    case uci::type::accessorType::subsystemCalibrationCommandMDT:
      return boost::make_unique<asb_uci::type::SubsystemCalibrationCommandMDT>().release();
    case uci::type::accessorType::subsystemCalibrationCommandMT:
      return boost::make_unique<asb_uci::type::SubsystemCalibrationCommandMT>().release();
    case uci::type::accessorType::subsystemCalibrationCommandStatusMDT:
      return boost::make_unique<asb_uci::type::SubsystemCalibrationCommandStatusMDT>().release();
    case uci::type::accessorType::subsystemCalibrationCommandStatusMT:
      return boost::make_unique<asb_uci::type::SubsystemCalibrationCommandStatusMT>().release();
    case uci::type::accessorType::subsystemCalibrationConfigurationID_Type:
      return boost::make_unique<asb_uci::type::SubsystemCalibrationConfigurationID_Type>().release();
    case uci::type::accessorType::subsystemCalibrationConfigurationMT:
      return boost::make_unique<asb_uci::type::SubsystemCalibrationConfigurationMT>().release();
    case uci::type::accessorType::subsystemCalibrationStatusMT:
      return boost::make_unique<asb_uci::type::SubsystemCalibrationStatusMT>().release();
    case uci::type::accessorType::subsystemCommandStatusBaseType:
      return boost::make_unique<asb_uci::type::SubsystemCommandStatusBaseType>().release();
    case uci::type::accessorType::subsystemConfigurationDataRequestMDT:
      return boost::make_unique<asb_uci::type::SubsystemConfigurationDataRequestMDT>().release();
    case uci::type::accessorType::subsystemConfigurationDataRequestMT:
      return boost::make_unique<asb_uci::type::SubsystemConfigurationDataRequestMT>().release();
    case uci::type::accessorType::subsystemConfigurationDataRequestStatusMDT:
      return boost::make_unique<asb_uci::type::SubsystemConfigurationDataRequestStatusMDT>().release();
    case uci::type::accessorType::subsystemConfigurationDataRequestStatusMT:
      return boost::make_unique<asb_uci::type::SubsystemConfigurationDataRequestStatusMT>().release();
    case uci::type::accessorType::subsystemConfigurationID_Type:
      return boost::make_unique<asb_uci::type::SubsystemConfigurationID_Type>().release();
    case uci::type::accessorType::subsystemConfigurationMT:
      return boost::make_unique<asb_uci::type::SubsystemConfigurationMT>().release();
    case uci::type::accessorType::subsystemEraseCommandMDT:
      return boost::make_unique<asb_uci::type::SubsystemEraseCommandMDT>().release();
    case uci::type::accessorType::subsystemEraseCommandMT:
      return boost::make_unique<asb_uci::type::SubsystemEraseCommandMT>().release();
    case uci::type::accessorType::subsystemEraseCommandStatusMDT:
      return boost::make_unique<asb_uci::type::SubsystemEraseCommandStatusMDT>().release();
    case uci::type::accessorType::subsystemEraseCommandStatusMT:
      return boost::make_unique<asb_uci::type::SubsystemEraseCommandStatusMT>().release();
    case uci::type::accessorType::subsystemExtendedStatusPET:
      return boost::make_unique<asb_uci::type::SubsystemExtendedStatusPET>().release();
    case uci::type::accessorType::subsystemID_Type:
      return boost::make_unique<asb_uci::type::SubsystemID_Type>().release();
    case uci::type::accessorType::subsystemMaintenanceCommandMDT:
      return boost::make_unique<asb_uci::type::SubsystemMaintenanceCommandMDT>().release();
    case uci::type::accessorType::subsystemMaintenanceCommandMT:
      return boost::make_unique<asb_uci::type::SubsystemMaintenanceCommandMT>().release();
    case uci::type::accessorType::subsystemMaintenanceCommandStatusMDT:
      return boost::make_unique<asb_uci::type::SubsystemMaintenanceCommandStatusMDT>().release();
    case uci::type::accessorType::subsystemMaintenanceCommandStatusMT:
      return boost::make_unique<asb_uci::type::SubsystemMaintenanceCommandStatusMT>().release();
    case uci::type::accessorType::subsystemMaintenanceConfigurationID_Type:
      return boost::make_unique<asb_uci::type::SubsystemMaintenanceConfigurationID_Type>().release();
    case uci::type::accessorType::subsystemMaintenanceConfigurationMT:
      return boost::make_unique<asb_uci::type::SubsystemMaintenanceConfigurationMT>().release();
    case uci::type::accessorType::subsystemMaintenanceID_Type:
      return boost::make_unique<asb_uci::type::SubsystemMaintenanceID_Type>().release();
    case uci::type::accessorType::subsystemMaintenanceStatusMT:
      return boost::make_unique<asb_uci::type::SubsystemMaintenanceStatusMT>().release();
    case uci::type::accessorType::subsystemMaintenanceTestCommandPET:
      return boost::make_unique<asb_uci::type::SubsystemMaintenanceTestCommandPET>().release();
    case uci::type::accessorType::subsystemMaintenanceTestCommandType:
      return boost::make_unique<asb_uci::type::SubsystemMaintenanceTestCommandType>().release();
    case uci::type::accessorType::subsystemMaintenanceTestPET:
      return boost::make_unique<asb_uci::type::SubsystemMaintenanceTestPET>().release();
    default:
      return nullptr;
  }
}

} // namespace util

} // namespace asb_uci

