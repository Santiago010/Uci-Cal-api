/** @file DerivedTypesCopier17.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCopier17.h"

#include "asb_uci/type/SAR_TaskAchievabilityAssessmentType.h"
#include "asb_uci/type/SAR_TaskBaseType.h"
#include "asb_uci/type/SAR_TaskType.h"
#include "asb_uci/type/SAR_TwoColorMultiViewParametersType.h"
#include "asb_uci/type/SMTI_ActivityCommandType.h"
#include "asb_uci/type/SMTI_ActivityMT.h"
#include "asb_uci/type/SMTI_ActivityType.h"
#include "asb_uci/type/SMTI_CapabilityCommandType.h"
#include "asb_uci/type/SMTI_CapabilityMDT.h"
#include "asb_uci/type/SMTI_CapabilityMT.h"
#include "asb_uci/type/SMTI_CapabilityStatusMDT.h"
#include "asb_uci/type/SMTI_CapabilityStatusMT.h"
#include "asb_uci/type/SMTI_CapabilityType.h"
#include "asb_uci/type/SMTI_CollectionConstraintsType.h"
#include "asb_uci/type/SMTI_CollectionOptionsType.h"
#include "asb_uci/type/SMTI_CommandMT.h"
#include "asb_uci/type/SMTI_CommandStatusMDT.h"
#include "asb_uci/type/SMTI_CommandStatusMT.h"
#include "asb_uci/type/SMTI_SettingsCommandMDT.h"
#include "asb_uci/type/SMTI_SettingsCommandMT.h"
#include "asb_uci/type/SMTI_SettingsCommandStatusMDT.h"
#include "asb_uci/type/SMTI_SettingsCommandStatusMT.h"
#include "asb_uci/type/SMTI_TaskBaseType.h"
#include "asb_uci/type/SMTI_TaskType.h"
#include "asb_uci/type/SOB_C2_RecordBaseType.h"
#include "asb_uci/type/SOB_C2_RecordID_Type.h"
#include "asb_uci/type/SOB_C2_RecordMDT.h"
#include "asb_uci/type/SOB_C2_RecordMT.h"
#include "asb_uci/type/SOB_C2_RecordType.h"
#include "asb_uci/type/SOB_CorrelationRecordID_Type.h"
#include "asb_uci/type/SOB_CorrelationRecordMDT.h"
#include "asb_uci/type/SOB_CorrelationRecordMT.h"
#include "asb_uci/type/SOB_SatelliteRecordBaseType.h"
#include "asb_uci/type/SOB_SatelliteRecordID_Type.h"
#include "asb_uci/type/SOB_SatelliteRecordMDT.h"
#include "asb_uci/type/SOB_SatelliteRecordMT.h"
#include "asb_uci/type/SOB_SatelliteRecordType.h"
#include "asb_uci/type/SatelliteCharacteristicsID_Type.h"
#include "asb_uci/type/SatelliteCharacteristicsMDT.h"
#include "asb_uci/type/SatelliteCharacteristicsMT.h"
#include "asb_uci/type/SatellitePhysicalConfigurationID_Type.h"
#include "asb_uci/type/ScanDataBaseType.h"
#include "asb_uci/type/ScanDataType.h"
#include "asb_uci/type/ScoringProcessID_Type.h"
#include "asb_uci/type/SectorType.h"
#include "asb_uci/type/SecurityAuditRecordID_Type.h"
#include "asb_uci/type/SecurityAuditRecordMT.h"
#include "asb_uci/type/SegmentCompletedType.h"
#include "asb_uci/type/SegmentEstimateType.h"
#include "asb_uci/type/SegmentID_Type.h"
#include "asb_uci/type/SelectionQuerySpecificDataType.h"
#include "asb_uci/type/SelfDefenseStatusMDT.h"
#include "asb_uci/type/SelfDefenseStatusMT.h"
#include "asb_uci/type/SensorConstraintsBaseType.h"
#include "asb_uci/type/SensorConstraintsType.h"
#include "asb_uci/type/SeparationParametersType.h"
#include "asb_uci/type/ServiceConfigurationChangeRequestMDT.h"
#include "asb_uci/type/ServiceConfigurationChangeRequestMT.h"
#include "asb_uci/type/ServiceConfigurationChangeRequestStatusMDT.h"
#include "asb_uci/type/ServiceConfigurationChangeRequestStatusMT.h"
#include "asb_uci/type/ServiceConfigurationParamsDataRequestMDT.h"
#include "asb_uci/type/ServiceConfigurationParamsDataRequestMT.h"
#include "asb_uci/type/ServiceConfigurationParamsDataRequestStatusMDT.h"
#include "asb_uci/type/ServiceConfigurationParamsDataRequestStatusMT.h"
#include "asb_uci/type/ServiceConfigurationParamsMT.h"
#include "asb_uci/type/ServiceErrorReportID_Type.h"
#include "asb_uci/type/ServiceErrorReportMT.h"
#include "asb_uci/type/ServiceID_Type.h"
#include "asb_uci/type/ServiceLifecycleCommandMDT.h"
#include "asb_uci/type/ServiceLifecycleCommandMT.h"
#include "asb_uci/type/ServiceLifecycleCommandStatusMDT.h"
#include "asb_uci/type/ServiceLifecycleCommandStatusMT.h"
#include "asb_uci/type/ServiceRegistrationRequestMDT.h"
#include "asb_uci/type/ServiceRegistrationRequestMT.h"
#include "asb_uci/type/ServiceRegistrationRequestStatusMDT.h"
#include "asb_uci/type/ServiceRegistrationRequestStatusMT.h"
#include "asb_uci/type/ServiceSettingsCommandMDT.h"
#include "asb_uci/type/ServiceSettingsCommandMT.h"
#include "asb_uci/type/ServiceSettingsCommandStatusMDT.h"
#include "asb_uci/type/ServiceSettingsCommandStatusMT.h"
#include "asb_uci/type/ServiceStatusDataRequestMDT.h"
#include "asb_uci/type/ServiceStatusDataRequestMT.h"
#include "asb_uci/type/ServiceStatusDataRequestStatusMDT.h"
#include "asb_uci/type/ServiceStatusDataRequestStatusMT.h"
#include "asb_uci/type/ServiceStatusMT.h"
#include "asb_uci/type/SharedApertureSupportCapabilityStatusMDT.h"
#include "asb_uci/type/SharedApertureSupportCapabilityStatusMT.h"
#include "asb_uci/type/SharedRF_ApertureActivityBaseType.h"
#include "asb_uci/type/SharedRF_ApertureActivityCommandBaseType.h"
#include "asb_uci/type/SharedRF_ApertureCapabilityCommandBaseType.h"
#include "asb_uci/type/SignalEmitterKinematicsFixedType.h"
#include "asb_uci/type/SignalID_Type.h"
#include "asb_uci/type/SignalIdentityType.h"
#include "asb_uci/type/SignalPulseWidthBaseType.h"
#include "asb_uci/type/SignalPulseWidthType.h"
#include "asb_uci/type/SignalRelativeType.h"
#include "asb_uci/type/SignalReportID_Type.h"
#include "asb_uci/type/SignalReportMT.h"
#include "asb_uci/type/SpaceWeatherID_Type.h"
#include "asb_uci/type/SpaceWeatherMT.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"
#include "uci/type/SAR_TaskAchievabilityAssessmentType.h"
#include "uci/type/SAR_TaskBaseType.h"
#include "uci/type/SAR_TaskType.h"
#include "uci/type/SAR_TwoColorMultiViewParametersType.h"
#include "uci/type/SMTI_ActivityCommandType.h"
#include "uci/type/SMTI_ActivityMT.h"
#include "uci/type/SMTI_ActivityType.h"
#include "uci/type/SMTI_CapabilityCommandType.h"
#include "uci/type/SMTI_CapabilityMDT.h"
#include "uci/type/SMTI_CapabilityMT.h"
#include "uci/type/SMTI_CapabilityStatusMDT.h"
#include "uci/type/SMTI_CapabilityStatusMT.h"
#include "uci/type/SMTI_CapabilityType.h"
#include "uci/type/SMTI_CollectionConstraintsType.h"
#include "uci/type/SMTI_CollectionOptionsType.h"
#include "uci/type/SMTI_CommandMT.h"
#include "uci/type/SMTI_CommandStatusMDT.h"
#include "uci/type/SMTI_CommandStatusMT.h"
#include "uci/type/SMTI_SettingsCommandMDT.h"
#include "uci/type/SMTI_SettingsCommandMT.h"
#include "uci/type/SMTI_SettingsCommandStatusMDT.h"
#include "uci/type/SMTI_SettingsCommandStatusMT.h"
#include "uci/type/SMTI_TaskBaseType.h"
#include "uci/type/SMTI_TaskType.h"
#include "uci/type/SOB_C2_RecordBaseType.h"
#include "uci/type/SOB_C2_RecordID_Type.h"
#include "uci/type/SOB_C2_RecordMDT.h"
#include "uci/type/SOB_C2_RecordMT.h"
#include "uci/type/SOB_C2_RecordType.h"
#include "uci/type/SOB_CorrelationRecordID_Type.h"
#include "uci/type/SOB_CorrelationRecordMDT.h"
#include "uci/type/SOB_CorrelationRecordMT.h"
#include "uci/type/SOB_SatelliteRecordBaseType.h"
#include "uci/type/SOB_SatelliteRecordID_Type.h"
#include "uci/type/SOB_SatelliteRecordMDT.h"
#include "uci/type/SOB_SatelliteRecordMT.h"
#include "uci/type/SOB_SatelliteRecordType.h"
#include "uci/type/SatelliteCharacteristicsID_Type.h"
#include "uci/type/SatelliteCharacteristicsMDT.h"
#include "uci/type/SatelliteCharacteristicsMT.h"
#include "uci/type/SatellitePhysicalConfigurationID_Type.h"
#include "uci/type/ScanDataBaseType.h"
#include "uci/type/ScanDataType.h"
#include "uci/type/ScoringProcessID_Type.h"
#include "uci/type/SectorType.h"
#include "uci/type/SecurityAuditRecordID_Type.h"
#include "uci/type/SecurityAuditRecordMT.h"
#include "uci/type/SegmentCompletedType.h"
#include "uci/type/SegmentEstimateType.h"
#include "uci/type/SegmentID_Type.h"
#include "uci/type/SelectionQuerySpecificDataType.h"
#include "uci/type/SelfDefenseStatusMDT.h"
#include "uci/type/SelfDefenseStatusMT.h"
#include "uci/type/SensorConstraintsBaseType.h"
#include "uci/type/SensorConstraintsType.h"
#include "uci/type/SeparationParametersType.h"
#include "uci/type/ServiceConfigurationChangeRequestMDT.h"
#include "uci/type/ServiceConfigurationChangeRequestMT.h"
#include "uci/type/ServiceConfigurationChangeRequestStatusMDT.h"
#include "uci/type/ServiceConfigurationChangeRequestStatusMT.h"
#include "uci/type/ServiceConfigurationParamsDataRequestMDT.h"
#include "uci/type/ServiceConfigurationParamsDataRequestMT.h"
#include "uci/type/ServiceConfigurationParamsDataRequestStatusMDT.h"
#include "uci/type/ServiceConfigurationParamsDataRequestStatusMT.h"
#include "uci/type/ServiceConfigurationParamsMT.h"
#include "uci/type/ServiceErrorReportID_Type.h"
#include "uci/type/ServiceErrorReportMT.h"
#include "uci/type/ServiceID_Type.h"
#include "uci/type/ServiceLifecycleCommandMDT.h"
#include "uci/type/ServiceLifecycleCommandMT.h"
#include "uci/type/ServiceLifecycleCommandStatusMDT.h"
#include "uci/type/ServiceLifecycleCommandStatusMT.h"
#include "uci/type/ServiceRegistrationRequestMDT.h"
#include "uci/type/ServiceRegistrationRequestMT.h"
#include "uci/type/ServiceRegistrationRequestStatusMDT.h"
#include "uci/type/ServiceRegistrationRequestStatusMT.h"
#include "uci/type/ServiceSettingsCommandMDT.h"
#include "uci/type/ServiceSettingsCommandMT.h"
#include "uci/type/ServiceSettingsCommandStatusMDT.h"
#include "uci/type/ServiceSettingsCommandStatusMT.h"
#include "uci/type/ServiceStatusDataRequestMDT.h"
#include "uci/type/ServiceStatusDataRequestMT.h"
#include "uci/type/ServiceStatusDataRequestStatusMDT.h"
#include "uci/type/ServiceStatusDataRequestStatusMT.h"
#include "uci/type/ServiceStatusMT.h"
#include "uci/type/SharedApertureSupportCapabilityStatusMDT.h"
#include "uci/type/SharedApertureSupportCapabilityStatusMT.h"
#include "uci/type/SharedRF_ApertureActivityBaseType.h"
#include "uci/type/SharedRF_ApertureActivityCommandBaseType.h"
#include "uci/type/SharedRF_ApertureCapabilityCommandBaseType.h"
#include "uci/type/SignalEmitterKinematicsFixedType.h"
#include "uci/type/SignalID_Type.h"
#include "uci/type/SignalIdentityType.h"
#include "uci/type/SignalPulseWidthBaseType.h"
#include "uci/type/SignalPulseWidthType.h"
#include "uci/type/SignalRelativeType.h"
#include "uci/type/SignalReportID_Type.h"
#include "uci/type/SignalReportMT.h"
#include "uci/type/SpaceWeatherID_Type.h"
#include "uci/type/SpaceWeatherMT.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

bool DerivedTypesCopier17::copy(const uci::base::Accessor& source, uci::base::Accessor& destination) {
  switch (source.getAccessorType()) {
    case uci::type::accessorType::sAR_TaskAchievabilityAssessmentType:
      dynamic_cast<asb_uci::type::SAR_TaskAchievabilityAssessmentType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_TaskAchievabilityAssessmentType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_TaskBaseType:
      dynamic_cast<asb_uci::type::SAR_TaskBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_TaskBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_TaskType:
      dynamic_cast<asb_uci::type::SAR_TaskType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_TaskType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_TwoColorMultiViewParametersType:
      dynamic_cast<asb_uci::type::SAR_TwoColorMultiViewParametersType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_TwoColorMultiViewParametersType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::satelliteCharacteristicsID_Type:
      dynamic_cast<asb_uci::type::SatelliteCharacteristicsID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SatelliteCharacteristicsID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::satelliteCharacteristicsMDT:
      dynamic_cast<asb_uci::type::SatelliteCharacteristicsMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SatelliteCharacteristicsMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::satelliteCharacteristicsMT:
      dynamic_cast<asb_uci::type::SatelliteCharacteristicsMT&>(destination).copyImpl(dynamic_cast<const uci::type::SatelliteCharacteristicsMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::satellitePhysicalConfigurationID_Type:
      dynamic_cast<asb_uci::type::SatellitePhysicalConfigurationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SatellitePhysicalConfigurationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::scanDataBaseType:
      dynamic_cast<asb_uci::type::ScanDataBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::ScanDataBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::scanDataType:
      dynamic_cast<asb_uci::type::ScanDataType&>(destination).copyImpl(dynamic_cast<const uci::type::ScanDataType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::scoringProcessID_Type:
      dynamic_cast<asb_uci::type::ScoringProcessID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ScoringProcessID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sectorType:
      dynamic_cast<asb_uci::type::SectorType&>(destination).copyImpl(dynamic_cast<const uci::type::SectorType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::securityAuditRecordID_Type:
      dynamic_cast<asb_uci::type::SecurityAuditRecordID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SecurityAuditRecordID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::securityAuditRecordMT:
      dynamic_cast<asb_uci::type::SecurityAuditRecordMT&>(destination).copyImpl(dynamic_cast<const uci::type::SecurityAuditRecordMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::segmentCompletedType:
      dynamic_cast<asb_uci::type::SegmentCompletedType&>(destination).copyImpl(dynamic_cast<const uci::type::SegmentCompletedType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::segmentEstimateType:
      dynamic_cast<asb_uci::type::SegmentEstimateType&>(destination).copyImpl(dynamic_cast<const uci::type::SegmentEstimateType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::segmentID_Type:
      dynamic_cast<asb_uci::type::SegmentID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SegmentID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::selectionQuerySpecificDataType:
      dynamic_cast<asb_uci::type::SelectionQuerySpecificDataType&>(destination).copyImpl(dynamic_cast<const uci::type::SelectionQuerySpecificDataType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::selfDefenseStatusMDT:
      dynamic_cast<asb_uci::type::SelfDefenseStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SelfDefenseStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::selfDefenseStatusMT:
      dynamic_cast<asb_uci::type::SelfDefenseStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SelfDefenseStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sensorConstraintsBaseType:
      dynamic_cast<asb_uci::type::SensorConstraintsBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::SensorConstraintsBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sensorConstraintsType:
      dynamic_cast<asb_uci::type::SensorConstraintsType&>(destination).copyImpl(dynamic_cast<const uci::type::SensorConstraintsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::separationParametersType:
      dynamic_cast<asb_uci::type::SeparationParametersType&>(destination).copyImpl(dynamic_cast<const uci::type::SeparationParametersType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceConfigurationChangeRequestMDT:
      dynamic_cast<asb_uci::type::ServiceConfigurationChangeRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceConfigurationChangeRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceConfigurationChangeRequestMT:
      dynamic_cast<asb_uci::type::ServiceConfigurationChangeRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceConfigurationChangeRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceConfigurationChangeRequestStatusMDT:
      dynamic_cast<asb_uci::type::ServiceConfigurationChangeRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceConfigurationChangeRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceConfigurationChangeRequestStatusMT:
      dynamic_cast<asb_uci::type::ServiceConfigurationChangeRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceConfigurationChangeRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceConfigurationParamsDataRequestMDT:
      dynamic_cast<asb_uci::type::ServiceConfigurationParamsDataRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceConfigurationParamsDataRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceConfigurationParamsDataRequestMT:
      dynamic_cast<asb_uci::type::ServiceConfigurationParamsDataRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceConfigurationParamsDataRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceConfigurationParamsDataRequestStatusMDT:
      dynamic_cast<asb_uci::type::ServiceConfigurationParamsDataRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceConfigurationParamsDataRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceConfigurationParamsDataRequestStatusMT:
      dynamic_cast<asb_uci::type::ServiceConfigurationParamsDataRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceConfigurationParamsDataRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceConfigurationParamsMT:
      dynamic_cast<asb_uci::type::ServiceConfigurationParamsMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceConfigurationParamsMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceErrorReportID_Type:
      dynamic_cast<asb_uci::type::ServiceErrorReportID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceErrorReportID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceErrorReportMT:
      dynamic_cast<asb_uci::type::ServiceErrorReportMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceErrorReportMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceID_Type:
      dynamic_cast<asb_uci::type::ServiceID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceLifecycleCommandMDT:
      dynamic_cast<asb_uci::type::ServiceLifecycleCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceLifecycleCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceLifecycleCommandMT:
      dynamic_cast<asb_uci::type::ServiceLifecycleCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceLifecycleCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceLifecycleCommandStatusMDT:
      dynamic_cast<asb_uci::type::ServiceLifecycleCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceLifecycleCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceLifecycleCommandStatusMT:
      dynamic_cast<asb_uci::type::ServiceLifecycleCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceLifecycleCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceRegistrationRequestMDT:
      dynamic_cast<asb_uci::type::ServiceRegistrationRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceRegistrationRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceRegistrationRequestMT:
      dynamic_cast<asb_uci::type::ServiceRegistrationRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceRegistrationRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceRegistrationRequestStatusMDT:
      dynamic_cast<asb_uci::type::ServiceRegistrationRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceRegistrationRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceRegistrationRequestStatusMT:
      dynamic_cast<asb_uci::type::ServiceRegistrationRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceRegistrationRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceSettingsCommandMDT:
      dynamic_cast<asb_uci::type::ServiceSettingsCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceSettingsCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceSettingsCommandMT:
      dynamic_cast<asb_uci::type::ServiceSettingsCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceSettingsCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceSettingsCommandStatusMDT:
      dynamic_cast<asb_uci::type::ServiceSettingsCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceSettingsCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceSettingsCommandStatusMT:
      dynamic_cast<asb_uci::type::ServiceSettingsCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceSettingsCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceStatusDataRequestMDT:
      dynamic_cast<asb_uci::type::ServiceStatusDataRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceStatusDataRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceStatusDataRequestMT:
      dynamic_cast<asb_uci::type::ServiceStatusDataRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceStatusDataRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceStatusDataRequestStatusMDT:
      dynamic_cast<asb_uci::type::ServiceStatusDataRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceStatusDataRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceStatusDataRequestStatusMT:
      dynamic_cast<asb_uci::type::ServiceStatusDataRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceStatusDataRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::serviceStatusMT:
      dynamic_cast<asb_uci::type::ServiceStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ServiceStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sharedApertureSupportCapabilityStatusMDT:
      dynamic_cast<asb_uci::type::SharedApertureSupportCapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SharedApertureSupportCapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sharedApertureSupportCapabilityStatusMT:
      dynamic_cast<asb_uci::type::SharedApertureSupportCapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SharedApertureSupportCapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sharedRF_ApertureActivityBaseType:
      dynamic_cast<asb_uci::type::SharedRF_ApertureActivityBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::SharedRF_ApertureActivityBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sharedRF_ApertureActivityCommandBaseType:
      dynamic_cast<asb_uci::type::SharedRF_ApertureActivityCommandBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::SharedRF_ApertureActivityCommandBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sharedRF_ApertureCapabilityCommandBaseType:
      dynamic_cast<asb_uci::type::SharedRF_ApertureCapabilityCommandBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::SharedRF_ApertureCapabilityCommandBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::signalEmitterKinematicsFixedType:
      dynamic_cast<asb_uci::type::SignalEmitterKinematicsFixedType&>(destination).copyImpl(dynamic_cast<const uci::type::SignalEmitterKinematicsFixedType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::signalID_Type:
      dynamic_cast<asb_uci::type::SignalID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SignalID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::signalIdentityType:
      dynamic_cast<asb_uci::type::SignalIdentityType&>(destination).copyImpl(dynamic_cast<const uci::type::SignalIdentityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::signalPulseWidthBaseType:
      dynamic_cast<asb_uci::type::SignalPulseWidthBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::SignalPulseWidthBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::signalPulseWidthType:
      dynamic_cast<asb_uci::type::SignalPulseWidthType&>(destination).copyImpl(dynamic_cast<const uci::type::SignalPulseWidthType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::signalRelativeType:
      dynamic_cast<asb_uci::type::SignalRelativeType&>(destination).copyImpl(dynamic_cast<const uci::type::SignalRelativeType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::signalReportID_Type:
      dynamic_cast<asb_uci::type::SignalReportID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SignalReportID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::signalReportMT:
      dynamic_cast<asb_uci::type::SignalReportMT&>(destination).copyImpl(dynamic_cast<const uci::type::SignalReportMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_ActivityCommandType:
      dynamic_cast<asb_uci::type::SMTI_ActivityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_ActivityCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_ActivityMT:
      dynamic_cast<asb_uci::type::SMTI_ActivityMT&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_ActivityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_ActivityType:
      dynamic_cast<asb_uci::type::SMTI_ActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_ActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_CapabilityCommandType:
      dynamic_cast<asb_uci::type::SMTI_CapabilityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_CapabilityCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_CapabilityMDT:
      dynamic_cast<asb_uci::type::SMTI_CapabilityMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_CapabilityMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_CapabilityMT:
      dynamic_cast<asb_uci::type::SMTI_CapabilityMT&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_CapabilityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_CapabilityStatusMDT:
      dynamic_cast<asb_uci::type::SMTI_CapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_CapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_CapabilityStatusMT:
      dynamic_cast<asb_uci::type::SMTI_CapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_CapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_CapabilityType:
      dynamic_cast<asb_uci::type::SMTI_CapabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_CapabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_CollectionConstraintsType:
      dynamic_cast<asb_uci::type::SMTI_CollectionConstraintsType&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_CollectionConstraintsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_CollectionOptionsType:
      dynamic_cast<asb_uci::type::SMTI_CollectionOptionsType&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_CollectionOptionsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_CommandMT:
      dynamic_cast<asb_uci::type::SMTI_CommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_CommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_CommandStatusMDT:
      dynamic_cast<asb_uci::type::SMTI_CommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_CommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_CommandStatusMT:
      dynamic_cast<asb_uci::type::SMTI_CommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_CommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_SettingsCommandMDT:
      dynamic_cast<asb_uci::type::SMTI_SettingsCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_SettingsCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_SettingsCommandMT:
      dynamic_cast<asb_uci::type::SMTI_SettingsCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_SettingsCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_SettingsCommandStatusMDT:
      dynamic_cast<asb_uci::type::SMTI_SettingsCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_SettingsCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_SettingsCommandStatusMT:
      dynamic_cast<asb_uci::type::SMTI_SettingsCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_SettingsCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_TaskBaseType:
      dynamic_cast<asb_uci::type::SMTI_TaskBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_TaskBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sMTI_TaskType:
      dynamic_cast<asb_uci::type::SMTI_TaskType&>(destination).copyImpl(dynamic_cast<const uci::type::SMTI_TaskType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_C2_RecordBaseType:
      dynamic_cast<asb_uci::type::SOB_C2_RecordBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_C2_RecordBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_C2_RecordID_Type:
      dynamic_cast<asb_uci::type::SOB_C2_RecordID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_C2_RecordID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_C2_RecordMDT:
      dynamic_cast<asb_uci::type::SOB_C2_RecordMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_C2_RecordMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_C2_RecordMT:
      dynamic_cast<asb_uci::type::SOB_C2_RecordMT&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_C2_RecordMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_C2_RecordType:
      dynamic_cast<asb_uci::type::SOB_C2_RecordType&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_C2_RecordType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_CorrelationRecordID_Type:
      dynamic_cast<asb_uci::type::SOB_CorrelationRecordID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_CorrelationRecordID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_CorrelationRecordMDT:
      dynamic_cast<asb_uci::type::SOB_CorrelationRecordMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_CorrelationRecordMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_CorrelationRecordMT:
      dynamic_cast<asb_uci::type::SOB_CorrelationRecordMT&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_CorrelationRecordMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_SatelliteRecordBaseType:
      dynamic_cast<asb_uci::type::SOB_SatelliteRecordBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_SatelliteRecordBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_SatelliteRecordID_Type:
      dynamic_cast<asb_uci::type::SOB_SatelliteRecordID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_SatelliteRecordID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_SatelliteRecordMDT:
      dynamic_cast<asb_uci::type::SOB_SatelliteRecordMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_SatelliteRecordMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_SatelliteRecordMT:
      dynamic_cast<asb_uci::type::SOB_SatelliteRecordMT&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_SatelliteRecordMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sOB_SatelliteRecordType:
      dynamic_cast<asb_uci::type::SOB_SatelliteRecordType&>(destination).copyImpl(dynamic_cast<const uci::type::SOB_SatelliteRecordType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::spaceWeatherID_Type:
      dynamic_cast<asb_uci::type::SpaceWeatherID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SpaceWeatherID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::spaceWeatherMT:
      dynamic_cast<asb_uci::type::SpaceWeatherMT&>(destination).copyImpl(dynamic_cast<const uci::type::SpaceWeatherMT&>(source), false);
      return true;
      break;
    default:
      return false;
  }
}

} // namespace util

} // namespace asb_uci

