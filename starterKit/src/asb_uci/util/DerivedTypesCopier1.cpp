/** @file DerivedTypesCopier1.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCopier1.h"

#include "asb_uci/type/ACO_FileTraceabilityType.h"
#include "asb_uci/type/ACO_TraceabilityType.h"
#include "asb_uci/type/ACTDF_FileTraceabilityType.h"
#include "asb_uci/type/ACTDF_TaskID_Type.h"
#include "asb_uci/type/ACTDF_TraceabilityType.h"
#include "asb_uci/type/AccessAssessmentID_Type.h"
#include "asb_uci/type/AccessAssessmentMT.h"
#include "asb_uci/type/AccessAssessmentRequestMDT.h"
#include "asb_uci/type/AccessAssessmentRequestMT.h"
#include "asb_uci/type/AccessAssessmentRequestStatusMDT.h"
#include "asb_uci/type/AccessAssessmentRequestStatusMT.h"
#include "asb_uci/type/AchievabilityAssessmentPET.h"
#include "asb_uci/type/AchievabilityAssessmentRequestPET.h"
#include "asb_uci/type/ActionActivityMT.h"
#include "asb_uci/type/ActionActivityType.h"
#include "asb_uci/type/ActionAllocationType.h"
#include "asb_uci/type/ActionCancelCommandMDT.h"
#include "asb_uci/type/ActionCancelCommandMT.h"
#include "asb_uci/type/ActionCancelCommandStatusMDT.h"
#include "asb_uci/type/ActionCancelCommandStatusMT.h"
#include "asb_uci/type/ActionCapabilityCommandType.h"
#include "asb_uci/type/ActionCapabilityMDT.h"
#include "asb_uci/type/ActionCapabilityMT.h"
#include "asb_uci/type/ActionCapabilityStatusMDT.h"
#include "asb_uci/type/ActionCapabilityStatusMT.h"
#include "asb_uci/type/ActionCapabilityType.h"
#include "asb_uci/type/ActionCommandMT.h"
#include "asb_uci/type/ActionCommandStatusMDT.h"
#include "asb_uci/type/ActionCommandStatusMT.h"
#include "asb_uci/type/ActionExecutionApprovalStatusMDT.h"
#include "asb_uci/type/ActionExecutionApprovalStatusMT.h"
#include "asb_uci/type/ActionID_Type.h"
#include "asb_uci/type/ActionMT.h"
#include "asb_uci/type/ActionPlanApprovalStatusMT.h"
#include "asb_uci/type/ActionPlanCommandID_Type.h"
#include "asb_uci/type/ActionPlanCommandMT.h"
#include "asb_uci/type/ActionPlanCommandStatusMT.h"
#include "asb_uci/type/ActionPlanExecutionStatusMT.h"
#include "asb_uci/type/ActionPlanID_Type.h"
#include "asb_uci/type/ActionPlanInputsType.h"
#include "asb_uci/type/ActionPlanMT.h"
#include "asb_uci/type/ActionPlanProcessDescriptionType.h"
#include "asb_uci/type/ActionPlanStatusMT.h"
#include "asb_uci/type/ActionPlanValidationCommandMDT.h"
#include "asb_uci/type/ActionPlanValidationCommandMT.h"
#include "asb_uci/type/ActionPlanValidationCommandStatusMDT.h"
#include "asb_uci/type/ActionPlanValidationCommandStatusMT.h"
#include "asb_uci/type/ActionPlanValidationID_Type.h"
#include "asb_uci/type/ActionPlanValidationInputsType.h"
#include "asb_uci/type/ActionPlanValidationMT.h"
#include "asb_uci/type/ActionPlanningResultType.h"
#include "asb_uci/type/ActionPlanningStatusMDT.h"
#include "asb_uci/type/ActionPlanningStatusMT.h"
#include "asb_uci/type/ActionStatusMDT.h"
#include "asb_uci/type/ActionStatusMT.h"
#include "asb_uci/type/ActivityBaseType.h"
#include "asb_uci/type/ActivityCommandBaseType.h"
#include "asb_uci/type/ActivityExecutionStatusType.h"
#include "asb_uci/type/ActivityID_Type.h"
#include "asb_uci/type/ActivityMetricsID_Type.h"
#include "asb_uci/type/ActivityMetricsMT.h"
#include "asb_uci/type/ActivityMetricsRequestMDT.h"
#include "asb_uci/type/ActivityMetricsRequestMT.h"
#include "asb_uci/type/ActivityMetricsRequestStatusMDT.h"
#include "asb_uci/type/ActivityMetricsRequestStatusMT.h"
#include "asb_uci/type/ActivityPlanApprovalStatusMT.h"
#include "asb_uci/type/ActivityPlanCommandID_Type.h"
#include "asb_uci/type/ActivityPlanCommandMT.h"
#include "asb_uci/type/ActivityPlanCommandStatusMT.h"
#include "asb_uci/type/ActivityPlanExecutionStatusMT.h"
#include "asb_uci/type/ActivityPlanID_Type.h"
#include "asb_uci/type/ActivityPlanInputsType.h"
#include "asb_uci/type/ActivityPlanMT.h"
#include "asb_uci/type/ActivityPlanPartsCommandType.h"
#include "asb_uci/type/ActivityPlanPartsType.h"
#include "asb_uci/type/ActivityPlanProcessDescriptionType.h"
#include "asb_uci/type/ActivityPlanStatusMT.h"
#include "asb_uci/type/ActivityPlanStatusType.h"
#include "asb_uci/type/ActivityPlanValidationCommandMDT.h"
#include "asb_uci/type/ActivityPlanValidationCommandMT.h"
#include "asb_uci/type/ActivityPlanValidationCommandStatusMDT.h"
#include "asb_uci/type/ActivityPlanValidationCommandStatusMT.h"
#include "asb_uci/type/ActivityPlanValidationID_Type.h"
#include "asb_uci/type/ActivityPlanValidationInputsType.h"
#include "asb_uci/type/ActivityPlanValidationMT.h"
#include "asb_uci/type/AirSampleActivityMT.h"
#include "asb_uci/type/AirSampleActivityType.h"
#include "asb_uci/type/AirSampleCapabilityCommandType.h"
#include "asb_uci/type/AirSampleCapabilityMDT.h"
#include "asb_uci/type/AirSampleCapabilityMT.h"
#include "asb_uci/type/AirSampleCapabilityStatusMDT.h"
#include "asb_uci/type/AirSampleCapabilityStatusMT.h"
#include "asb_uci/type/AirSampleCapabilityType.h"
#include "asb_uci/type/AirSampleCommandMT.h"
#include "asb_uci/type/AirfieldGeneralStoreType.h"
#include "asb_uci/type/AirfieldID_Type.h"
#include "asb_uci/type/AirfieldReportID_Type.h"
#include "asb_uci/type/AirfieldReportMT.h"
#include "asb_uci/type/AirfieldStoreType.h"
#include "asb_uci/type/AirfieldStoresPET.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"
#include "uci/type/ACO_FileTraceabilityType.h"
#include "uci/type/ACO_TraceabilityType.h"
#include "uci/type/ACTDF_FileTraceabilityType.h"
#include "uci/type/ACTDF_TaskID_Type.h"
#include "uci/type/ACTDF_TraceabilityType.h"
#include "uci/type/AccessAssessmentID_Type.h"
#include "uci/type/AccessAssessmentMT.h"
#include "uci/type/AccessAssessmentRequestMDT.h"
#include "uci/type/AccessAssessmentRequestMT.h"
#include "uci/type/AccessAssessmentRequestStatusMDT.h"
#include "uci/type/AccessAssessmentRequestStatusMT.h"
#include "uci/type/AchievabilityAssessmentPET.h"
#include "uci/type/AchievabilityAssessmentRequestPET.h"
#include "uci/type/ActionActivityMT.h"
#include "uci/type/ActionActivityType.h"
#include "uci/type/ActionAllocationType.h"
#include "uci/type/ActionCancelCommandMDT.h"
#include "uci/type/ActionCancelCommandMT.h"
#include "uci/type/ActionCancelCommandStatusMDT.h"
#include "uci/type/ActionCancelCommandStatusMT.h"
#include "uci/type/ActionCapabilityCommandType.h"
#include "uci/type/ActionCapabilityMDT.h"
#include "uci/type/ActionCapabilityMT.h"
#include "uci/type/ActionCapabilityStatusMDT.h"
#include "uci/type/ActionCapabilityStatusMT.h"
#include "uci/type/ActionCapabilityType.h"
#include "uci/type/ActionCommandMT.h"
#include "uci/type/ActionCommandStatusMDT.h"
#include "uci/type/ActionCommandStatusMT.h"
#include "uci/type/ActionExecutionApprovalStatusMDT.h"
#include "uci/type/ActionExecutionApprovalStatusMT.h"
#include "uci/type/ActionID_Type.h"
#include "uci/type/ActionMT.h"
#include "uci/type/ActionPlanApprovalStatusMT.h"
#include "uci/type/ActionPlanCommandID_Type.h"
#include "uci/type/ActionPlanCommandMT.h"
#include "uci/type/ActionPlanCommandStatusMT.h"
#include "uci/type/ActionPlanExecutionStatusMT.h"
#include "uci/type/ActionPlanID_Type.h"
#include "uci/type/ActionPlanInputsType.h"
#include "uci/type/ActionPlanMT.h"
#include "uci/type/ActionPlanProcessDescriptionType.h"
#include "uci/type/ActionPlanStatusMT.h"
#include "uci/type/ActionPlanValidationCommandMDT.h"
#include "uci/type/ActionPlanValidationCommandMT.h"
#include "uci/type/ActionPlanValidationCommandStatusMDT.h"
#include "uci/type/ActionPlanValidationCommandStatusMT.h"
#include "uci/type/ActionPlanValidationID_Type.h"
#include "uci/type/ActionPlanValidationInputsType.h"
#include "uci/type/ActionPlanValidationMT.h"
#include "uci/type/ActionPlanningResultType.h"
#include "uci/type/ActionPlanningStatusMDT.h"
#include "uci/type/ActionPlanningStatusMT.h"
#include "uci/type/ActionStatusMDT.h"
#include "uci/type/ActionStatusMT.h"
#include "uci/type/ActivityBaseType.h"
#include "uci/type/ActivityCommandBaseType.h"
#include "uci/type/ActivityExecutionStatusType.h"
#include "uci/type/ActivityID_Type.h"
#include "uci/type/ActivityMetricsID_Type.h"
#include "uci/type/ActivityMetricsMT.h"
#include "uci/type/ActivityMetricsRequestMDT.h"
#include "uci/type/ActivityMetricsRequestMT.h"
#include "uci/type/ActivityMetricsRequestStatusMDT.h"
#include "uci/type/ActivityMetricsRequestStatusMT.h"
#include "uci/type/ActivityPlanApprovalStatusMT.h"
#include "uci/type/ActivityPlanCommandID_Type.h"
#include "uci/type/ActivityPlanCommandMT.h"
#include "uci/type/ActivityPlanCommandStatusMT.h"
#include "uci/type/ActivityPlanExecutionStatusMT.h"
#include "uci/type/ActivityPlanID_Type.h"
#include "uci/type/ActivityPlanInputsType.h"
#include "uci/type/ActivityPlanMT.h"
#include "uci/type/ActivityPlanPartsCommandType.h"
#include "uci/type/ActivityPlanPartsType.h"
#include "uci/type/ActivityPlanProcessDescriptionType.h"
#include "uci/type/ActivityPlanStatusMT.h"
#include "uci/type/ActivityPlanStatusType.h"
#include "uci/type/ActivityPlanValidationCommandMDT.h"
#include "uci/type/ActivityPlanValidationCommandMT.h"
#include "uci/type/ActivityPlanValidationCommandStatusMDT.h"
#include "uci/type/ActivityPlanValidationCommandStatusMT.h"
#include "uci/type/ActivityPlanValidationID_Type.h"
#include "uci/type/ActivityPlanValidationInputsType.h"
#include "uci/type/ActivityPlanValidationMT.h"
#include "uci/type/AirSampleActivityMT.h"
#include "uci/type/AirSampleActivityType.h"
#include "uci/type/AirSampleCapabilityCommandType.h"
#include "uci/type/AirSampleCapabilityMDT.h"
#include "uci/type/AirSampleCapabilityMT.h"
#include "uci/type/AirSampleCapabilityStatusMDT.h"
#include "uci/type/AirSampleCapabilityStatusMT.h"
#include "uci/type/AirSampleCapabilityType.h"
#include "uci/type/AirSampleCommandMT.h"
#include "uci/type/AirfieldGeneralStoreType.h"
#include "uci/type/AirfieldID_Type.h"
#include "uci/type/AirfieldReportID_Type.h"
#include "uci/type/AirfieldReportMT.h"
#include "uci/type/AirfieldStoreType.h"
#include "uci/type/AirfieldStoresPET.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

bool DerivedTypesCopier1::copy(const uci::base::Accessor& source, uci::base::Accessor& destination) {
  switch (source.getAccessorType()) {
    case uci::type::accessorType::accessAssessmentID_Type:
      dynamic_cast<asb_uci::type::AccessAssessmentID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::AccessAssessmentID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::accessAssessmentMT:
      dynamic_cast<asb_uci::type::AccessAssessmentMT&>(destination).copyImpl(dynamic_cast<const uci::type::AccessAssessmentMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::accessAssessmentRequestMDT:
      dynamic_cast<asb_uci::type::AccessAssessmentRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::AccessAssessmentRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::accessAssessmentRequestMT:
      dynamic_cast<asb_uci::type::AccessAssessmentRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::AccessAssessmentRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::accessAssessmentRequestStatusMDT:
      dynamic_cast<asb_uci::type::AccessAssessmentRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::AccessAssessmentRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::accessAssessmentRequestStatusMT:
      dynamic_cast<asb_uci::type::AccessAssessmentRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::AccessAssessmentRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::achievabilityAssessmentPET:
      dynamic_cast<asb_uci::type::AchievabilityAssessmentPET&>(destination).copyImpl(dynamic_cast<const uci::type::AchievabilityAssessmentPET&>(source), false);
      return true;
      break;
    case uci::type::accessorType::achievabilityAssessmentRequestPET:
      dynamic_cast<asb_uci::type::AchievabilityAssessmentRequestPET&>(destination).copyImpl(dynamic_cast<const uci::type::AchievabilityAssessmentRequestPET&>(source), false);
      return true;
      break;
    case uci::type::accessorType::aCO_FileTraceabilityType:
      dynamic_cast<asb_uci::type::ACO_FileTraceabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::ACO_FileTraceabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::aCO_TraceabilityType:
      dynamic_cast<asb_uci::type::ACO_TraceabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::ACO_TraceabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::aCTDF_FileTraceabilityType:
      dynamic_cast<asb_uci::type::ACTDF_FileTraceabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::ACTDF_FileTraceabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::aCTDF_TaskID_Type:
      dynamic_cast<asb_uci::type::ACTDF_TaskID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ACTDF_TaskID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::aCTDF_TraceabilityType:
      dynamic_cast<asb_uci::type::ACTDF_TraceabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::ACTDF_TraceabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionActivityMT:
      dynamic_cast<asb_uci::type::ActionActivityMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionActivityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionActivityType:
      dynamic_cast<asb_uci::type::ActionActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::ActionActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionAllocationType:
      dynamic_cast<asb_uci::type::ActionAllocationType&>(destination).copyImpl(dynamic_cast<const uci::type::ActionAllocationType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCancelCommandMDT:
      dynamic_cast<asb_uci::type::ActionCancelCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCancelCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCancelCommandMT:
      dynamic_cast<asb_uci::type::ActionCancelCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCancelCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCancelCommandStatusMDT:
      dynamic_cast<asb_uci::type::ActionCancelCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCancelCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCancelCommandStatusMT:
      dynamic_cast<asb_uci::type::ActionCancelCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCancelCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCapabilityCommandType:
      dynamic_cast<asb_uci::type::ActionCapabilityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCapabilityCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCapabilityMDT:
      dynamic_cast<asb_uci::type::ActionCapabilityMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCapabilityMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCapabilityMT:
      dynamic_cast<asb_uci::type::ActionCapabilityMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCapabilityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCapabilityStatusMDT:
      dynamic_cast<asb_uci::type::ActionCapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCapabilityStatusMT:
      dynamic_cast<asb_uci::type::ActionCapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCapabilityType:
      dynamic_cast<asb_uci::type::ActionCapabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCapabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCommandMT:
      dynamic_cast<asb_uci::type::ActionCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCommandStatusMDT:
      dynamic_cast<asb_uci::type::ActionCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionCommandStatusMT:
      dynamic_cast<asb_uci::type::ActionCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionExecutionApprovalStatusMDT:
      dynamic_cast<asb_uci::type::ActionExecutionApprovalStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionExecutionApprovalStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionExecutionApprovalStatusMT:
      dynamic_cast<asb_uci::type::ActionExecutionApprovalStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionExecutionApprovalStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionID_Type:
      dynamic_cast<asb_uci::type::ActionID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ActionID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionMT:
      dynamic_cast<asb_uci::type::ActionMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanApprovalStatusMT:
      dynamic_cast<asb_uci::type::ActionPlanApprovalStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanApprovalStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanCommandID_Type:
      dynamic_cast<asb_uci::type::ActionPlanCommandID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanCommandID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanCommandMT:
      dynamic_cast<asb_uci::type::ActionPlanCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanCommandStatusMT:
      dynamic_cast<asb_uci::type::ActionPlanCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanExecutionStatusMT:
      dynamic_cast<asb_uci::type::ActionPlanExecutionStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanExecutionStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanID_Type:
      dynamic_cast<asb_uci::type::ActionPlanID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanInputsType:
      dynamic_cast<asb_uci::type::ActionPlanInputsType&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanInputsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanMT:
      dynamic_cast<asb_uci::type::ActionPlanMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanningResultType:
      dynamic_cast<asb_uci::type::ActionPlanningResultType&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanningResultType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanningStatusMDT:
      dynamic_cast<asb_uci::type::ActionPlanningStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanningStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanningStatusMT:
      dynamic_cast<asb_uci::type::ActionPlanningStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanningStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanProcessDescriptionType:
      dynamic_cast<asb_uci::type::ActionPlanProcessDescriptionType&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanProcessDescriptionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanStatusMT:
      dynamic_cast<asb_uci::type::ActionPlanStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanValidationCommandMDT:
      dynamic_cast<asb_uci::type::ActionPlanValidationCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanValidationCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanValidationCommandMT:
      dynamic_cast<asb_uci::type::ActionPlanValidationCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanValidationCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanValidationCommandStatusMDT:
      dynamic_cast<asb_uci::type::ActionPlanValidationCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanValidationCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanValidationCommandStatusMT:
      dynamic_cast<asb_uci::type::ActionPlanValidationCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanValidationCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanValidationID_Type:
      dynamic_cast<asb_uci::type::ActionPlanValidationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanValidationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanValidationInputsType:
      dynamic_cast<asb_uci::type::ActionPlanValidationInputsType&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanValidationInputsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionPlanValidationMT:
      dynamic_cast<asb_uci::type::ActionPlanValidationMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionPlanValidationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionStatusMDT:
      dynamic_cast<asb_uci::type::ActionStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::actionStatusMT:
      dynamic_cast<asb_uci::type::ActionStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActionStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityBaseType:
      dynamic_cast<asb_uci::type::ActivityBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityCommandBaseType:
      dynamic_cast<asb_uci::type::ActivityCommandBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityCommandBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityExecutionStatusType:
      dynamic_cast<asb_uci::type::ActivityExecutionStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityExecutionStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityID_Type:
      dynamic_cast<asb_uci::type::ActivityID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityMetricsID_Type:
      dynamic_cast<asb_uci::type::ActivityMetricsID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityMetricsID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityMetricsMT:
      dynamic_cast<asb_uci::type::ActivityMetricsMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityMetricsMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityMetricsRequestMDT:
      dynamic_cast<asb_uci::type::ActivityMetricsRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityMetricsRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityMetricsRequestMT:
      dynamic_cast<asb_uci::type::ActivityMetricsRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityMetricsRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityMetricsRequestStatusMDT:
      dynamic_cast<asb_uci::type::ActivityMetricsRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityMetricsRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityMetricsRequestStatusMT:
      dynamic_cast<asb_uci::type::ActivityMetricsRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityMetricsRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanApprovalStatusMT:
      dynamic_cast<asb_uci::type::ActivityPlanApprovalStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanApprovalStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanCommandID_Type:
      dynamic_cast<asb_uci::type::ActivityPlanCommandID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanCommandID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanCommandMT:
      dynamic_cast<asb_uci::type::ActivityPlanCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanCommandStatusMT:
      dynamic_cast<asb_uci::type::ActivityPlanCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanExecutionStatusMT:
      dynamic_cast<asb_uci::type::ActivityPlanExecutionStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanExecutionStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanID_Type:
      dynamic_cast<asb_uci::type::ActivityPlanID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanInputsType:
      dynamic_cast<asb_uci::type::ActivityPlanInputsType&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanInputsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanMT:
      dynamic_cast<asb_uci::type::ActivityPlanMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanPartsCommandType:
      dynamic_cast<asb_uci::type::ActivityPlanPartsCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanPartsCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanPartsType:
      dynamic_cast<asb_uci::type::ActivityPlanPartsType&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanPartsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanProcessDescriptionType:
      dynamic_cast<asb_uci::type::ActivityPlanProcessDescriptionType&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanProcessDescriptionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanStatusMT:
      dynamic_cast<asb_uci::type::ActivityPlanStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanStatusType:
      dynamic_cast<asb_uci::type::ActivityPlanStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanValidationCommandMDT:
      dynamic_cast<asb_uci::type::ActivityPlanValidationCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanValidationCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanValidationCommandMT:
      dynamic_cast<asb_uci::type::ActivityPlanValidationCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanValidationCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanValidationCommandStatusMDT:
      dynamic_cast<asb_uci::type::ActivityPlanValidationCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanValidationCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanValidationCommandStatusMT:
      dynamic_cast<asb_uci::type::ActivityPlanValidationCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanValidationCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanValidationID_Type:
      dynamic_cast<asb_uci::type::ActivityPlanValidationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanValidationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanValidationInputsType:
      dynamic_cast<asb_uci::type::ActivityPlanValidationInputsType&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanValidationInputsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::activityPlanValidationMT:
      dynamic_cast<asb_uci::type::ActivityPlanValidationMT&>(destination).copyImpl(dynamic_cast<const uci::type::ActivityPlanValidationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airfieldGeneralStoreType:
      dynamic_cast<asb_uci::type::AirfieldGeneralStoreType&>(destination).copyImpl(dynamic_cast<const uci::type::AirfieldGeneralStoreType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airfieldID_Type:
      dynamic_cast<asb_uci::type::AirfieldID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::AirfieldID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airfieldReportID_Type:
      dynamic_cast<asb_uci::type::AirfieldReportID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::AirfieldReportID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airfieldReportMT:
      dynamic_cast<asb_uci::type::AirfieldReportMT&>(destination).copyImpl(dynamic_cast<const uci::type::AirfieldReportMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airfieldStoresPET:
      dynamic_cast<asb_uci::type::AirfieldStoresPET&>(destination).copyImpl(dynamic_cast<const uci::type::AirfieldStoresPET&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airfieldStoreType:
      dynamic_cast<asb_uci::type::AirfieldStoreType&>(destination).copyImpl(dynamic_cast<const uci::type::AirfieldStoreType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airSampleActivityMT:
      dynamic_cast<asb_uci::type::AirSampleActivityMT&>(destination).copyImpl(dynamic_cast<const uci::type::AirSampleActivityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airSampleActivityType:
      dynamic_cast<asb_uci::type::AirSampleActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::AirSampleActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airSampleCapabilityCommandType:
      dynamic_cast<asb_uci::type::AirSampleCapabilityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::AirSampleCapabilityCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airSampleCapabilityMDT:
      dynamic_cast<asb_uci::type::AirSampleCapabilityMDT&>(destination).copyImpl(dynamic_cast<const uci::type::AirSampleCapabilityMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airSampleCapabilityMT:
      dynamic_cast<asb_uci::type::AirSampleCapabilityMT&>(destination).copyImpl(dynamic_cast<const uci::type::AirSampleCapabilityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airSampleCapabilityStatusMDT:
      dynamic_cast<asb_uci::type::AirSampleCapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::AirSampleCapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airSampleCapabilityStatusMT:
      dynamic_cast<asb_uci::type::AirSampleCapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::AirSampleCapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airSampleCapabilityType:
      dynamic_cast<asb_uci::type::AirSampleCapabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::AirSampleCapabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::airSampleCommandMT:
      dynamic_cast<asb_uci::type::AirSampleCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::AirSampleCommandMT&>(source), false);
      return true;
      break;
    default:
      return false;
  }
}

} // namespace util

} // namespace asb_uci

