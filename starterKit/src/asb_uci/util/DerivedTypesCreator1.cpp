/** @file DerivedTypesCreator1.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCreator1.h"

#include <boost/smart_ptr/make_unique.hpp>

#include "asb_uci/type/ACO_FileTraceabilityType.h"
#include "asb_uci/type/ACO_TraceabilityType.h"
#include "asb_uci/type/ACTDF_FileTraceabilityType.h"
#include "asb_uci/type/ACTDF_TaskID_Type.h"
#include "asb_uci/type/ACTDF_TraceabilityType.h"
#include "asb_uci/type/AccessAssessmentID_Type.h"
#include "asb_uci/type/AccessAssessmentMT.h"
#include "asb_uci/type/AccessAssessmentRequestMDT.h"
#include "asb_uci/type/AccessAssessmentRequestMT.h"
#include "asb_uci/type/AccessAssessmentRequestStatusMDT.h"
#include "asb_uci/type/AccessAssessmentRequestStatusMT.h"
#include "asb_uci/type/AchievabilityAssessmentPET.h"
#include "asb_uci/type/AchievabilityAssessmentRequestPET.h"
#include "asb_uci/type/ActionActivityMT.h"
#include "asb_uci/type/ActionActivityType.h"
#include "asb_uci/type/ActionAllocationType.h"
#include "asb_uci/type/ActionCancelCommandMDT.h"
#include "asb_uci/type/ActionCancelCommandMT.h"
#include "asb_uci/type/ActionCancelCommandStatusMDT.h"
#include "asb_uci/type/ActionCancelCommandStatusMT.h"
#include "asb_uci/type/ActionCapabilityCommandType.h"
#include "asb_uci/type/ActionCapabilityMDT.h"
#include "asb_uci/type/ActionCapabilityMT.h"
#include "asb_uci/type/ActionCapabilityStatusMDT.h"
#include "asb_uci/type/ActionCapabilityStatusMT.h"
#include "asb_uci/type/ActionCapabilityType.h"
#include "asb_uci/type/ActionCommandMT.h"
#include "asb_uci/type/ActionCommandStatusMDT.h"
#include "asb_uci/type/ActionCommandStatusMT.h"
#include "asb_uci/type/ActionExecutionApprovalStatusMDT.h"
#include "asb_uci/type/ActionExecutionApprovalStatusMT.h"
#include "asb_uci/type/ActionID_Type.h"
#include "asb_uci/type/ActionMT.h"
#include "asb_uci/type/ActionPlanApprovalStatusMT.h"
#include "asb_uci/type/ActionPlanCommandID_Type.h"
#include "asb_uci/type/ActionPlanCommandMT.h"
#include "asb_uci/type/ActionPlanCommandStatusMT.h"
#include "asb_uci/type/ActionPlanExecutionStatusMT.h"
#include "asb_uci/type/ActionPlanID_Type.h"
#include "asb_uci/type/ActionPlanInputsType.h"
#include "asb_uci/type/ActionPlanMT.h"
#include "asb_uci/type/ActionPlanProcessDescriptionType.h"
#include "asb_uci/type/ActionPlanStatusMT.h"
#include "asb_uci/type/ActionPlanValidationCommandMDT.h"
#include "asb_uci/type/ActionPlanValidationCommandMT.h"
#include "asb_uci/type/ActionPlanValidationCommandStatusMDT.h"
#include "asb_uci/type/ActionPlanValidationCommandStatusMT.h"
#include "asb_uci/type/ActionPlanValidationID_Type.h"
#include "asb_uci/type/ActionPlanValidationInputsType.h"
#include "asb_uci/type/ActionPlanValidationMT.h"
#include "asb_uci/type/ActionPlanningResultType.h"
#include "asb_uci/type/ActionPlanningStatusMDT.h"
#include "asb_uci/type/ActionPlanningStatusMT.h"
#include "asb_uci/type/ActionStatusMDT.h"
#include "asb_uci/type/ActionStatusMT.h"
#include "asb_uci/type/ActivityBaseType.h"
#include "asb_uci/type/ActivityCommandBaseType.h"
#include "asb_uci/type/ActivityExecutionStatusType.h"
#include "asb_uci/type/ActivityID_Type.h"
#include "asb_uci/type/ActivityMetricsID_Type.h"
#include "asb_uci/type/ActivityMetricsMT.h"
#include "asb_uci/type/ActivityMetricsRequestMDT.h"
#include "asb_uci/type/ActivityMetricsRequestMT.h"
#include "asb_uci/type/ActivityMetricsRequestStatusMDT.h"
#include "asb_uci/type/ActivityMetricsRequestStatusMT.h"
#include "asb_uci/type/ActivityPlanApprovalStatusMT.h"
#include "asb_uci/type/ActivityPlanCommandID_Type.h"
#include "asb_uci/type/ActivityPlanCommandMT.h"
#include "asb_uci/type/ActivityPlanCommandStatusMT.h"
#include "asb_uci/type/ActivityPlanExecutionStatusMT.h"
#include "asb_uci/type/ActivityPlanID_Type.h"
#include "asb_uci/type/ActivityPlanInputsType.h"
#include "asb_uci/type/ActivityPlanMT.h"
#include "asb_uci/type/ActivityPlanPartsCommandType.h"
#include "asb_uci/type/ActivityPlanPartsType.h"
#include "asb_uci/type/ActivityPlanProcessDescriptionType.h"
#include "asb_uci/type/ActivityPlanStatusMT.h"
#include "asb_uci/type/ActivityPlanStatusType.h"
#include "asb_uci/type/ActivityPlanValidationCommandMDT.h"
#include "asb_uci/type/ActivityPlanValidationCommandMT.h"
#include "asb_uci/type/ActivityPlanValidationCommandStatusMDT.h"
#include "asb_uci/type/ActivityPlanValidationCommandStatusMT.h"
#include "asb_uci/type/ActivityPlanValidationID_Type.h"
#include "asb_uci/type/ActivityPlanValidationInputsType.h"
#include "asb_uci/type/ActivityPlanValidationMT.h"
#include "asb_uci/type/AirSampleActivityMT.h"
#include "asb_uci/type/AirSampleActivityType.h"
#include "asb_uci/type/AirSampleCapabilityCommandType.h"
#include "asb_uci/type/AirSampleCapabilityMDT.h"
#include "asb_uci/type/AirSampleCapabilityMT.h"
#include "asb_uci/type/AirSampleCapabilityStatusMDT.h"
#include "asb_uci/type/AirSampleCapabilityStatusMT.h"
#include "asb_uci/type/AirSampleCapabilityType.h"
#include "asb_uci/type/AirSampleCommandMT.h"
#include "asb_uci/type/AirfieldGeneralStoreType.h"
#include "asb_uci/type/AirfieldID_Type.h"
#include "asb_uci/type/AirfieldReportID_Type.h"
#include "asb_uci/type/AirfieldReportMT.h"
#include "asb_uci/type/AirfieldStoreType.h"
#include "asb_uci/type/AirfieldStoresPET.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

uci::base::Accessor* DerivedTypesCreator1::create(const uci::base::accessorType::AccessorType type) {
  switch (type) {
    case uci::type::accessorType::accessAssessmentID_Type:
      return boost::make_unique<asb_uci::type::AccessAssessmentID_Type>().release();
    case uci::type::accessorType::accessAssessmentMT:
      return boost::make_unique<asb_uci::type::AccessAssessmentMT>().release();
    case uci::type::accessorType::accessAssessmentRequestMDT:
      return boost::make_unique<asb_uci::type::AccessAssessmentRequestMDT>().release();
    case uci::type::accessorType::accessAssessmentRequestMT:
      return boost::make_unique<asb_uci::type::AccessAssessmentRequestMT>().release();
    case uci::type::accessorType::accessAssessmentRequestStatusMDT:
      return boost::make_unique<asb_uci::type::AccessAssessmentRequestStatusMDT>().release();
    case uci::type::accessorType::accessAssessmentRequestStatusMT:
      return boost::make_unique<asb_uci::type::AccessAssessmentRequestStatusMT>().release();
    case uci::type::accessorType::achievabilityAssessmentPET:
      return boost::make_unique<asb_uci::type::AchievabilityAssessmentPET>().release();
    case uci::type::accessorType::achievabilityAssessmentRequestPET:
      return boost::make_unique<asb_uci::type::AchievabilityAssessmentRequestPET>().release();
    case uci::type::accessorType::aCO_FileTraceabilityType:
      return boost::make_unique<asb_uci::type::ACO_FileTraceabilityType>().release();
    case uci::type::accessorType::aCO_TraceabilityType:
      return boost::make_unique<asb_uci::type::ACO_TraceabilityType>().release();
    case uci::type::accessorType::aCTDF_FileTraceabilityType:
      return boost::make_unique<asb_uci::type::ACTDF_FileTraceabilityType>().release();
    case uci::type::accessorType::aCTDF_TaskID_Type:
      return boost::make_unique<asb_uci::type::ACTDF_TaskID_Type>().release();
    case uci::type::accessorType::aCTDF_TraceabilityType:
      return boost::make_unique<asb_uci::type::ACTDF_TraceabilityType>().release();
    case uci::type::accessorType::actionActivityMT:
      return boost::make_unique<asb_uci::type::ActionActivityMT>().release();
    case uci::type::accessorType::actionActivityType:
      return boost::make_unique<asb_uci::type::ActionActivityType>().release();
    case uci::type::accessorType::actionAllocationType:
      return boost::make_unique<asb_uci::type::ActionAllocationType>().release();
    case uci::type::accessorType::actionCancelCommandMDT:
      return boost::make_unique<asb_uci::type::ActionCancelCommandMDT>().release();
    case uci::type::accessorType::actionCancelCommandMT:
      return boost::make_unique<asb_uci::type::ActionCancelCommandMT>().release();
    case uci::type::accessorType::actionCancelCommandStatusMDT:
      return boost::make_unique<asb_uci::type::ActionCancelCommandStatusMDT>().release();
    case uci::type::accessorType::actionCancelCommandStatusMT:
      return boost::make_unique<asb_uci::type::ActionCancelCommandStatusMT>().release();
    case uci::type::accessorType::actionCapabilityCommandType:
      return boost::make_unique<asb_uci::type::ActionCapabilityCommandType>().release();
    case uci::type::accessorType::actionCapabilityMDT:
      return boost::make_unique<asb_uci::type::ActionCapabilityMDT>().release();
    case uci::type::accessorType::actionCapabilityMT:
      return boost::make_unique<asb_uci::type::ActionCapabilityMT>().release();
    case uci::type::accessorType::actionCapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::ActionCapabilityStatusMDT>().release();
    case uci::type::accessorType::actionCapabilityStatusMT:
      return boost::make_unique<asb_uci::type::ActionCapabilityStatusMT>().release();
    case uci::type::accessorType::actionCapabilityType:
      return boost::make_unique<asb_uci::type::ActionCapabilityType>().release();
    case uci::type::accessorType::actionCommandMT:
      return boost::make_unique<asb_uci::type::ActionCommandMT>().release();
    case uci::type::accessorType::actionCommandStatusMDT:
      return boost::make_unique<asb_uci::type::ActionCommandStatusMDT>().release();
    case uci::type::accessorType::actionCommandStatusMT:
      return boost::make_unique<asb_uci::type::ActionCommandStatusMT>().release();
    case uci::type::accessorType::actionExecutionApprovalStatusMDT:
      return boost::make_unique<asb_uci::type::ActionExecutionApprovalStatusMDT>().release();
    case uci::type::accessorType::actionExecutionApprovalStatusMT:
      return boost::make_unique<asb_uci::type::ActionExecutionApprovalStatusMT>().release();
    case uci::type::accessorType::actionID_Type:
      return boost::make_unique<asb_uci::type::ActionID_Type>().release();
    case uci::type::accessorType::actionMT:
      return boost::make_unique<asb_uci::type::ActionMT>().release();
    case uci::type::accessorType::actionPlanApprovalStatusMT:
      return boost::make_unique<asb_uci::type::ActionPlanApprovalStatusMT>().release();
    case uci::type::accessorType::actionPlanCommandID_Type:
      return boost::make_unique<asb_uci::type::ActionPlanCommandID_Type>().release();
    case uci::type::accessorType::actionPlanCommandMT:
      return boost::make_unique<asb_uci::type::ActionPlanCommandMT>().release();
    case uci::type::accessorType::actionPlanCommandStatusMT:
      return boost::make_unique<asb_uci::type::ActionPlanCommandStatusMT>().release();
    case uci::type::accessorType::actionPlanExecutionStatusMT:
      return boost::make_unique<asb_uci::type::ActionPlanExecutionStatusMT>().release();
    case uci::type::accessorType::actionPlanID_Type:
      return boost::make_unique<asb_uci::type::ActionPlanID_Type>().release();
    case uci::type::accessorType::actionPlanInputsType:
      return boost::make_unique<asb_uci::type::ActionPlanInputsType>().release();
    case uci::type::accessorType::actionPlanMT:
      return boost::make_unique<asb_uci::type::ActionPlanMT>().release();
    case uci::type::accessorType::actionPlanningResultType:
      return boost::make_unique<asb_uci::type::ActionPlanningResultType>().release();
    case uci::type::accessorType::actionPlanningStatusMDT:
      return boost::make_unique<asb_uci::type::ActionPlanningStatusMDT>().release();
    case uci::type::accessorType::actionPlanningStatusMT:
      return boost::make_unique<asb_uci::type::ActionPlanningStatusMT>().release();
    case uci::type::accessorType::actionPlanProcessDescriptionType:
      return boost::make_unique<asb_uci::type::ActionPlanProcessDescriptionType>().release();
    case uci::type::accessorType::actionPlanStatusMT:
      return boost::make_unique<asb_uci::type::ActionPlanStatusMT>().release();
    case uci::type::accessorType::actionPlanValidationCommandMDT:
      return boost::make_unique<asb_uci::type::ActionPlanValidationCommandMDT>().release();
    case uci::type::accessorType::actionPlanValidationCommandMT:
      return boost::make_unique<asb_uci::type::ActionPlanValidationCommandMT>().release();
    case uci::type::accessorType::actionPlanValidationCommandStatusMDT:
      return boost::make_unique<asb_uci::type::ActionPlanValidationCommandStatusMDT>().release();
    case uci::type::accessorType::actionPlanValidationCommandStatusMT:
      return boost::make_unique<asb_uci::type::ActionPlanValidationCommandStatusMT>().release();
    case uci::type::accessorType::actionPlanValidationID_Type:
      return boost::make_unique<asb_uci::type::ActionPlanValidationID_Type>().release();
    case uci::type::accessorType::actionPlanValidationInputsType:
      return boost::make_unique<asb_uci::type::ActionPlanValidationInputsType>().release();
    case uci::type::accessorType::actionPlanValidationMT:
      return boost::make_unique<asb_uci::type::ActionPlanValidationMT>().release();
    case uci::type::accessorType::actionStatusMDT:
      return boost::make_unique<asb_uci::type::ActionStatusMDT>().release();
    case uci::type::accessorType::actionStatusMT:
      return boost::make_unique<asb_uci::type::ActionStatusMT>().release();
    case uci::type::accessorType::activityBaseType:
      return boost::make_unique<asb_uci::type::ActivityBaseType>().release();
    case uci::type::accessorType::activityCommandBaseType:
      return boost::make_unique<asb_uci::type::ActivityCommandBaseType>().release();
    case uci::type::accessorType::activityExecutionStatusType:
      return boost::make_unique<asb_uci::type::ActivityExecutionStatusType>().release();
    case uci::type::accessorType::activityID_Type:
      return boost::make_unique<asb_uci::type::ActivityID_Type>().release();
    case uci::type::accessorType::activityMetricsID_Type:
      return boost::make_unique<asb_uci::type::ActivityMetricsID_Type>().release();
    case uci::type::accessorType::activityMetricsMT:
      return boost::make_unique<asb_uci::type::ActivityMetricsMT>().release();
    case uci::type::accessorType::activityMetricsRequestMDT:
      return boost::make_unique<asb_uci::type::ActivityMetricsRequestMDT>().release();
    case uci::type::accessorType::activityMetricsRequestMT:
      return boost::make_unique<asb_uci::type::ActivityMetricsRequestMT>().release();
    case uci::type::accessorType::activityMetricsRequestStatusMDT:
      return boost::make_unique<asb_uci::type::ActivityMetricsRequestStatusMDT>().release();
    case uci::type::accessorType::activityMetricsRequestStatusMT:
      return boost::make_unique<asb_uci::type::ActivityMetricsRequestStatusMT>().release();
    case uci::type::accessorType::activityPlanApprovalStatusMT:
      return boost::make_unique<asb_uci::type::ActivityPlanApprovalStatusMT>().release();
    case uci::type::accessorType::activityPlanCommandID_Type:
      return boost::make_unique<asb_uci::type::ActivityPlanCommandID_Type>().release();
    case uci::type::accessorType::activityPlanCommandMT:
      return boost::make_unique<asb_uci::type::ActivityPlanCommandMT>().release();
    case uci::type::accessorType::activityPlanCommandStatusMT:
      return boost::make_unique<asb_uci::type::ActivityPlanCommandStatusMT>().release();
    case uci::type::accessorType::activityPlanExecutionStatusMT:
      return boost::make_unique<asb_uci::type::ActivityPlanExecutionStatusMT>().release();
    case uci::type::accessorType::activityPlanID_Type:
      return boost::make_unique<asb_uci::type::ActivityPlanID_Type>().release();
    case uci::type::accessorType::activityPlanInputsType:
      return boost::make_unique<asb_uci::type::ActivityPlanInputsType>().release();
    case uci::type::accessorType::activityPlanMT:
      return boost::make_unique<asb_uci::type::ActivityPlanMT>().release();
    case uci::type::accessorType::activityPlanPartsCommandType:
      return boost::make_unique<asb_uci::type::ActivityPlanPartsCommandType>().release();
    case uci::type::accessorType::activityPlanPartsType:
      return boost::make_unique<asb_uci::type::ActivityPlanPartsType>().release();
    case uci::type::accessorType::activityPlanProcessDescriptionType:
      return boost::make_unique<asb_uci::type::ActivityPlanProcessDescriptionType>().release();
    case uci::type::accessorType::activityPlanStatusMT:
      return boost::make_unique<asb_uci::type::ActivityPlanStatusMT>().release();
    case uci::type::accessorType::activityPlanStatusType:
      return boost::make_unique<asb_uci::type::ActivityPlanStatusType>().release();
    case uci::type::accessorType::activityPlanValidationCommandMDT:
      return boost::make_unique<asb_uci::type::ActivityPlanValidationCommandMDT>().release();
    case uci::type::accessorType::activityPlanValidationCommandMT:
      return boost::make_unique<asb_uci::type::ActivityPlanValidationCommandMT>().release();
    case uci::type::accessorType::activityPlanValidationCommandStatusMDT:
      return boost::make_unique<asb_uci::type::ActivityPlanValidationCommandStatusMDT>().release();
    case uci::type::accessorType::activityPlanValidationCommandStatusMT:
      return boost::make_unique<asb_uci::type::ActivityPlanValidationCommandStatusMT>().release();
    case uci::type::accessorType::activityPlanValidationID_Type:
      return boost::make_unique<asb_uci::type::ActivityPlanValidationID_Type>().release();
    case uci::type::accessorType::activityPlanValidationInputsType:
      return boost::make_unique<asb_uci::type::ActivityPlanValidationInputsType>().release();
    case uci::type::accessorType::activityPlanValidationMT:
      return boost::make_unique<asb_uci::type::ActivityPlanValidationMT>().release();
    case uci::type::accessorType::airfieldGeneralStoreType:
      return boost::make_unique<asb_uci::type::AirfieldGeneralStoreType>().release();
    case uci::type::accessorType::airfieldID_Type:
      return boost::make_unique<asb_uci::type::AirfieldID_Type>().release();
    case uci::type::accessorType::airfieldReportID_Type:
      return boost::make_unique<asb_uci::type::AirfieldReportID_Type>().release();
    case uci::type::accessorType::airfieldReportMT:
      return boost::make_unique<asb_uci::type::AirfieldReportMT>().release();
    case uci::type::accessorType::airfieldStoresPET:
      return boost::make_unique<asb_uci::type::AirfieldStoresPET>().release();
    case uci::type::accessorType::airfieldStoreType:
      return boost::make_unique<asb_uci::type::AirfieldStoreType>().release();
    case uci::type::accessorType::airSampleActivityMT:
      return boost::make_unique<asb_uci::type::AirSampleActivityMT>().release();
    case uci::type::accessorType::airSampleActivityType:
      return boost::make_unique<asb_uci::type::AirSampleActivityType>().release();
    case uci::type::accessorType::airSampleCapabilityCommandType:
      return boost::make_unique<asb_uci::type::AirSampleCapabilityCommandType>().release();
    case uci::type::accessorType::airSampleCapabilityMDT:
      return boost::make_unique<asb_uci::type::AirSampleCapabilityMDT>().release();
    case uci::type::accessorType::airSampleCapabilityMT:
      return boost::make_unique<asb_uci::type::AirSampleCapabilityMT>().release();
    case uci::type::accessorType::airSampleCapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::AirSampleCapabilityStatusMDT>().release();
    case uci::type::accessorType::airSampleCapabilityStatusMT:
      return boost::make_unique<asb_uci::type::AirSampleCapabilityStatusMT>().release();
    case uci::type::accessorType::airSampleCapabilityType:
      return boost::make_unique<asb_uci::type::AirSampleCapabilityType>().release();
    case uci::type::accessorType::airSampleCommandMT:
      return boost::make_unique<asb_uci::type::AirSampleCommandMT>().release();
    default:
      return nullptr;
  }
}

} // namespace util

} // namespace asb_uci

