/** @file DerivedTypesCopier8.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCopier8.h"

#include "asb_uci/type/EOB_CorrelationRecordID_Type.h"
#include "asb_uci/type/EOB_CorrelationRecordMDT.h"
#include "asb_uci/type/EOB_CorrelationRecordMT.h"
#include "asb_uci/type/EOB_EmitterID_Type.h"
#include "asb_uci/type/EOB_EmitterModeID_Type.h"
#include "asb_uci/type/EOB_EmitterModeType.h"
#include "asb_uci/type/EOB_EmitterType.h"
#include "asb_uci/type/EOB_EquipmentIdentityType.h"
#include "asb_uci/type/EOB_EquipmentRecordType.h"
#include "asb_uci/type/EOB_EquipmentType.h"
#include "asb_uci/type/EOB_FixedPositionType.h"
#include "asb_uci/type/EOB_IdentityBaseType.h"
#include "asb_uci/type/EOB_RecordID_Type.h"
#include "asb_uci/type/EOB_RecordMarkedType.h"
#include "asb_uci/type/EOB_SignalType.h"
#include "asb_uci/type/EOB_SiteIdentityType.h"
#include "asb_uci/type/EOB_SitePIN_Type.h"
#include "asb_uci/type/ESM_ActivityCommandType.h"
#include "asb_uci/type/ESM_ActivityMT.h"
#include "asb_uci/type/ESM_ActivityType.h"
#include "asb_uci/type/ESM_CapabilityCommandType.h"
#include "asb_uci/type/ESM_CapabilityMDT.h"
#include "asb_uci/type/ESM_CapabilityMT.h"
#include "asb_uci/type/ESM_CapabilityStatusMDT.h"
#include "asb_uci/type/ESM_CapabilityStatusMT.h"
#include "asb_uci/type/ESM_CapabilityType.h"
#include "asb_uci/type/ESM_CommandMT.h"
#include "asb_uci/type/ESM_CommandStatusMDT.h"
#include "asb_uci/type/ESM_CommandStatusMT.h"
#include "asb_uci/type/ESM_ConsentRequestMT.h"
#include "asb_uci/type/ESM_ConsentRequestStatusMDT.h"
#include "asb_uci/type/ESM_ConsentRequestStatusMT.h"
#include "asb_uci/type/ESM_ConsentRequestType.h"
#include "asb_uci/type/ESM_SettingsCommandMDT.h"
#include "asb_uci/type/ESM_SettingsCommandMT.h"
#include "asb_uci/type/ESM_SettingsCommandStatusMDT.h"
#include "asb_uci/type/ESM_SettingsCommandStatusMT.h"
#include "asb_uci/type/ESM_TaskBaseType.h"
#include "asb_uci/type/ESM_TaskType.h"
#include "asb_uci/type/EW_ConfigurationID_Type.h"
#include "asb_uci/type/EW_ConfigurationMT.h"
#include "asb_uci/type/EW_CoordinationDataLinkIdentifierType.h"
#include "asb_uci/type/EW_IndexNumberDataLinkIdentifierType.h"
#include "asb_uci/type/ExecutionPlanSetBaseType.h"
#include "asb_uci/type/ExecutionPlanSetID_Type.h"
#include "asb_uci/type/ExecutionSequenceInsertionType.h"
#include "asb_uci/type/ExecutionSequencePlanSetsType.h"
#include "asb_uci/type/ExecutionSequenceType.h"
#include "asb_uci/type/ExternalDataRequestMDT.h"
#include "asb_uci/type/ExternalDataRequestMT.h"
#include "asb_uci/type/ExternalDataRequestStatusMDT.h"
#include "asb_uci/type/ExternalDataRequestStatusMT.h"
#include "asb_uci/type/ExternalRequestedDataID_Type.h"
#include "asb_uci/type/FOV_ActivityType.h"
#include "asb_uci/type/FOV_Type.h"
#include "asb_uci/type/FOV_VolumeType.h"
#include "asb_uci/type/FaultID_Type.h"
#include "asb_uci/type/FaultMDT.h"
#include "asb_uci/type/FaultMT.h"
#include "asb_uci/type/FileLocationID_Type.h"
#include "asb_uci/type/FileLocationMDT.h"
#include "asb_uci/type/FileLocationMT.h"
#include "asb_uci/type/FileMetadataID_Type.h"
#include "asb_uci/type/FileMetadataMDT.h"
#include "asb_uci/type/FileMetadataMT.h"
#include "asb_uci/type/FilterID_Type.h"
#include "asb_uci/type/FixedPositionType.h"
#include "asb_uci/type/FlightActivityMT.h"
#include "asb_uci/type/FlightActivityType.h"
#include "asb_uci/type/FlightCapabilityMDT.h"
#include "asb_uci/type/FlightCapabilityMT.h"
#include "asb_uci/type/FlightCapabilityStatusMDT.h"
#include "asb_uci/type/FlightCapabilityStatusMT.h"
#include "asb_uci/type/FlightCapabilityType.h"
#include "asb_uci/type/FlightTaskBaseType.h"
#include "asb_uci/type/FlightTaskType.h"
#include "asb_uci/type/FloatMinMaxType.h"
#include "asb_uci/type/ForeignKeyMapDRL.h"
#include "asb_uci/type/ForeignKeyMapID_Type.h"
#include "asb_uci/type/ForeignKeyMapMDT.h"
#include "asb_uci/type/ForeignKeyMapML.h"
#include "asb_uci/type/ForeignKeyMapMT.h"
#include "asb_uci/type/ForeignKeyPairDRLE.h"
#include "asb_uci/type/ForeignKeyPairID_Type.h"
#include "asb_uci/type/ForeignKeyPairMDT.h"
#include "asb_uci/type/ForeignKeyPairMT.h"
#include "asb_uci/type/ForeignKeyType.h"
#include "asb_uci/type/FrequencyDataBaseType.h"
#include "asb_uci/type/FrequencyDataType.h"
#include "asb_uci/type/FuelSubsystemExtendedStatusType.h"
#include "asb_uci/type/FuelTankComponentExtendedStatusType.h"
#include "asb_uci/type/FunctionID_Type.h"
#include "asb_uci/type/FunctionalDamageConfidenceType.h"
#include "asb_uci/type/FunctionalDamageProbabilityType.h"
#include "asb_uci/type/FusionSettingsMT.h"
#include "asb_uci/type/FusionSettingsRequestMDT.h"
#include "asb_uci/type/FusionSettingsRequestMT.h"
#include "asb_uci/type/FusionSettingsRequestStatusMDT.h"
#include "asb_uci/type/FusionSettingsRequestStatusMT.h"
#include "asb_uci/type/GatewayActivityCommandType.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"
#include "uci/type/EOB_CorrelationRecordID_Type.h"
#include "uci/type/EOB_CorrelationRecordMDT.h"
#include "uci/type/EOB_CorrelationRecordMT.h"
#include "uci/type/EOB_EmitterID_Type.h"
#include "uci/type/EOB_EmitterModeID_Type.h"
#include "uci/type/EOB_EmitterModeType.h"
#include "uci/type/EOB_EmitterType.h"
#include "uci/type/EOB_EquipmentIdentityType.h"
#include "uci/type/EOB_EquipmentRecordType.h"
#include "uci/type/EOB_EquipmentType.h"
#include "uci/type/EOB_FixedPositionType.h"
#include "uci/type/EOB_IdentityBaseType.h"
#include "uci/type/EOB_RecordID_Type.h"
#include "uci/type/EOB_RecordMarkedType.h"
#include "uci/type/EOB_SignalType.h"
#include "uci/type/EOB_SiteIdentityType.h"
#include "uci/type/EOB_SitePIN_Type.h"
#include "uci/type/ESM_ActivityCommandType.h"
#include "uci/type/ESM_ActivityMT.h"
#include "uci/type/ESM_ActivityType.h"
#include "uci/type/ESM_CapabilityCommandType.h"
#include "uci/type/ESM_CapabilityMDT.h"
#include "uci/type/ESM_CapabilityMT.h"
#include "uci/type/ESM_CapabilityStatusMDT.h"
#include "uci/type/ESM_CapabilityStatusMT.h"
#include "uci/type/ESM_CapabilityType.h"
#include "uci/type/ESM_CommandMT.h"
#include "uci/type/ESM_CommandStatusMDT.h"
#include "uci/type/ESM_CommandStatusMT.h"
#include "uci/type/ESM_ConsentRequestMT.h"
#include "uci/type/ESM_ConsentRequestStatusMDT.h"
#include "uci/type/ESM_ConsentRequestStatusMT.h"
#include "uci/type/ESM_ConsentRequestType.h"
#include "uci/type/ESM_SettingsCommandMDT.h"
#include "uci/type/ESM_SettingsCommandMT.h"
#include "uci/type/ESM_SettingsCommandStatusMDT.h"
#include "uci/type/ESM_SettingsCommandStatusMT.h"
#include "uci/type/ESM_TaskBaseType.h"
#include "uci/type/ESM_TaskType.h"
#include "uci/type/EW_ConfigurationID_Type.h"
#include "uci/type/EW_ConfigurationMT.h"
#include "uci/type/EW_CoordinationDataLinkIdentifierType.h"
#include "uci/type/EW_IndexNumberDataLinkIdentifierType.h"
#include "uci/type/ExecutionPlanSetBaseType.h"
#include "uci/type/ExecutionPlanSetID_Type.h"
#include "uci/type/ExecutionSequenceInsertionType.h"
#include "uci/type/ExecutionSequencePlanSetsType.h"
#include "uci/type/ExecutionSequenceType.h"
#include "uci/type/ExternalDataRequestMDT.h"
#include "uci/type/ExternalDataRequestMT.h"
#include "uci/type/ExternalDataRequestStatusMDT.h"
#include "uci/type/ExternalDataRequestStatusMT.h"
#include "uci/type/ExternalRequestedDataID_Type.h"
#include "uci/type/FOV_ActivityType.h"
#include "uci/type/FOV_Type.h"
#include "uci/type/FOV_VolumeType.h"
#include "uci/type/FaultID_Type.h"
#include "uci/type/FaultMDT.h"
#include "uci/type/FaultMT.h"
#include "uci/type/FileLocationID_Type.h"
#include "uci/type/FileLocationMDT.h"
#include "uci/type/FileLocationMT.h"
#include "uci/type/FileMetadataID_Type.h"
#include "uci/type/FileMetadataMDT.h"
#include "uci/type/FileMetadataMT.h"
#include "uci/type/FilterID_Type.h"
#include "uci/type/FixedPositionType.h"
#include "uci/type/FlightActivityMT.h"
#include "uci/type/FlightActivityType.h"
#include "uci/type/FlightCapabilityMDT.h"
#include "uci/type/FlightCapabilityMT.h"
#include "uci/type/FlightCapabilityStatusMDT.h"
#include "uci/type/FlightCapabilityStatusMT.h"
#include "uci/type/FlightCapabilityType.h"
#include "uci/type/FlightTaskBaseType.h"
#include "uci/type/FlightTaskType.h"
#include "uci/type/FloatMinMaxType.h"
#include "uci/type/ForeignKeyMapDRL.h"
#include "uci/type/ForeignKeyMapID_Type.h"
#include "uci/type/ForeignKeyMapMDT.h"
#include "uci/type/ForeignKeyMapML.h"
#include "uci/type/ForeignKeyMapMT.h"
#include "uci/type/ForeignKeyPairDRLE.h"
#include "uci/type/ForeignKeyPairID_Type.h"
#include "uci/type/ForeignKeyPairMDT.h"
#include "uci/type/ForeignKeyPairMT.h"
#include "uci/type/ForeignKeyType.h"
#include "uci/type/FrequencyDataBaseType.h"
#include "uci/type/FrequencyDataType.h"
#include "uci/type/FuelSubsystemExtendedStatusType.h"
#include "uci/type/FuelTankComponentExtendedStatusType.h"
#include "uci/type/FunctionID_Type.h"
#include "uci/type/FunctionalDamageConfidenceType.h"
#include "uci/type/FunctionalDamageProbabilityType.h"
#include "uci/type/FusionSettingsMT.h"
#include "uci/type/FusionSettingsRequestMDT.h"
#include "uci/type/FusionSettingsRequestMT.h"
#include "uci/type/FusionSettingsRequestStatusMDT.h"
#include "uci/type/FusionSettingsRequestStatusMT.h"
#include "uci/type/GatewayActivityCommandType.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

bool DerivedTypesCopier8::copy(const uci::base::Accessor& source, uci::base::Accessor& destination) {
  switch (source.getAccessorType()) {
    case uci::type::accessorType::eOB_CorrelationRecordID_Type:
      dynamic_cast<asb_uci::type::EOB_CorrelationRecordID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_CorrelationRecordID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_CorrelationRecordMDT:
      dynamic_cast<asb_uci::type::EOB_CorrelationRecordMDT&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_CorrelationRecordMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_CorrelationRecordMT:
      dynamic_cast<asb_uci::type::EOB_CorrelationRecordMT&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_CorrelationRecordMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_EmitterID_Type:
      dynamic_cast<asb_uci::type::EOB_EmitterID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_EmitterID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_EmitterModeID_Type:
      dynamic_cast<asb_uci::type::EOB_EmitterModeID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_EmitterModeID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_EmitterModeType:
      dynamic_cast<asb_uci::type::EOB_EmitterModeType&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_EmitterModeType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_EmitterType:
      dynamic_cast<asb_uci::type::EOB_EmitterType&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_EmitterType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_EquipmentIdentityType:
      dynamic_cast<asb_uci::type::EOB_EquipmentIdentityType&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_EquipmentIdentityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_EquipmentRecordType:
      dynamic_cast<asb_uci::type::EOB_EquipmentRecordType&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_EquipmentRecordType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_EquipmentType:
      dynamic_cast<asb_uci::type::EOB_EquipmentType&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_EquipmentType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_FixedPositionType:
      dynamic_cast<asb_uci::type::EOB_FixedPositionType&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_FixedPositionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_IdentityBaseType:
      dynamic_cast<asb_uci::type::EOB_IdentityBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_IdentityBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_RecordID_Type:
      dynamic_cast<asb_uci::type::EOB_RecordID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_RecordID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_RecordMarkedType:
      dynamic_cast<asb_uci::type::EOB_RecordMarkedType&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_RecordMarkedType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_SignalType:
      dynamic_cast<asb_uci::type::EOB_SignalType&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_SignalType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_SiteIdentityType:
      dynamic_cast<asb_uci::type::EOB_SiteIdentityType&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_SiteIdentityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eOB_SitePIN_Type:
      dynamic_cast<asb_uci::type::EOB_SitePIN_Type&>(destination).copyImpl(dynamic_cast<const uci::type::EOB_SitePIN_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_ActivityCommandType:
      dynamic_cast<asb_uci::type::ESM_ActivityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_ActivityCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_ActivityMT:
      dynamic_cast<asb_uci::type::ESM_ActivityMT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_ActivityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_ActivityType:
      dynamic_cast<asb_uci::type::ESM_ActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_ActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_CapabilityCommandType:
      dynamic_cast<asb_uci::type::ESM_CapabilityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_CapabilityCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_CapabilityMDT:
      dynamic_cast<asb_uci::type::ESM_CapabilityMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_CapabilityMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_CapabilityMT:
      dynamic_cast<asb_uci::type::ESM_CapabilityMT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_CapabilityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_CapabilityStatusMDT:
      dynamic_cast<asb_uci::type::ESM_CapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_CapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_CapabilityStatusMT:
      dynamic_cast<asb_uci::type::ESM_CapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_CapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_CapabilityType:
      dynamic_cast<asb_uci::type::ESM_CapabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_CapabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_CommandMT:
      dynamic_cast<asb_uci::type::ESM_CommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_CommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_CommandStatusMDT:
      dynamic_cast<asb_uci::type::ESM_CommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_CommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_CommandStatusMT:
      dynamic_cast<asb_uci::type::ESM_CommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_CommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_ConsentRequestMT:
      dynamic_cast<asb_uci::type::ESM_ConsentRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_ConsentRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_ConsentRequestStatusMDT:
      dynamic_cast<asb_uci::type::ESM_ConsentRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_ConsentRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_ConsentRequestStatusMT:
      dynamic_cast<asb_uci::type::ESM_ConsentRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_ConsentRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_ConsentRequestType:
      dynamic_cast<asb_uci::type::ESM_ConsentRequestType&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_ConsentRequestType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_SettingsCommandMDT:
      dynamic_cast<asb_uci::type::ESM_SettingsCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_SettingsCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_SettingsCommandMT:
      dynamic_cast<asb_uci::type::ESM_SettingsCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_SettingsCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_SettingsCommandStatusMDT:
      dynamic_cast<asb_uci::type::ESM_SettingsCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_SettingsCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_SettingsCommandStatusMT:
      dynamic_cast<asb_uci::type::ESM_SettingsCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_SettingsCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_TaskBaseType:
      dynamic_cast<asb_uci::type::ESM_TaskBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_TaskBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eSM_TaskType:
      dynamic_cast<asb_uci::type::ESM_TaskType&>(destination).copyImpl(dynamic_cast<const uci::type::ESM_TaskType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eW_ConfigurationID_Type:
      dynamic_cast<asb_uci::type::EW_ConfigurationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::EW_ConfigurationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eW_ConfigurationMT:
      dynamic_cast<asb_uci::type::EW_ConfigurationMT&>(destination).copyImpl(dynamic_cast<const uci::type::EW_ConfigurationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eW_CoordinationDataLinkIdentifierType:
      dynamic_cast<asb_uci::type::EW_CoordinationDataLinkIdentifierType&>(destination).copyImpl(dynamic_cast<const uci::type::EW_CoordinationDataLinkIdentifierType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::eW_IndexNumberDataLinkIdentifierType:
      dynamic_cast<asb_uci::type::EW_IndexNumberDataLinkIdentifierType&>(destination).copyImpl(dynamic_cast<const uci::type::EW_IndexNumberDataLinkIdentifierType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::executionPlanSetBaseType:
      dynamic_cast<asb_uci::type::ExecutionPlanSetBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::ExecutionPlanSetBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::executionPlanSetID_Type:
      dynamic_cast<asb_uci::type::ExecutionPlanSetID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ExecutionPlanSetID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::executionSequenceInsertionType:
      dynamic_cast<asb_uci::type::ExecutionSequenceInsertionType&>(destination).copyImpl(dynamic_cast<const uci::type::ExecutionSequenceInsertionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::executionSequencePlanSetsType:
      dynamic_cast<asb_uci::type::ExecutionSequencePlanSetsType&>(destination).copyImpl(dynamic_cast<const uci::type::ExecutionSequencePlanSetsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::executionSequenceType:
      dynamic_cast<asb_uci::type::ExecutionSequenceType&>(destination).copyImpl(dynamic_cast<const uci::type::ExecutionSequenceType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::externalDataRequestMDT:
      dynamic_cast<asb_uci::type::ExternalDataRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ExternalDataRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::externalDataRequestMT:
      dynamic_cast<asb_uci::type::ExternalDataRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::ExternalDataRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::externalDataRequestStatusMDT:
      dynamic_cast<asb_uci::type::ExternalDataRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ExternalDataRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::externalDataRequestStatusMT:
      dynamic_cast<asb_uci::type::ExternalDataRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ExternalDataRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::externalRequestedDataID_Type:
      dynamic_cast<asb_uci::type::ExternalRequestedDataID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ExternalRequestedDataID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::faultID_Type:
      dynamic_cast<asb_uci::type::FaultID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::FaultID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::faultMDT:
      dynamic_cast<asb_uci::type::FaultMDT&>(destination).copyImpl(dynamic_cast<const uci::type::FaultMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::faultMT:
      dynamic_cast<asb_uci::type::FaultMT&>(destination).copyImpl(dynamic_cast<const uci::type::FaultMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fileLocationID_Type:
      dynamic_cast<asb_uci::type::FileLocationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::FileLocationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fileLocationMDT:
      dynamic_cast<asb_uci::type::FileLocationMDT&>(destination).copyImpl(dynamic_cast<const uci::type::FileLocationMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fileLocationMT:
      dynamic_cast<asb_uci::type::FileLocationMT&>(destination).copyImpl(dynamic_cast<const uci::type::FileLocationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fileMetadataID_Type:
      dynamic_cast<asb_uci::type::FileMetadataID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::FileMetadataID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fileMetadataMDT:
      dynamic_cast<asb_uci::type::FileMetadataMDT&>(destination).copyImpl(dynamic_cast<const uci::type::FileMetadataMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fileMetadataMT:
      dynamic_cast<asb_uci::type::FileMetadataMT&>(destination).copyImpl(dynamic_cast<const uci::type::FileMetadataMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::filterID_Type:
      dynamic_cast<asb_uci::type::FilterID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::FilterID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fixedPositionType:
      dynamic_cast<asb_uci::type::FixedPositionType&>(destination).copyImpl(dynamic_cast<const uci::type::FixedPositionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::flightActivityMT:
      dynamic_cast<asb_uci::type::FlightActivityMT&>(destination).copyImpl(dynamic_cast<const uci::type::FlightActivityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::flightActivityType:
      dynamic_cast<asb_uci::type::FlightActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::FlightActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::flightCapabilityMDT:
      dynamic_cast<asb_uci::type::FlightCapabilityMDT&>(destination).copyImpl(dynamic_cast<const uci::type::FlightCapabilityMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::flightCapabilityMT:
      dynamic_cast<asb_uci::type::FlightCapabilityMT&>(destination).copyImpl(dynamic_cast<const uci::type::FlightCapabilityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::flightCapabilityStatusMDT:
      dynamic_cast<asb_uci::type::FlightCapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::FlightCapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::flightCapabilityStatusMT:
      dynamic_cast<asb_uci::type::FlightCapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::FlightCapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::flightCapabilityType:
      dynamic_cast<asb_uci::type::FlightCapabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::FlightCapabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::flightTaskBaseType:
      dynamic_cast<asb_uci::type::FlightTaskBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::FlightTaskBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::flightTaskType:
      dynamic_cast<asb_uci::type::FlightTaskType&>(destination).copyImpl(dynamic_cast<const uci::type::FlightTaskType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::floatMinMaxType:
      dynamic_cast<asb_uci::type::FloatMinMaxType&>(destination).copyImpl(dynamic_cast<const uci::type::FloatMinMaxType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::foreignKeyMapDRL:
      dynamic_cast<asb_uci::type::ForeignKeyMapDRL&>(destination).copyImpl(dynamic_cast<const uci::type::ForeignKeyMapDRL&>(source), false);
      return true;
      break;
    case uci::type::accessorType::foreignKeyMapID_Type:
      dynamic_cast<asb_uci::type::ForeignKeyMapID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ForeignKeyMapID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::foreignKeyMapMDT:
      dynamic_cast<asb_uci::type::ForeignKeyMapMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ForeignKeyMapMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::foreignKeyMapML:
      dynamic_cast<asb_uci::type::ForeignKeyMapML&>(destination).copyImpl(dynamic_cast<const uci::type::ForeignKeyMapML&>(source), false);
      return true;
      break;
    case uci::type::accessorType::foreignKeyMapMT:
      dynamic_cast<asb_uci::type::ForeignKeyMapMT&>(destination).copyImpl(dynamic_cast<const uci::type::ForeignKeyMapMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::foreignKeyPairDRLE:
      dynamic_cast<asb_uci::type::ForeignKeyPairDRLE&>(destination).copyImpl(dynamic_cast<const uci::type::ForeignKeyPairDRLE&>(source), false);
      return true;
      break;
    case uci::type::accessorType::foreignKeyPairID_Type:
      dynamic_cast<asb_uci::type::ForeignKeyPairID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ForeignKeyPairID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::foreignKeyPairMDT:
      dynamic_cast<asb_uci::type::ForeignKeyPairMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ForeignKeyPairMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::foreignKeyPairMT:
      dynamic_cast<asb_uci::type::ForeignKeyPairMT&>(destination).copyImpl(dynamic_cast<const uci::type::ForeignKeyPairMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::foreignKeyType:
      dynamic_cast<asb_uci::type::ForeignKeyType&>(destination).copyImpl(dynamic_cast<const uci::type::ForeignKeyType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fOV_ActivityType:
      dynamic_cast<asb_uci::type::FOV_ActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::FOV_ActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fOV_Type:
      dynamic_cast<asb_uci::type::FOV_Type&>(destination).copyImpl(dynamic_cast<const uci::type::FOV_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fOV_VolumeType:
      dynamic_cast<asb_uci::type::FOV_VolumeType&>(destination).copyImpl(dynamic_cast<const uci::type::FOV_VolumeType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::frequencyDataBaseType:
      dynamic_cast<asb_uci::type::FrequencyDataBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::FrequencyDataBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::frequencyDataType:
      dynamic_cast<asb_uci::type::FrequencyDataType&>(destination).copyImpl(dynamic_cast<const uci::type::FrequencyDataType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fuelSubsystemExtendedStatusType:
      dynamic_cast<asb_uci::type::FuelSubsystemExtendedStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::FuelSubsystemExtendedStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fuelTankComponentExtendedStatusType:
      dynamic_cast<asb_uci::type::FuelTankComponentExtendedStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::FuelTankComponentExtendedStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::functionalDamageConfidenceType:
      dynamic_cast<asb_uci::type::FunctionalDamageConfidenceType&>(destination).copyImpl(dynamic_cast<const uci::type::FunctionalDamageConfidenceType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::functionalDamageProbabilityType:
      dynamic_cast<asb_uci::type::FunctionalDamageProbabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::FunctionalDamageProbabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::functionID_Type:
      dynamic_cast<asb_uci::type::FunctionID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::FunctionID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fusionSettingsMT:
      dynamic_cast<asb_uci::type::FusionSettingsMT&>(destination).copyImpl(dynamic_cast<const uci::type::FusionSettingsMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fusionSettingsRequestMDT:
      dynamic_cast<asb_uci::type::FusionSettingsRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::FusionSettingsRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fusionSettingsRequestMT:
      dynamic_cast<asb_uci::type::FusionSettingsRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::FusionSettingsRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fusionSettingsRequestStatusMDT:
      dynamic_cast<asb_uci::type::FusionSettingsRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::FusionSettingsRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::fusionSettingsRequestStatusMT:
      dynamic_cast<asb_uci::type::FusionSettingsRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::FusionSettingsRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::gatewayActivityCommandType:
      dynamic_cast<asb_uci::type::GatewayActivityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::GatewayActivityCommandType&>(source), false);
      return true;
      break;
    default:
      return false;
  }
}

} // namespace util

} // namespace asb_uci

