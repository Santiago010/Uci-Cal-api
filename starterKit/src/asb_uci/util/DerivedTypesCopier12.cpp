/** @file DerivedTypesCopier12.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCopier12.h"

#include "asb_uci/type/OrbitChangeActivityMT.h"
#include "asb_uci/type/OrbitChangeActivityType.h"
#include "asb_uci/type/OrbitChangeCapabilityMDT.h"
#include "asb_uci/type/OrbitChangeCapabilityMT.h"
#include "asb_uci/type/OrbitChangeCapabilityStatusMDT.h"
#include "asb_uci/type/OrbitChangeCapabilityStatusMT.h"
#include "asb_uci/type/OrbitChangeCapabilityType.h"
#include "asb_uci/type/OrbitChangeTaskBaseType.h"
#include "asb_uci/type/OrbitChangeTaskType.h"
#include "asb_uci/type/OrbitConjunctionAssessmentID_Type.h"
#include "asb_uci/type/OrbitConjunctionAssessmentMT.h"
#include "asb_uci/type/OrbitConjunctionAssessmentRequestMDT.h"
#include "asb_uci/type/OrbitConjunctionAssessmentRequestMT.h"
#include "asb_uci/type/OrbitConjunctionAssessmentRequestStatusMDT.h"
#include "asb_uci/type/OrbitConjunctionAssessmentRequestStatusMT.h"
#include "asb_uci/type/OrbitExecutionPlanSetType.h"
#include "asb_uci/type/OrbitKinematicsParametersType.h"
#include "asb_uci/type/OrbitKinematicsSequenceID_Type.h"
#include "asb_uci/type/OrbitKinematicsSequenceInsertionType.h"
#include "asb_uci/type/OrbitKinematicsSequenceType.h"
#include "asb_uci/type/OrbitKinematicsType.h"
#include "asb_uci/type/OrbitManeuverSegmentID_Type.h"
#include "asb_uci/type/OrbitMetricsID_Type.h"
#include "asb_uci/type/OrbitMetricsMT.h"
#include "asb_uci/type/OrbitMetricsRequestMDT.h"
#include "asb_uci/type/OrbitMetricsRequestMT.h"
#include "asb_uci/type/OrbitMetricsRequestStatusMDT.h"
#include "asb_uci/type/OrbitMetricsRequestStatusMT.h"
#include "asb_uci/type/OrbitModificationRequestMDT.h"
#include "asb_uci/type/OrbitModificationRequestMT.h"
#include "asb_uci/type/OrbitModificationRequestStatusMDT.h"
#include "asb_uci/type/OrbitModificationRequestStatusMT.h"
#include "asb_uci/type/OrbitPlanApprovalStatusMT.h"
#include "asb_uci/type/OrbitPlanCommandID_Type.h"
#include "asb_uci/type/OrbitPlanCommandMT.h"
#include "asb_uci/type/OrbitPlanCommandStatusMT.h"
#include "asb_uci/type/OrbitPlanExecutionStatusMT.h"
#include "asb_uci/type/OrbitPlanID_Type.h"
#include "asb_uci/type/OrbitPlanInputsType.h"
#include "asb_uci/type/OrbitPlanMT.h"
#include "asb_uci/type/OrbitPlanProcessDescriptionType.h"
#include "asb_uci/type/OrbitPlanStatusMT.h"
#include "asb_uci/type/OrbitPlanStatusType.h"
#include "asb_uci/type/OrbitPlanValidationCommandMDT.h"
#include "asb_uci/type/OrbitPlanValidationCommandMT.h"
#include "asb_uci/type/OrbitPlanValidationCommandStatusMDT.h"
#include "asb_uci/type/OrbitPlanValidationCommandStatusMT.h"
#include "asb_uci/type/OrbitPlanValidationID_Type.h"
#include "asb_uci/type/OrbitPlanValidationInputsType.h"
#include "asb_uci/type/OrbitPlanValidationMT.h"
#include "asb_uci/type/OrbitPlanningCandidateType.h"
#include "asb_uci/type/OrbitSequenceCompletedType.h"
#include "asb_uci/type/OrbitSequenceEstimateType.h"
#include "asb_uci/type/OrbitalSurveillanceCapabilityMT.h"
#include "asb_uci/type/OrbitalSurveillanceCapabilityStatusMDT.h"
#include "asb_uci/type/OrbitalSurveillanceCapabilityStatusMT.h"
#include "asb_uci/type/OrbitalSurveillanceCapabilityType.h"
#include "asb_uci/type/OrbitalSurveillanceObjectBaseType.h"
#include "asb_uci/type/OrbitalSurveillanceObjectType.h"
#include "asb_uci/type/OrbitalSurveillanceSensorActivityMT.h"
#include "asb_uci/type/OrbitalSurveillanceSensorActivityType.h"
#include "asb_uci/type/OrbitalSurveillanceSensorCapabilityMDT.h"
#include "asb_uci/type/OrbitalSurveillanceSensorCapabilityMT.h"
#include "asb_uci/type/OrbitalSurveillanceSensorCapabilityStatusMDT.h"
#include "asb_uci/type/OrbitalSurveillanceSensorCapabilityStatusMT.h"
#include "asb_uci/type/OrbitalSurveillanceSensorCapabilityType.h"
#include "asb_uci/type/OrbitalSurveillanceSensorTaskBaseType.h"
#include "asb_uci/type/OrbitalSurveillanceSensorTaskType.h"
#include "asb_uci/type/OrbitalSurveillanceTaskBaseType.h"
#include "asb_uci/type/OrbitalSurveillanceTaskType.h"
#include "asb_uci/type/OrderOfBattleC2_EmitterType.h"
#include "asb_uci/type/OrderOfBattleEmitterType.h"
#include "asb_uci/type/OrderOfBattleID_Type.h"
#include "asb_uci/type/OrderOfBattleMDT.h"
#include "asb_uci/type/OrderOfBattleMT.h"
#include "asb_uci/type/PackageID_Type.h"
#include "asb_uci/type/PackageMDT.h"
#include "asb_uci/type/PackageMT.h"
#include "asb_uci/type/PackageStatusMT.h"
#include "asb_uci/type/ParameterID_Type.h"
#include "asb_uci/type/PathID_Type.h"
#include "asb_uci/type/PixelCountSettingsType.h"
#include "asb_uci/type/PixelDataType.h"
#include "asb_uci/type/PixelOutputDataType.h"
#include "asb_uci/type/PlanInputsCoreType.h"
#include "asb_uci/type/PlanModificationRequestMDT.h"
#include "asb_uci/type/PlanModificationRequestMT.h"
#include "asb_uci/type/PlanModificationRequestStatusMDT.h"
#include "asb_uci/type/PlanModificationRequestStatusMT.h"
#include "asb_uci/type/PlannedActivityBaseType.h"
#include "asb_uci/type/PlannedActivityExecutionStatusType.h"
#include "asb_uci/type/PlannedActivityID_Type.h"
#include "asb_uci/type/PlannedActivityTriggerType.h"
#include "asb_uci/type/PlannedActivityType.h"
#include "asb_uci/type/PlannedCommActionExtendedType.h"
#include "asb_uci/type/PlannedCommActionType.h"
#include "asb_uci/type/PlanningAllowedType.h"
#include "asb_uci/type/PlanningApplicabilitySystemType.h"
#include "asb_uci/type/PlanningCandidateBaseType.h"
#include "asb_uci/type/PlanningDiscoveryBaseType.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"
#include "uci/type/OrbitChangeActivityMT.h"
#include "uci/type/OrbitChangeActivityType.h"
#include "uci/type/OrbitChangeCapabilityMDT.h"
#include "uci/type/OrbitChangeCapabilityMT.h"
#include "uci/type/OrbitChangeCapabilityStatusMDT.h"
#include "uci/type/OrbitChangeCapabilityStatusMT.h"
#include "uci/type/OrbitChangeCapabilityType.h"
#include "uci/type/OrbitChangeTaskBaseType.h"
#include "uci/type/OrbitChangeTaskType.h"
#include "uci/type/OrbitConjunctionAssessmentID_Type.h"
#include "uci/type/OrbitConjunctionAssessmentMT.h"
#include "uci/type/OrbitConjunctionAssessmentRequestMDT.h"
#include "uci/type/OrbitConjunctionAssessmentRequestMT.h"
#include "uci/type/OrbitConjunctionAssessmentRequestStatusMDT.h"
#include "uci/type/OrbitConjunctionAssessmentRequestStatusMT.h"
#include "uci/type/OrbitExecutionPlanSetType.h"
#include "uci/type/OrbitKinematicsParametersType.h"
#include "uci/type/OrbitKinematicsSequenceID_Type.h"
#include "uci/type/OrbitKinematicsSequenceInsertionType.h"
#include "uci/type/OrbitKinematicsSequenceType.h"
#include "uci/type/OrbitKinematicsType.h"
#include "uci/type/OrbitManeuverSegmentID_Type.h"
#include "uci/type/OrbitMetricsID_Type.h"
#include "uci/type/OrbitMetricsMT.h"
#include "uci/type/OrbitMetricsRequestMDT.h"
#include "uci/type/OrbitMetricsRequestMT.h"
#include "uci/type/OrbitMetricsRequestStatusMDT.h"
#include "uci/type/OrbitMetricsRequestStatusMT.h"
#include "uci/type/OrbitModificationRequestMDT.h"
#include "uci/type/OrbitModificationRequestMT.h"
#include "uci/type/OrbitModificationRequestStatusMDT.h"
#include "uci/type/OrbitModificationRequestStatusMT.h"
#include "uci/type/OrbitPlanApprovalStatusMT.h"
#include "uci/type/OrbitPlanCommandID_Type.h"
#include "uci/type/OrbitPlanCommandMT.h"
#include "uci/type/OrbitPlanCommandStatusMT.h"
#include "uci/type/OrbitPlanExecutionStatusMT.h"
#include "uci/type/OrbitPlanID_Type.h"
#include "uci/type/OrbitPlanInputsType.h"
#include "uci/type/OrbitPlanMT.h"
#include "uci/type/OrbitPlanProcessDescriptionType.h"
#include "uci/type/OrbitPlanStatusMT.h"
#include "uci/type/OrbitPlanStatusType.h"
#include "uci/type/OrbitPlanValidationCommandMDT.h"
#include "uci/type/OrbitPlanValidationCommandMT.h"
#include "uci/type/OrbitPlanValidationCommandStatusMDT.h"
#include "uci/type/OrbitPlanValidationCommandStatusMT.h"
#include "uci/type/OrbitPlanValidationID_Type.h"
#include "uci/type/OrbitPlanValidationInputsType.h"
#include "uci/type/OrbitPlanValidationMT.h"
#include "uci/type/OrbitPlanningCandidateType.h"
#include "uci/type/OrbitSequenceCompletedType.h"
#include "uci/type/OrbitSequenceEstimateType.h"
#include "uci/type/OrbitalSurveillanceCapabilityMT.h"
#include "uci/type/OrbitalSurveillanceCapabilityStatusMDT.h"
#include "uci/type/OrbitalSurveillanceCapabilityStatusMT.h"
#include "uci/type/OrbitalSurveillanceCapabilityType.h"
#include "uci/type/OrbitalSurveillanceObjectBaseType.h"
#include "uci/type/OrbitalSurveillanceObjectType.h"
#include "uci/type/OrbitalSurveillanceSensorActivityMT.h"
#include "uci/type/OrbitalSurveillanceSensorActivityType.h"
#include "uci/type/OrbitalSurveillanceSensorCapabilityMDT.h"
#include "uci/type/OrbitalSurveillanceSensorCapabilityMT.h"
#include "uci/type/OrbitalSurveillanceSensorCapabilityStatusMDT.h"
#include "uci/type/OrbitalSurveillanceSensorCapabilityStatusMT.h"
#include "uci/type/OrbitalSurveillanceSensorCapabilityType.h"
#include "uci/type/OrbitalSurveillanceSensorTaskBaseType.h"
#include "uci/type/OrbitalSurveillanceSensorTaskType.h"
#include "uci/type/OrbitalSurveillanceTaskBaseType.h"
#include "uci/type/OrbitalSurveillanceTaskType.h"
#include "uci/type/OrderOfBattleC2_EmitterType.h"
#include "uci/type/OrderOfBattleEmitterType.h"
#include "uci/type/OrderOfBattleID_Type.h"
#include "uci/type/OrderOfBattleMDT.h"
#include "uci/type/OrderOfBattleMT.h"
#include "uci/type/PackageID_Type.h"
#include "uci/type/PackageMDT.h"
#include "uci/type/PackageMT.h"
#include "uci/type/PackageStatusMT.h"
#include "uci/type/ParameterID_Type.h"
#include "uci/type/PathID_Type.h"
#include "uci/type/PixelCountSettingsType.h"
#include "uci/type/PixelDataType.h"
#include "uci/type/PixelOutputDataType.h"
#include "uci/type/PlanInputsCoreType.h"
#include "uci/type/PlanModificationRequestMDT.h"
#include "uci/type/PlanModificationRequestMT.h"
#include "uci/type/PlanModificationRequestStatusMDT.h"
#include "uci/type/PlanModificationRequestStatusMT.h"
#include "uci/type/PlannedActivityBaseType.h"
#include "uci/type/PlannedActivityExecutionStatusType.h"
#include "uci/type/PlannedActivityID_Type.h"
#include "uci/type/PlannedActivityTriggerType.h"
#include "uci/type/PlannedActivityType.h"
#include "uci/type/PlannedCommActionExtendedType.h"
#include "uci/type/PlannedCommActionType.h"
#include "uci/type/PlanningAllowedType.h"
#include "uci/type/PlanningApplicabilitySystemType.h"
#include "uci/type/PlanningCandidateBaseType.h"
#include "uci/type/PlanningDiscoveryBaseType.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

bool DerivedTypesCopier12::copy(const uci::base::Accessor& source, uci::base::Accessor& destination) {
  switch (source.getAccessorType()) {
    case uci::type::accessorType::orbitalSurveillanceCapabilityMT:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceCapabilityMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceCapabilityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceCapabilityStatusMDT:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceCapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceCapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceCapabilityStatusMT:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceCapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceCapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceCapabilityType:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceCapabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceCapabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceObjectBaseType:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceObjectBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceObjectBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceObjectType:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceObjectType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceObjectType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceSensorActivityMT:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceSensorActivityMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceSensorActivityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceSensorActivityType:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceSensorActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceSensorActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceSensorCapabilityMDT:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceSensorCapabilityMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceSensorCapabilityMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceSensorCapabilityMT:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceSensorCapabilityMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceSensorCapabilityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceSensorCapabilityStatusMDT:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceSensorCapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceSensorCapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceSensorCapabilityStatusMT:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceSensorCapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceSensorCapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceSensorCapabilityType:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceSensorCapabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceSensorCapabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceSensorTaskBaseType:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceSensorTaskBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceSensorTaskBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceSensorTaskType:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceSensorTaskType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceSensorTaskType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceTaskBaseType:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceTaskBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceTaskBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitalSurveillanceTaskType:
      dynamic_cast<asb_uci::type::OrbitalSurveillanceTaskType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitalSurveillanceTaskType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitChangeActivityMT:
      dynamic_cast<asb_uci::type::OrbitChangeActivityMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitChangeActivityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitChangeActivityType:
      dynamic_cast<asb_uci::type::OrbitChangeActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitChangeActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitChangeCapabilityMDT:
      dynamic_cast<asb_uci::type::OrbitChangeCapabilityMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitChangeCapabilityMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitChangeCapabilityMT:
      dynamic_cast<asb_uci::type::OrbitChangeCapabilityMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitChangeCapabilityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitChangeCapabilityStatusMDT:
      dynamic_cast<asb_uci::type::OrbitChangeCapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitChangeCapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitChangeCapabilityStatusMT:
      dynamic_cast<asb_uci::type::OrbitChangeCapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitChangeCapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitChangeCapabilityType:
      dynamic_cast<asb_uci::type::OrbitChangeCapabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitChangeCapabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitChangeTaskBaseType:
      dynamic_cast<asb_uci::type::OrbitChangeTaskBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitChangeTaskBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitChangeTaskType:
      dynamic_cast<asb_uci::type::OrbitChangeTaskType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitChangeTaskType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitConjunctionAssessmentID_Type:
      dynamic_cast<asb_uci::type::OrbitConjunctionAssessmentID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitConjunctionAssessmentID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitConjunctionAssessmentMT:
      dynamic_cast<asb_uci::type::OrbitConjunctionAssessmentMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitConjunctionAssessmentMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitConjunctionAssessmentRequestMDT:
      dynamic_cast<asb_uci::type::OrbitConjunctionAssessmentRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitConjunctionAssessmentRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitConjunctionAssessmentRequestMT:
      dynamic_cast<asb_uci::type::OrbitConjunctionAssessmentRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitConjunctionAssessmentRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitConjunctionAssessmentRequestStatusMDT:
      dynamic_cast<asb_uci::type::OrbitConjunctionAssessmentRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitConjunctionAssessmentRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitConjunctionAssessmentRequestStatusMT:
      dynamic_cast<asb_uci::type::OrbitConjunctionAssessmentRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitConjunctionAssessmentRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitExecutionPlanSetType:
      dynamic_cast<asb_uci::type::OrbitExecutionPlanSetType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitExecutionPlanSetType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitKinematicsParametersType:
      dynamic_cast<asb_uci::type::OrbitKinematicsParametersType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitKinematicsParametersType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitKinematicsSequenceID_Type:
      dynamic_cast<asb_uci::type::OrbitKinematicsSequenceID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitKinematicsSequenceID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitKinematicsSequenceInsertionType:
      dynamic_cast<asb_uci::type::OrbitKinematicsSequenceInsertionType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitKinematicsSequenceInsertionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitKinematicsSequenceType:
      dynamic_cast<asb_uci::type::OrbitKinematicsSequenceType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitKinematicsSequenceType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitKinematicsType:
      dynamic_cast<asb_uci::type::OrbitKinematicsType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitKinematicsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitManeuverSegmentID_Type:
      dynamic_cast<asb_uci::type::OrbitManeuverSegmentID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitManeuverSegmentID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitMetricsID_Type:
      dynamic_cast<asb_uci::type::OrbitMetricsID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitMetricsID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitMetricsMT:
      dynamic_cast<asb_uci::type::OrbitMetricsMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitMetricsMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitMetricsRequestMDT:
      dynamic_cast<asb_uci::type::OrbitMetricsRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitMetricsRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitMetricsRequestMT:
      dynamic_cast<asb_uci::type::OrbitMetricsRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitMetricsRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitMetricsRequestStatusMDT:
      dynamic_cast<asb_uci::type::OrbitMetricsRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitMetricsRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitMetricsRequestStatusMT:
      dynamic_cast<asb_uci::type::OrbitMetricsRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitMetricsRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitModificationRequestMDT:
      dynamic_cast<asb_uci::type::OrbitModificationRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitModificationRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitModificationRequestMT:
      dynamic_cast<asb_uci::type::OrbitModificationRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitModificationRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitModificationRequestStatusMDT:
      dynamic_cast<asb_uci::type::OrbitModificationRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitModificationRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitModificationRequestStatusMT:
      dynamic_cast<asb_uci::type::OrbitModificationRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitModificationRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanApprovalStatusMT:
      dynamic_cast<asb_uci::type::OrbitPlanApprovalStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanApprovalStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanCommandID_Type:
      dynamic_cast<asb_uci::type::OrbitPlanCommandID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanCommandID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanCommandMT:
      dynamic_cast<asb_uci::type::OrbitPlanCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanCommandStatusMT:
      dynamic_cast<asb_uci::type::OrbitPlanCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanExecutionStatusMT:
      dynamic_cast<asb_uci::type::OrbitPlanExecutionStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanExecutionStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanID_Type:
      dynamic_cast<asb_uci::type::OrbitPlanID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanInputsType:
      dynamic_cast<asb_uci::type::OrbitPlanInputsType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanInputsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanMT:
      dynamic_cast<asb_uci::type::OrbitPlanMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanningCandidateType:
      dynamic_cast<asb_uci::type::OrbitPlanningCandidateType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanningCandidateType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanProcessDescriptionType:
      dynamic_cast<asb_uci::type::OrbitPlanProcessDescriptionType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanProcessDescriptionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanStatusMT:
      dynamic_cast<asb_uci::type::OrbitPlanStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanStatusType:
      dynamic_cast<asb_uci::type::OrbitPlanStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanValidationCommandMDT:
      dynamic_cast<asb_uci::type::OrbitPlanValidationCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanValidationCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanValidationCommandMT:
      dynamic_cast<asb_uci::type::OrbitPlanValidationCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanValidationCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanValidationCommandStatusMDT:
      dynamic_cast<asb_uci::type::OrbitPlanValidationCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanValidationCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanValidationCommandStatusMT:
      dynamic_cast<asb_uci::type::OrbitPlanValidationCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanValidationCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanValidationID_Type:
      dynamic_cast<asb_uci::type::OrbitPlanValidationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanValidationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanValidationInputsType:
      dynamic_cast<asb_uci::type::OrbitPlanValidationInputsType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanValidationInputsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitPlanValidationMT:
      dynamic_cast<asb_uci::type::OrbitPlanValidationMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitPlanValidationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitSequenceCompletedType:
      dynamic_cast<asb_uci::type::OrbitSequenceCompletedType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitSequenceCompletedType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orbitSequenceEstimateType:
      dynamic_cast<asb_uci::type::OrbitSequenceEstimateType&>(destination).copyImpl(dynamic_cast<const uci::type::OrbitSequenceEstimateType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orderOfBattleC2_EmitterType:
      dynamic_cast<asb_uci::type::OrderOfBattleC2_EmitterType&>(destination).copyImpl(dynamic_cast<const uci::type::OrderOfBattleC2_EmitterType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orderOfBattleEmitterType:
      dynamic_cast<asb_uci::type::OrderOfBattleEmitterType&>(destination).copyImpl(dynamic_cast<const uci::type::OrderOfBattleEmitterType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orderOfBattleID_Type:
      dynamic_cast<asb_uci::type::OrderOfBattleID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::OrderOfBattleID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orderOfBattleMDT:
      dynamic_cast<asb_uci::type::OrderOfBattleMDT&>(destination).copyImpl(dynamic_cast<const uci::type::OrderOfBattleMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::orderOfBattleMT:
      dynamic_cast<asb_uci::type::OrderOfBattleMT&>(destination).copyImpl(dynamic_cast<const uci::type::OrderOfBattleMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::packageID_Type:
      dynamic_cast<asb_uci::type::PackageID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::PackageID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::packageMDT:
      dynamic_cast<asb_uci::type::PackageMDT&>(destination).copyImpl(dynamic_cast<const uci::type::PackageMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::packageMT:
      dynamic_cast<asb_uci::type::PackageMT&>(destination).copyImpl(dynamic_cast<const uci::type::PackageMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::packageStatusMT:
      dynamic_cast<asb_uci::type::PackageStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::PackageStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::parameterID_Type:
      dynamic_cast<asb_uci::type::ParameterID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ParameterID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::pathID_Type:
      dynamic_cast<asb_uci::type::PathID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::PathID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::pixelCountSettingsType:
      dynamic_cast<asb_uci::type::PixelCountSettingsType&>(destination).copyImpl(dynamic_cast<const uci::type::PixelCountSettingsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::pixelDataType:
      dynamic_cast<asb_uci::type::PixelDataType&>(destination).copyImpl(dynamic_cast<const uci::type::PixelDataType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::pixelOutputDataType:
      dynamic_cast<asb_uci::type::PixelOutputDataType&>(destination).copyImpl(dynamic_cast<const uci::type::PixelOutputDataType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::planInputsCoreType:
      dynamic_cast<asb_uci::type::PlanInputsCoreType&>(destination).copyImpl(dynamic_cast<const uci::type::PlanInputsCoreType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::planModificationRequestMDT:
      dynamic_cast<asb_uci::type::PlanModificationRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::PlanModificationRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::planModificationRequestMT:
      dynamic_cast<asb_uci::type::PlanModificationRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::PlanModificationRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::planModificationRequestStatusMDT:
      dynamic_cast<asb_uci::type::PlanModificationRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::PlanModificationRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::planModificationRequestStatusMT:
      dynamic_cast<asb_uci::type::PlanModificationRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::PlanModificationRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::plannedActivityBaseType:
      dynamic_cast<asb_uci::type::PlannedActivityBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::PlannedActivityBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::plannedActivityExecutionStatusType:
      dynamic_cast<asb_uci::type::PlannedActivityExecutionStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::PlannedActivityExecutionStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::plannedActivityID_Type:
      dynamic_cast<asb_uci::type::PlannedActivityID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::PlannedActivityID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::plannedActivityTriggerType:
      dynamic_cast<asb_uci::type::PlannedActivityTriggerType&>(destination).copyImpl(dynamic_cast<const uci::type::PlannedActivityTriggerType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::plannedActivityType:
      dynamic_cast<asb_uci::type::PlannedActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::PlannedActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::plannedCommActionExtendedType:
      dynamic_cast<asb_uci::type::PlannedCommActionExtendedType&>(destination).copyImpl(dynamic_cast<const uci::type::PlannedCommActionExtendedType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::plannedCommActionType:
      dynamic_cast<asb_uci::type::PlannedCommActionType&>(destination).copyImpl(dynamic_cast<const uci::type::PlannedCommActionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::planningAllowedType:
      dynamic_cast<asb_uci::type::PlanningAllowedType&>(destination).copyImpl(dynamic_cast<const uci::type::PlanningAllowedType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::planningApplicabilitySystemType:
      dynamic_cast<asb_uci::type::PlanningApplicabilitySystemType&>(destination).copyImpl(dynamic_cast<const uci::type::PlanningApplicabilitySystemType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::planningCandidateBaseType:
      dynamic_cast<asb_uci::type::PlanningCandidateBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::PlanningCandidateBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::planningDiscoveryBaseType:
      dynamic_cast<asb_uci::type::PlanningDiscoveryBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::PlanningDiscoveryBaseType&>(source), false);
      return true;
      break;
    default:
      return false;
  }
}

} // namespace util

} // namespace asb_uci

