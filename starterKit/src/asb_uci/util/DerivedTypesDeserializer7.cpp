/** @file DerivedTypesDeserializer7.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesDeserializer7.h"

#include <string>

#include <boost/property_tree/ptree.hpp>

#include "asb_uci/type/EffectActivityType.h"
#include "asb_uci/type/EffectAllocationType.h"
#include "asb_uci/type/EffectCancelCommandMDT.h"
#include "asb_uci/type/EffectCancelCommandMT.h"
#include "asb_uci/type/EffectCancelCommandStatusMDT.h"
#include "asb_uci/type/EffectCancelCommandStatusMT.h"
#include "asb_uci/type/EffectCapabilityCommandType.h"
#include "asb_uci/type/EffectCapabilityMDT.h"
#include "asb_uci/type/EffectCapabilityMT.h"
#include "asb_uci/type/EffectCapabilityStatusMDT.h"
#include "asb_uci/type/EffectCapabilityStatusMT.h"
#include "asb_uci/type/EffectCapabilityType.h"
#include "asb_uci/type/EffectCommandMT.h"
#include "asb_uci/type/EffectCommandStatusMDT.h"
#include "asb_uci/type/EffectCommandStatusMT.h"
#include "asb_uci/type/EffectExecutionApprovalStatusMDT.h"
#include "asb_uci/type/EffectExecutionApprovalStatusMT.h"
#include "asb_uci/type/EffectID_Type.h"
#include "asb_uci/type/EffectMT.h"
#include "asb_uci/type/EffectPlanApprovalStatusMT.h"
#include "asb_uci/type/EffectPlanCommandID_Type.h"
#include "asb_uci/type/EffectPlanCommandMT.h"
#include "asb_uci/type/EffectPlanCommandStatusMT.h"
#include "asb_uci/type/EffectPlanExecutionStatusMT.h"
#include "asb_uci/type/EffectPlanID_Type.h"
#include "asb_uci/type/EffectPlanInputsType.h"
#include "asb_uci/type/EffectPlanMT.h"
#include "asb_uci/type/EffectPlanProcessDescriptionType.h"
#include "asb_uci/type/EffectPlanStatusMT.h"
#include "asb_uci/type/EffectPlanValidationCommandMDT.h"
#include "asb_uci/type/EffectPlanValidationCommandMT.h"
#include "asb_uci/type/EffectPlanValidationCommandStatusMDT.h"
#include "asb_uci/type/EffectPlanValidationCommandStatusMT.h"
#include "asb_uci/type/EffectPlanValidationID_Type.h"
#include "asb_uci/type/EffectPlanValidationInputsType.h"
#include "asb_uci/type/EffectPlanValidationMT.h"
#include "asb_uci/type/EffectPlanningResultType.h"
#include "asb_uci/type/EffectPlanningStatusMDT.h"
#include "asb_uci/type/EffectPlanningStatusMT.h"
#include "asb_uci/type/EffectStatusMDT.h"
#include "asb_uci/type/EffectStatusMT.h"
#include "asb_uci/type/ElevationRequestMDT.h"
#include "asb_uci/type/ElevationRequestMT.h"
#include "asb_uci/type/ElevationRequestStatusMDT.h"
#include "asb_uci/type/ElevationRequestStatusMT.h"
#include "asb_uci/type/ElevationVisibilityRequestMDT.h"
#include "asb_uci/type/ElevationVisibilityRequestMT.h"
#include "asb_uci/type/ElevationVisibilityRequestStatusMDT.h"
#include "asb_uci/type/ElevationVisibilityRequestStatusMT.h"
#include "asb_uci/type/EllipseType.h"
#include "asb_uci/type/EmergencyReferenceOpPointType.h"
#include "asb_uci/type/EmitterFixedPositionType.h"
#include "asb_uci/type/EnduranceBaseType.h"
#include "asb_uci/type/EnduranceType.h"
#include "asb_uci/type/EntityConfirmationMT.h"
#include "asb_uci/type/EntityConfirmationRequestMDT.h"
#include "asb_uci/type/EntityConfirmationRequestMT.h"
#include "asb_uci/type/EntityConfirmationRequestStatusMDT.h"
#include "asb_uci/type/EntityConfirmationRequestStatusMT.h"
#include "asb_uci/type/EntityEphemerisRequestParametersType.h"
#include "asb_uci/type/EntityID_Type.h"
#include "asb_uci/type/EntityIdentityType.h"
#include "asb_uci/type/EntityLostMT.h"
#include "asb_uci/type/EntityMT.h"
#include "asb_uci/type/EntityManagementRequestMDT.h"
#include "asb_uci/type/EntityManagementRequestMT.h"
#include "asb_uci/type/EntityManagementRequestStatusMDT.h"
#include "asb_uci/type/EntityManagementRequestStatusMT.h"
#include "asb_uci/type/EntityMetadataMT.h"
#include "asb_uci/type/EntityMetadataPET.h"
#include "asb_uci/type/EntityNotificationMDT.h"
#include "asb_uci/type/EntityNotificationMT.h"
#include "asb_uci/type/EntityOrbitalCSO_ID_Type.h"
#include "asb_uci/type/EntityOrbitalCSO_MT.h"
#include "asb_uci/type/EntityOrbitalElementSetID_Type.h"
#include "asb_uci/type/EntityOrbitalElementSetMDT.h"
#include "asb_uci/type/EntityOrbitalElementSetMT.h"
#include "asb_uci/type/EntityOrbitalElementSetRequestMDT.h"
#include "asb_uci/type/EntityOrbitalElementSetRequestMT.h"
#include "asb_uci/type/EntityOrbitalElementSetRequestStatusMDT.h"
#include "asb_uci/type/EntityOrbitalElementSetRequestStatusMT.h"
#include "asb_uci/type/EntityOrbitalElementSetType.h"
#include "asb_uci/type/EntityOrbitalEphemerisID_Type.h"
#include "asb_uci/type/EntityOrbitalEphemerisMDT.h"
#include "asb_uci/type/EntityOrbitalEphemerisMT.h"
#include "asb_uci/type/EntityOrbitalEphemerisRequestMDT.h"
#include "asb_uci/type/EntityOrbitalEphemerisRequestMT.h"
#include "asb_uci/type/EntityOrbitalEphemerisRequestStatusMDT.h"
#include "asb_uci/type/EntityOrbitalEphemerisRequestStatusMT.h"
#include "asb_uci/type/EntityOrbitalEphemerisType.h"
#include "asb_uci/type/EntityOrbitalManeuverMT.h"
#include "asb_uci/type/EntityOrbitalVCM_ID_Type.h"
#include "asb_uci/type/EntityOrbitalVCM_MDT.h"
#include "asb_uci/type/EntityOrbitalVCM_MT.h"
#include "asb_uci/type/EntityOrbitalVCM_RequestMDT.h"
#include "asb_uci/type/EntityOrbitalVCM_RequestMT.h"
#include "asb_uci/type/EntityOrbitalVCM_RequestStatusMDT.h"
#include "asb_uci/type/EntityOrbitalVCM_RequestStatusMT.h"
#include "asb_uci/type/EntityOrbitalVCM_Type.h"
#include "asb_uci/type/EntityPropagationMT.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"
#include "uci/type/EffectActivityType.h"
#include "uci/type/EffectAllocationType.h"
#include "uci/type/EffectCancelCommandMDT.h"
#include "uci/type/EffectCancelCommandMT.h"
#include "uci/type/EffectCancelCommandStatusMDT.h"
#include "uci/type/EffectCancelCommandStatusMT.h"
#include "uci/type/EffectCapabilityCommandType.h"
#include "uci/type/EffectCapabilityMDT.h"
#include "uci/type/EffectCapabilityMT.h"
#include "uci/type/EffectCapabilityStatusMDT.h"
#include "uci/type/EffectCapabilityStatusMT.h"
#include "uci/type/EffectCapabilityType.h"
#include "uci/type/EffectCommandMT.h"
#include "uci/type/EffectCommandStatusMDT.h"
#include "uci/type/EffectCommandStatusMT.h"
#include "uci/type/EffectExecutionApprovalStatusMDT.h"
#include "uci/type/EffectExecutionApprovalStatusMT.h"
#include "uci/type/EffectID_Type.h"
#include "uci/type/EffectMT.h"
#include "uci/type/EffectPlanApprovalStatusMT.h"
#include "uci/type/EffectPlanCommandID_Type.h"
#include "uci/type/EffectPlanCommandMT.h"
#include "uci/type/EffectPlanCommandStatusMT.h"
#include "uci/type/EffectPlanExecutionStatusMT.h"
#include "uci/type/EffectPlanID_Type.h"
#include "uci/type/EffectPlanInputsType.h"
#include "uci/type/EffectPlanMT.h"
#include "uci/type/EffectPlanProcessDescriptionType.h"
#include "uci/type/EffectPlanStatusMT.h"
#include "uci/type/EffectPlanValidationCommandMDT.h"
#include "uci/type/EffectPlanValidationCommandMT.h"
#include "uci/type/EffectPlanValidationCommandStatusMDT.h"
#include "uci/type/EffectPlanValidationCommandStatusMT.h"
#include "uci/type/EffectPlanValidationID_Type.h"
#include "uci/type/EffectPlanValidationInputsType.h"
#include "uci/type/EffectPlanValidationMT.h"
#include "uci/type/EffectPlanningResultType.h"
#include "uci/type/EffectPlanningStatusMDT.h"
#include "uci/type/EffectPlanningStatusMT.h"
#include "uci/type/EffectStatusMDT.h"
#include "uci/type/EffectStatusMT.h"
#include "uci/type/ElevationRequestMDT.h"
#include "uci/type/ElevationRequestMT.h"
#include "uci/type/ElevationRequestStatusMDT.h"
#include "uci/type/ElevationRequestStatusMT.h"
#include "uci/type/ElevationVisibilityRequestMDT.h"
#include "uci/type/ElevationVisibilityRequestMT.h"
#include "uci/type/ElevationVisibilityRequestStatusMDT.h"
#include "uci/type/ElevationVisibilityRequestStatusMT.h"
#include "uci/type/EllipseType.h"
#include "uci/type/EmergencyReferenceOpPointType.h"
#include "uci/type/EmitterFixedPositionType.h"
#include "uci/type/EnduranceBaseType.h"
#include "uci/type/EnduranceType.h"
#include "uci/type/EntityConfirmationMT.h"
#include "uci/type/EntityConfirmationRequestMDT.h"
#include "uci/type/EntityConfirmationRequestMT.h"
#include "uci/type/EntityConfirmationRequestStatusMDT.h"
#include "uci/type/EntityConfirmationRequestStatusMT.h"
#include "uci/type/EntityEphemerisRequestParametersType.h"
#include "uci/type/EntityID_Type.h"
#include "uci/type/EntityIdentityType.h"
#include "uci/type/EntityLostMT.h"
#include "uci/type/EntityMT.h"
#include "uci/type/EntityManagementRequestMDT.h"
#include "uci/type/EntityManagementRequestMT.h"
#include "uci/type/EntityManagementRequestStatusMDT.h"
#include "uci/type/EntityManagementRequestStatusMT.h"
#include "uci/type/EntityMetadataMT.h"
#include "uci/type/EntityMetadataPET.h"
#include "uci/type/EntityNotificationMDT.h"
#include "uci/type/EntityNotificationMT.h"
#include "uci/type/EntityOrbitalCSO_ID_Type.h"
#include "uci/type/EntityOrbitalCSO_MT.h"
#include "uci/type/EntityOrbitalElementSetID_Type.h"
#include "uci/type/EntityOrbitalElementSetMDT.h"
#include "uci/type/EntityOrbitalElementSetMT.h"
#include "uci/type/EntityOrbitalElementSetRequestMDT.h"
#include "uci/type/EntityOrbitalElementSetRequestMT.h"
#include "uci/type/EntityOrbitalElementSetRequestStatusMDT.h"
#include "uci/type/EntityOrbitalElementSetRequestStatusMT.h"
#include "uci/type/EntityOrbitalElementSetType.h"
#include "uci/type/EntityOrbitalEphemerisID_Type.h"
#include "uci/type/EntityOrbitalEphemerisMDT.h"
#include "uci/type/EntityOrbitalEphemerisMT.h"
#include "uci/type/EntityOrbitalEphemerisRequestMDT.h"
#include "uci/type/EntityOrbitalEphemerisRequestMT.h"
#include "uci/type/EntityOrbitalEphemerisRequestStatusMDT.h"
#include "uci/type/EntityOrbitalEphemerisRequestStatusMT.h"
#include "uci/type/EntityOrbitalEphemerisType.h"
#include "uci/type/EntityOrbitalManeuverMT.h"
#include "uci/type/EntityOrbitalVCM_ID_Type.h"
#include "uci/type/EntityOrbitalVCM_MDT.h"
#include "uci/type/EntityOrbitalVCM_MT.h"
#include "uci/type/EntityOrbitalVCM_RequestMDT.h"
#include "uci/type/EntityOrbitalVCM_RequestMT.h"
#include "uci/type/EntityOrbitalVCM_RequestStatusMDT.h"
#include "uci/type/EntityOrbitalVCM_RequestStatusMT.h"
#include "uci/type/EntityOrbitalVCM_Type.h"
#include "uci/type/EntityPropagationMT.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

bool DerivedTypesDeserializer7::deserialize(const boost::property_tree::ptree& propTree, uci::base::Accessor& accessor, std::string& nodeName, std::string& nsPrefix, const bool topLevel) {
  switch (accessor.getAccessorType()) {
    case uci::type::accessorType::effectActivityType:
      asb_uci::type::EffectActivityType::deserialize(propTree, dynamic_cast<uci::type::EffectActivityType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectAllocationType:
      asb_uci::type::EffectAllocationType::deserialize(propTree, dynamic_cast<uci::type::EffectAllocationType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCancelCommandMDT:
      asb_uci::type::EffectCancelCommandMDT::deserialize(propTree, dynamic_cast<uci::type::EffectCancelCommandMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCancelCommandMT:
      asb_uci::type::EffectCancelCommandMT::deserialize(propTree, dynamic_cast<uci::type::EffectCancelCommandMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCancelCommandStatusMDT:
      asb_uci::type::EffectCancelCommandStatusMDT::deserialize(propTree, dynamic_cast<uci::type::EffectCancelCommandStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCancelCommandStatusMT:
      asb_uci::type::EffectCancelCommandStatusMT::deserialize(propTree, dynamic_cast<uci::type::EffectCancelCommandStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCapabilityCommandType:
      asb_uci::type::EffectCapabilityCommandType::deserialize(propTree, dynamic_cast<uci::type::EffectCapabilityCommandType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCapabilityMDT:
      asb_uci::type::EffectCapabilityMDT::deserialize(propTree, dynamic_cast<uci::type::EffectCapabilityMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCapabilityMT:
      asb_uci::type::EffectCapabilityMT::deserialize(propTree, dynamic_cast<uci::type::EffectCapabilityMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCapabilityStatusMDT:
      asb_uci::type::EffectCapabilityStatusMDT::deserialize(propTree, dynamic_cast<uci::type::EffectCapabilityStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCapabilityStatusMT:
      asb_uci::type::EffectCapabilityStatusMT::deserialize(propTree, dynamic_cast<uci::type::EffectCapabilityStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCapabilityType:
      asb_uci::type::EffectCapabilityType::deserialize(propTree, dynamic_cast<uci::type::EffectCapabilityType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCommandMT:
      asb_uci::type::EffectCommandMT::deserialize(propTree, dynamic_cast<uci::type::EffectCommandMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCommandStatusMDT:
      asb_uci::type::EffectCommandStatusMDT::deserialize(propTree, dynamic_cast<uci::type::EffectCommandStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectCommandStatusMT:
      asb_uci::type::EffectCommandStatusMT::deserialize(propTree, dynamic_cast<uci::type::EffectCommandStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectExecutionApprovalStatusMDT:
      asb_uci::type::EffectExecutionApprovalStatusMDT::deserialize(propTree, dynamic_cast<uci::type::EffectExecutionApprovalStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectExecutionApprovalStatusMT:
      asb_uci::type::EffectExecutionApprovalStatusMT::deserialize(propTree, dynamic_cast<uci::type::EffectExecutionApprovalStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectID_Type:
      asb_uci::type::EffectID_Type::deserialize(propTree, dynamic_cast<uci::type::EffectID_Type&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectMT:
      asb_uci::type::EffectMT::deserialize(propTree, dynamic_cast<uci::type::EffectMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanApprovalStatusMT:
      asb_uci::type::EffectPlanApprovalStatusMT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanApprovalStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanCommandID_Type:
      asb_uci::type::EffectPlanCommandID_Type::deserialize(propTree, dynamic_cast<uci::type::EffectPlanCommandID_Type&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanCommandMT:
      asb_uci::type::EffectPlanCommandMT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanCommandMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanCommandStatusMT:
      asb_uci::type::EffectPlanCommandStatusMT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanCommandStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanExecutionStatusMT:
      asb_uci::type::EffectPlanExecutionStatusMT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanExecutionStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanID_Type:
      asb_uci::type::EffectPlanID_Type::deserialize(propTree, dynamic_cast<uci::type::EffectPlanID_Type&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanInputsType:
      asb_uci::type::EffectPlanInputsType::deserialize(propTree, dynamic_cast<uci::type::EffectPlanInputsType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanMT:
      asb_uci::type::EffectPlanMT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanningResultType:
      asb_uci::type::EffectPlanningResultType::deserialize(propTree, dynamic_cast<uci::type::EffectPlanningResultType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanningStatusMDT:
      asb_uci::type::EffectPlanningStatusMDT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanningStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanningStatusMT:
      asb_uci::type::EffectPlanningStatusMT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanningStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanProcessDescriptionType:
      asb_uci::type::EffectPlanProcessDescriptionType::deserialize(propTree, dynamic_cast<uci::type::EffectPlanProcessDescriptionType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanStatusMT:
      asb_uci::type::EffectPlanStatusMT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanValidationCommandMDT:
      asb_uci::type::EffectPlanValidationCommandMDT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanValidationCommandMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanValidationCommandMT:
      asb_uci::type::EffectPlanValidationCommandMT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanValidationCommandMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanValidationCommandStatusMDT:
      asb_uci::type::EffectPlanValidationCommandStatusMDT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanValidationCommandStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanValidationCommandStatusMT:
      asb_uci::type::EffectPlanValidationCommandStatusMT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanValidationCommandStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanValidationID_Type:
      asb_uci::type::EffectPlanValidationID_Type::deserialize(propTree, dynamic_cast<uci::type::EffectPlanValidationID_Type&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanValidationInputsType:
      asb_uci::type::EffectPlanValidationInputsType::deserialize(propTree, dynamic_cast<uci::type::EffectPlanValidationInputsType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectPlanValidationMT:
      asb_uci::type::EffectPlanValidationMT::deserialize(propTree, dynamic_cast<uci::type::EffectPlanValidationMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectStatusMDT:
      asb_uci::type::EffectStatusMDT::deserialize(propTree, dynamic_cast<uci::type::EffectStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::effectStatusMT:
      asb_uci::type::EffectStatusMT::deserialize(propTree, dynamic_cast<uci::type::EffectStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::elevationRequestMDT:
      asb_uci::type::ElevationRequestMDT::deserialize(propTree, dynamic_cast<uci::type::ElevationRequestMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::elevationRequestMT:
      asb_uci::type::ElevationRequestMT::deserialize(propTree, dynamic_cast<uci::type::ElevationRequestMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::elevationRequestStatusMDT:
      asb_uci::type::ElevationRequestStatusMDT::deserialize(propTree, dynamic_cast<uci::type::ElevationRequestStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::elevationRequestStatusMT:
      asb_uci::type::ElevationRequestStatusMT::deserialize(propTree, dynamic_cast<uci::type::ElevationRequestStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::elevationVisibilityRequestMDT:
      asb_uci::type::ElevationVisibilityRequestMDT::deserialize(propTree, dynamic_cast<uci::type::ElevationVisibilityRequestMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::elevationVisibilityRequestMT:
      asb_uci::type::ElevationVisibilityRequestMT::deserialize(propTree, dynamic_cast<uci::type::ElevationVisibilityRequestMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::elevationVisibilityRequestStatusMDT:
      asb_uci::type::ElevationVisibilityRequestStatusMDT::deserialize(propTree, dynamic_cast<uci::type::ElevationVisibilityRequestStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::elevationVisibilityRequestStatusMT:
      asb_uci::type::ElevationVisibilityRequestStatusMT::deserialize(propTree, dynamic_cast<uci::type::ElevationVisibilityRequestStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::ellipseType:
      asb_uci::type::EllipseType::deserialize(propTree, dynamic_cast<uci::type::EllipseType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::emergencyReferenceOpPointType:
      asb_uci::type::EmergencyReferenceOpPointType::deserialize(propTree, dynamic_cast<uci::type::EmergencyReferenceOpPointType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::emitterFixedPositionType:
      asb_uci::type::EmitterFixedPositionType::deserialize(propTree, dynamic_cast<uci::type::EmitterFixedPositionType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::enduranceBaseType:
      asb_uci::type::EnduranceBaseType::deserialize(propTree, dynamic_cast<uci::type::EnduranceBaseType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::enduranceType:
      asb_uci::type::EnduranceType::deserialize(propTree, dynamic_cast<uci::type::EnduranceType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityConfirmationMT:
      asb_uci::type::EntityConfirmationMT::deserialize(propTree, dynamic_cast<uci::type::EntityConfirmationMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityConfirmationRequestMDT:
      asb_uci::type::EntityConfirmationRequestMDT::deserialize(propTree, dynamic_cast<uci::type::EntityConfirmationRequestMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityConfirmationRequestMT:
      asb_uci::type::EntityConfirmationRequestMT::deserialize(propTree, dynamic_cast<uci::type::EntityConfirmationRequestMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityConfirmationRequestStatusMDT:
      asb_uci::type::EntityConfirmationRequestStatusMDT::deserialize(propTree, dynamic_cast<uci::type::EntityConfirmationRequestStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityConfirmationRequestStatusMT:
      asb_uci::type::EntityConfirmationRequestStatusMT::deserialize(propTree, dynamic_cast<uci::type::EntityConfirmationRequestStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityEphemerisRequestParametersType:
      asb_uci::type::EntityEphemerisRequestParametersType::deserialize(propTree, dynamic_cast<uci::type::EntityEphemerisRequestParametersType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityID_Type:
      asb_uci::type::EntityID_Type::deserialize(propTree, dynamic_cast<uci::type::EntityID_Type&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityIdentityType:
      asb_uci::type::EntityIdentityType::deserialize(propTree, dynamic_cast<uci::type::EntityIdentityType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityLostMT:
      asb_uci::type::EntityLostMT::deserialize(propTree, dynamic_cast<uci::type::EntityLostMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityManagementRequestMDT:
      asb_uci::type::EntityManagementRequestMDT::deserialize(propTree, dynamic_cast<uci::type::EntityManagementRequestMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityManagementRequestMT:
      asb_uci::type::EntityManagementRequestMT::deserialize(propTree, dynamic_cast<uci::type::EntityManagementRequestMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityManagementRequestStatusMDT:
      asb_uci::type::EntityManagementRequestStatusMDT::deserialize(propTree, dynamic_cast<uci::type::EntityManagementRequestStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityManagementRequestStatusMT:
      asb_uci::type::EntityManagementRequestStatusMT::deserialize(propTree, dynamic_cast<uci::type::EntityManagementRequestStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityMetadataMT:
      asb_uci::type::EntityMetadataMT::deserialize(propTree, dynamic_cast<uci::type::EntityMetadataMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityMetadataPET:
      asb_uci::type::EntityMetadataPET::deserialize(propTree, dynamic_cast<uci::type::EntityMetadataPET&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityMT:
      asb_uci::type::EntityMT::deserialize(propTree, dynamic_cast<uci::type::EntityMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityNotificationMDT:
      asb_uci::type::EntityNotificationMDT::deserialize(propTree, dynamic_cast<uci::type::EntityNotificationMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityNotificationMT:
      asb_uci::type::EntityNotificationMT::deserialize(propTree, dynamic_cast<uci::type::EntityNotificationMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalCSO_ID_Type:
      asb_uci::type::EntityOrbitalCSO_ID_Type::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalCSO_ID_Type&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalCSO_MT:
      asb_uci::type::EntityOrbitalCSO_MT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalCSO_MT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalElementSetID_Type:
      asb_uci::type::EntityOrbitalElementSetID_Type::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalElementSetID_Type&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalElementSetMDT:
      asb_uci::type::EntityOrbitalElementSetMDT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalElementSetMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalElementSetMT:
      asb_uci::type::EntityOrbitalElementSetMT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalElementSetMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalElementSetRequestMDT:
      asb_uci::type::EntityOrbitalElementSetRequestMDT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalElementSetRequestMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalElementSetRequestMT:
      asb_uci::type::EntityOrbitalElementSetRequestMT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalElementSetRequestMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalElementSetRequestStatusMDT:
      asb_uci::type::EntityOrbitalElementSetRequestStatusMDT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalElementSetRequestStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalElementSetRequestStatusMT:
      asb_uci::type::EntityOrbitalElementSetRequestStatusMT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalElementSetRequestStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalElementSetType:
      asb_uci::type::EntityOrbitalElementSetType::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalElementSetType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalEphemerisID_Type:
      asb_uci::type::EntityOrbitalEphemerisID_Type::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalEphemerisID_Type&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalEphemerisMDT:
      asb_uci::type::EntityOrbitalEphemerisMDT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalEphemerisMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalEphemerisMT:
      asb_uci::type::EntityOrbitalEphemerisMT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalEphemerisMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalEphemerisRequestMDT:
      asb_uci::type::EntityOrbitalEphemerisRequestMDT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalEphemerisRequestMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalEphemerisRequestMT:
      asb_uci::type::EntityOrbitalEphemerisRequestMT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalEphemerisRequestMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalEphemerisRequestStatusMDT:
      asb_uci::type::EntityOrbitalEphemerisRequestStatusMDT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalEphemerisRequestStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalEphemerisRequestStatusMT:
      asb_uci::type::EntityOrbitalEphemerisRequestStatusMT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalEphemerisRequestStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalEphemerisType:
      asb_uci::type::EntityOrbitalEphemerisType::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalEphemerisType&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalManeuverMT:
      asb_uci::type::EntityOrbitalManeuverMT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalManeuverMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalVCM_ID_Type:
      asb_uci::type::EntityOrbitalVCM_ID_Type::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalVCM_ID_Type&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalVCM_MDT:
      asb_uci::type::EntityOrbitalVCM_MDT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalVCM_MDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalVCM_MT:
      asb_uci::type::EntityOrbitalVCM_MT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalVCM_MT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalVCM_RequestMDT:
      asb_uci::type::EntityOrbitalVCM_RequestMDT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalVCM_RequestMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalVCM_RequestMT:
      asb_uci::type::EntityOrbitalVCM_RequestMT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalVCM_RequestMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalVCM_RequestStatusMDT:
      asb_uci::type::EntityOrbitalVCM_RequestStatusMDT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalVCM_RequestStatusMDT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalVCM_RequestStatusMT:
      asb_uci::type::EntityOrbitalVCM_RequestStatusMT::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalVCM_RequestStatusMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityOrbitalVCM_Type:
      asb_uci::type::EntityOrbitalVCM_Type::deserialize(propTree, dynamic_cast<uci::type::EntityOrbitalVCM_Type&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    case uci::type::accessorType::entityPropagationMT:
      asb_uci::type::EntityPropagationMT::deserialize(propTree, dynamic_cast<uci::type::EntityPropagationMT&>(accessor), nodeName, nsPrefix, topLevel);
      return true;
      break;
    default:
      return false;
  }
}

} // namespace util

} // namespace asb_uci

