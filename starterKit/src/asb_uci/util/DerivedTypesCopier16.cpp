/** @file DerivedTypesCopier16.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCopier16.h"

#include "asb_uci/type/RFD_ComponentIdentifierType.h"
#include "asb_uci/type/RF_ControlCommandMDT.h"
#include "asb_uci/type/RF_ControlCommandMT.h"
#include "asb_uci/type/RF_ControlCommandStatusMDT.h"
#include "asb_uci/type/RF_ControlCommandStatusMT.h"
#include "asb_uci/type/RF_ProfileID_Type.h"
#include "asb_uci/type/RF_ProfileMT.h"
#include "asb_uci/type/RF_ReportID_Type.h"
#include "asb_uci/type/RF_ReportMT.h"
#include "asb_uci/type/RF_ResourceAllocationID_Type.h"
#include "asb_uci/type/RF_ResourceAllocationMT.h"
#include "asb_uci/type/RF_ResourceAllocationRequestMDT.h"
#include "asb_uci/type/RF_ResourceAllocationRequestMT.h"
#include "asb_uci/type/RF_ResourceAllocationRequestStatusMDT.h"
#include "asb_uci/type/RF_ResourceAllocationRequestStatusMT.h"
#include "asb_uci/type/RF_ThreadInstanceSetupCommandMDT.h"
#include "asb_uci/type/RF_ThreadInstanceSetupCommandMT.h"
#include "asb_uci/type/RF_ThreadInstanceSetupCommandStatusMDT.h"
#include "asb_uci/type/RF_ThreadInstanceSetupCommandStatusMT.h"
#include "asb_uci/type/RSO_ApproachType.h"
#include "asb_uci/type/RSTA_FileTraceabilityType.h"
#include "asb_uci/type/RSTA_TraceabilityType.h"
#include "asb_uci/type/ResponsePlanValidationMT.h"
#include "asb_uci/type/ResponseStatusMDT.h"
#include "asb_uci/type/ResponseStatusMT.h"
#include "asb_uci/type/RouteActivityExecutionStatusType.h"
#include "asb_uci/type/RouteActivityPlanApprovalStatusMT.h"
#include "asb_uci/type/RouteActivityPlanCommandID_Type.h"
#include "asb_uci/type/RouteActivityPlanCommandMT.h"
#include "asb_uci/type/RouteActivityPlanCommandStatusMT.h"
#include "asb_uci/type/RouteActivityPlanExecutionStatusMT.h"
#include "asb_uci/type/RouteActivityPlanID_Type.h"
#include "asb_uci/type/RouteActivityPlanInputsType.h"
#include "asb_uci/type/RouteActivityPlanMT.h"
#include "asb_uci/type/RouteActivityPlanStatusMT.h"
#include "asb_uci/type/RouteActivityPlanStatusType.h"
#include "asb_uci/type/RouteActivityPlanValidationCommandMDT.h"
#include "asb_uci/type/RouteActivityPlanValidationCommandMT.h"
#include "asb_uci/type/RouteActivityPlanValidationCommandStatusMDT.h"
#include "asb_uci/type/RouteActivityPlanValidationCommandStatusMT.h"
#include "asb_uci/type/RouteActivityPlanValidationID_Type.h"
#include "asb_uci/type/RouteActivityPlanValidationInputsType.h"
#include "asb_uci/type/RouteActivityPlanValidationMT.h"
#include "asb_uci/type/RouteActivityType.h"
#include "asb_uci/type/RouteExecutionPlanSetType.h"
#include "asb_uci/type/RouteMetricsID_Type.h"
#include "asb_uci/type/RouteMetricsMT.h"
#include "asb_uci/type/RouteMetricsRequestMDT.h"
#include "asb_uci/type/RouteMetricsRequestMT.h"
#include "asb_uci/type/RouteMetricsRequestStatusMDT.h"
#include "asb_uci/type/RouteMetricsRequestStatusMT.h"
#include "asb_uci/type/RouteModificationRequestMDT.h"
#include "asb_uci/type/RouteModificationRequestMT.h"
#include "asb_uci/type/RouteModificationRequestStatusMDT.h"
#include "asb_uci/type/RouteModificationRequestStatusMT.h"
#include "asb_uci/type/RoutePlanApprovalStatusMT.h"
#include "asb_uci/type/RoutePlanCommandID_Type.h"
#include "asb_uci/type/RoutePlanCommandMT.h"
#include "asb_uci/type/RoutePlanCommandStatusMT.h"
#include "asb_uci/type/RoutePlanExecutionStatusMT.h"
#include "asb_uci/type/RoutePlanID_Type.h"
#include "asb_uci/type/RoutePlanInputsType.h"
#include "asb_uci/type/RoutePlanMT.h"
#include "asb_uci/type/RoutePlanProcessDescriptionType.h"
#include "asb_uci/type/RoutePlanStatusMT.h"
#include "asb_uci/type/RoutePlanStatusType.h"
#include "asb_uci/type/RoutePlanValidationCommandMDT.h"
#include "asb_uci/type/RoutePlanValidationCommandMT.h"
#include "asb_uci/type/RoutePlanValidationCommandStatusMDT.h"
#include "asb_uci/type/RoutePlanValidationCommandStatusMT.h"
#include "asb_uci/type/RoutePlanValidationID_Type.h"
#include "asb_uci/type/RoutePlanValidationInputsType.h"
#include "asb_uci/type/RoutePlanValidationMT.h"
#include "asb_uci/type/RoutePlanningCandidateType.h"
#include "asb_uci/type/RouteVulnerabilityMetricsRequestType.h"
#include "asb_uci/type/RunwayID_Type.h"
#include "asb_uci/type/SAR_ActivityCommandType.h"
#include "asb_uci/type/SAR_ActivityMT.h"
#include "asb_uci/type/SAR_ActivityType.h"
#include "asb_uci/type/SAR_AutomaticTargetDetectionParametersType.h"
#include "asb_uci/type/SAR_CapabilityCommandType.h"
#include "asb_uci/type/SAR_CapabilityMDT.h"
#include "asb_uci/type/SAR_CapabilityMT.h"
#include "asb_uci/type/SAR_CapabilityStatusMDT.h"
#include "asb_uci/type/SAR_CapabilityStatusMT.h"
#include "asb_uci/type/SAR_CapabilityStatusType.h"
#include "asb_uci/type/SAR_CapabilityType.h"
#include "asb_uci/type/SAR_CoherentChangeDetectionParametersType.h"
#include "asb_uci/type/SAR_CollectionConstraintsType.h"
#include "asb_uci/type/SAR_CollectionOptionsType.h"
#include "asb_uci/type/SAR_CommandMT.h"
#include "asb_uci/type/SAR_CommandStatusMDT.h"
#include "asb_uci/type/SAR_CommandStatusMT.h"
#include "asb_uci/type/SAR_DynamicImageParametersType.h"
#include "asb_uci/type/SAR_ProcessingParametersType.h"
#include "asb_uci/type/SAR_SettingsCommandMDT.h"
#include "asb_uci/type/SAR_SettingsCommandMT.h"
#include "asb_uci/type/SAR_SettingsCommandStatusMDT.h"
#include "asb_uci/type/SAR_SettingsCommandStatusMT.h"
#include "asb_uci/type/SAR_TaskAchievabilityAssessmentRequestType.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"
#include "uci/type/RFD_ComponentIdentifierType.h"
#include "uci/type/RF_ControlCommandMDT.h"
#include "uci/type/RF_ControlCommandMT.h"
#include "uci/type/RF_ControlCommandStatusMDT.h"
#include "uci/type/RF_ControlCommandStatusMT.h"
#include "uci/type/RF_ProfileID_Type.h"
#include "uci/type/RF_ProfileMT.h"
#include "uci/type/RF_ReportID_Type.h"
#include "uci/type/RF_ReportMT.h"
#include "uci/type/RF_ResourceAllocationID_Type.h"
#include "uci/type/RF_ResourceAllocationMT.h"
#include "uci/type/RF_ResourceAllocationRequestMDT.h"
#include "uci/type/RF_ResourceAllocationRequestMT.h"
#include "uci/type/RF_ResourceAllocationRequestStatusMDT.h"
#include "uci/type/RF_ResourceAllocationRequestStatusMT.h"
#include "uci/type/RF_ThreadInstanceSetupCommandMDT.h"
#include "uci/type/RF_ThreadInstanceSetupCommandMT.h"
#include "uci/type/RF_ThreadInstanceSetupCommandStatusMDT.h"
#include "uci/type/RF_ThreadInstanceSetupCommandStatusMT.h"
#include "uci/type/RSO_ApproachType.h"
#include "uci/type/RSTA_FileTraceabilityType.h"
#include "uci/type/RSTA_TraceabilityType.h"
#include "uci/type/ResponsePlanValidationMT.h"
#include "uci/type/ResponseStatusMDT.h"
#include "uci/type/ResponseStatusMT.h"
#include "uci/type/RouteActivityExecutionStatusType.h"
#include "uci/type/RouteActivityPlanApprovalStatusMT.h"
#include "uci/type/RouteActivityPlanCommandID_Type.h"
#include "uci/type/RouteActivityPlanCommandMT.h"
#include "uci/type/RouteActivityPlanCommandStatusMT.h"
#include "uci/type/RouteActivityPlanExecutionStatusMT.h"
#include "uci/type/RouteActivityPlanID_Type.h"
#include "uci/type/RouteActivityPlanInputsType.h"
#include "uci/type/RouteActivityPlanMT.h"
#include "uci/type/RouteActivityPlanStatusMT.h"
#include "uci/type/RouteActivityPlanStatusType.h"
#include "uci/type/RouteActivityPlanValidationCommandMDT.h"
#include "uci/type/RouteActivityPlanValidationCommandMT.h"
#include "uci/type/RouteActivityPlanValidationCommandStatusMDT.h"
#include "uci/type/RouteActivityPlanValidationCommandStatusMT.h"
#include "uci/type/RouteActivityPlanValidationID_Type.h"
#include "uci/type/RouteActivityPlanValidationInputsType.h"
#include "uci/type/RouteActivityPlanValidationMT.h"
#include "uci/type/RouteActivityType.h"
#include "uci/type/RouteExecutionPlanSetType.h"
#include "uci/type/RouteMetricsID_Type.h"
#include "uci/type/RouteMetricsMT.h"
#include "uci/type/RouteMetricsRequestMDT.h"
#include "uci/type/RouteMetricsRequestMT.h"
#include "uci/type/RouteMetricsRequestStatusMDT.h"
#include "uci/type/RouteMetricsRequestStatusMT.h"
#include "uci/type/RouteModificationRequestMDT.h"
#include "uci/type/RouteModificationRequestMT.h"
#include "uci/type/RouteModificationRequestStatusMDT.h"
#include "uci/type/RouteModificationRequestStatusMT.h"
#include "uci/type/RoutePlanApprovalStatusMT.h"
#include "uci/type/RoutePlanCommandID_Type.h"
#include "uci/type/RoutePlanCommandMT.h"
#include "uci/type/RoutePlanCommandStatusMT.h"
#include "uci/type/RoutePlanExecutionStatusMT.h"
#include "uci/type/RoutePlanID_Type.h"
#include "uci/type/RoutePlanInputsType.h"
#include "uci/type/RoutePlanMT.h"
#include "uci/type/RoutePlanProcessDescriptionType.h"
#include "uci/type/RoutePlanStatusMT.h"
#include "uci/type/RoutePlanStatusType.h"
#include "uci/type/RoutePlanValidationCommandMDT.h"
#include "uci/type/RoutePlanValidationCommandMT.h"
#include "uci/type/RoutePlanValidationCommandStatusMDT.h"
#include "uci/type/RoutePlanValidationCommandStatusMT.h"
#include "uci/type/RoutePlanValidationID_Type.h"
#include "uci/type/RoutePlanValidationInputsType.h"
#include "uci/type/RoutePlanValidationMT.h"
#include "uci/type/RoutePlanningCandidateType.h"
#include "uci/type/RouteVulnerabilityMetricsRequestType.h"
#include "uci/type/RunwayID_Type.h"
#include "uci/type/SAR_ActivityCommandType.h"
#include "uci/type/SAR_ActivityMT.h"
#include "uci/type/SAR_ActivityType.h"
#include "uci/type/SAR_AutomaticTargetDetectionParametersType.h"
#include "uci/type/SAR_CapabilityCommandType.h"
#include "uci/type/SAR_CapabilityMDT.h"
#include "uci/type/SAR_CapabilityMT.h"
#include "uci/type/SAR_CapabilityStatusMDT.h"
#include "uci/type/SAR_CapabilityStatusMT.h"
#include "uci/type/SAR_CapabilityStatusType.h"
#include "uci/type/SAR_CapabilityType.h"
#include "uci/type/SAR_CoherentChangeDetectionParametersType.h"
#include "uci/type/SAR_CollectionConstraintsType.h"
#include "uci/type/SAR_CollectionOptionsType.h"
#include "uci/type/SAR_CommandMT.h"
#include "uci/type/SAR_CommandStatusMDT.h"
#include "uci/type/SAR_CommandStatusMT.h"
#include "uci/type/SAR_DynamicImageParametersType.h"
#include "uci/type/SAR_ProcessingParametersType.h"
#include "uci/type/SAR_SettingsCommandMDT.h"
#include "uci/type/SAR_SettingsCommandMT.h"
#include "uci/type/SAR_SettingsCommandStatusMDT.h"
#include "uci/type/SAR_SettingsCommandStatusMT.h"
#include "uci/type/SAR_TaskAchievabilityAssessmentRequestType.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

bool DerivedTypesCopier16::copy(const uci::base::Accessor& source, uci::base::Accessor& destination) {
  switch (source.getAccessorType()) {
    case uci::type::accessorType::responsePlanValidationMT:
      dynamic_cast<asb_uci::type::ResponsePlanValidationMT&>(destination).copyImpl(dynamic_cast<const uci::type::ResponsePlanValidationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::responseStatusMDT:
      dynamic_cast<asb_uci::type::ResponseStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ResponseStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::responseStatusMT:
      dynamic_cast<asb_uci::type::ResponseStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ResponseStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ControlCommandMDT:
      dynamic_cast<asb_uci::type::RF_ControlCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ControlCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ControlCommandMT:
      dynamic_cast<asb_uci::type::RF_ControlCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ControlCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ControlCommandStatusMDT:
      dynamic_cast<asb_uci::type::RF_ControlCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ControlCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ControlCommandStatusMT:
      dynamic_cast<asb_uci::type::RF_ControlCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ControlCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ProfileID_Type:
      dynamic_cast<asb_uci::type::RF_ProfileID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ProfileID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ProfileMT:
      dynamic_cast<asb_uci::type::RF_ProfileMT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ProfileMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ReportID_Type:
      dynamic_cast<asb_uci::type::RF_ReportID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ReportID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ReportMT:
      dynamic_cast<asb_uci::type::RF_ReportMT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ReportMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ResourceAllocationID_Type:
      dynamic_cast<asb_uci::type::RF_ResourceAllocationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ResourceAllocationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ResourceAllocationMT:
      dynamic_cast<asb_uci::type::RF_ResourceAllocationMT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ResourceAllocationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ResourceAllocationRequestMDT:
      dynamic_cast<asb_uci::type::RF_ResourceAllocationRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ResourceAllocationRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ResourceAllocationRequestMT:
      dynamic_cast<asb_uci::type::RF_ResourceAllocationRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ResourceAllocationRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ResourceAllocationRequestStatusMDT:
      dynamic_cast<asb_uci::type::RF_ResourceAllocationRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ResourceAllocationRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ResourceAllocationRequestStatusMT:
      dynamic_cast<asb_uci::type::RF_ResourceAllocationRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ResourceAllocationRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ThreadInstanceSetupCommandMDT:
      dynamic_cast<asb_uci::type::RF_ThreadInstanceSetupCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ThreadInstanceSetupCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ThreadInstanceSetupCommandMT:
      dynamic_cast<asb_uci::type::RF_ThreadInstanceSetupCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ThreadInstanceSetupCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ThreadInstanceSetupCommandStatusMDT:
      dynamic_cast<asb_uci::type::RF_ThreadInstanceSetupCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ThreadInstanceSetupCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rF_ThreadInstanceSetupCommandStatusMT:
      dynamic_cast<asb_uci::type::RF_ThreadInstanceSetupCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RF_ThreadInstanceSetupCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rFD_ComponentIdentifierType:
      dynamic_cast<asb_uci::type::RFD_ComponentIdentifierType&>(destination).copyImpl(dynamic_cast<const uci::type::RFD_ComponentIdentifierType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityExecutionStatusType:
      dynamic_cast<asb_uci::type::RouteActivityExecutionStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityExecutionStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanApprovalStatusMT:
      dynamic_cast<asb_uci::type::RouteActivityPlanApprovalStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanApprovalStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanCommandID_Type:
      dynamic_cast<asb_uci::type::RouteActivityPlanCommandID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanCommandID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanCommandMT:
      dynamic_cast<asb_uci::type::RouteActivityPlanCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanCommandStatusMT:
      dynamic_cast<asb_uci::type::RouteActivityPlanCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanExecutionStatusMT:
      dynamic_cast<asb_uci::type::RouteActivityPlanExecutionStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanExecutionStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanID_Type:
      dynamic_cast<asb_uci::type::RouteActivityPlanID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanInputsType:
      dynamic_cast<asb_uci::type::RouteActivityPlanInputsType&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanInputsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanMT:
      dynamic_cast<asb_uci::type::RouteActivityPlanMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanStatusMT:
      dynamic_cast<asb_uci::type::RouteActivityPlanStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanStatusType:
      dynamic_cast<asb_uci::type::RouteActivityPlanStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanValidationCommandMDT:
      dynamic_cast<asb_uci::type::RouteActivityPlanValidationCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanValidationCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanValidationCommandMT:
      dynamic_cast<asb_uci::type::RouteActivityPlanValidationCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanValidationCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanValidationCommandStatusMDT:
      dynamic_cast<asb_uci::type::RouteActivityPlanValidationCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanValidationCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanValidationCommandStatusMT:
      dynamic_cast<asb_uci::type::RouteActivityPlanValidationCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanValidationCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanValidationID_Type:
      dynamic_cast<asb_uci::type::RouteActivityPlanValidationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanValidationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanValidationInputsType:
      dynamic_cast<asb_uci::type::RouteActivityPlanValidationInputsType&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanValidationInputsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityPlanValidationMT:
      dynamic_cast<asb_uci::type::RouteActivityPlanValidationMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityPlanValidationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeActivityType:
      dynamic_cast<asb_uci::type::RouteActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::RouteActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeExecutionPlanSetType:
      dynamic_cast<asb_uci::type::RouteExecutionPlanSetType&>(destination).copyImpl(dynamic_cast<const uci::type::RouteExecutionPlanSetType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeMetricsID_Type:
      dynamic_cast<asb_uci::type::RouteMetricsID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::RouteMetricsID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeMetricsMT:
      dynamic_cast<asb_uci::type::RouteMetricsMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteMetricsMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeMetricsRequestMDT:
      dynamic_cast<asb_uci::type::RouteMetricsRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteMetricsRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeMetricsRequestMT:
      dynamic_cast<asb_uci::type::RouteMetricsRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteMetricsRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeMetricsRequestStatusMDT:
      dynamic_cast<asb_uci::type::RouteMetricsRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteMetricsRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeMetricsRequestStatusMT:
      dynamic_cast<asb_uci::type::RouteMetricsRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteMetricsRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeModificationRequestMDT:
      dynamic_cast<asb_uci::type::RouteModificationRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteModificationRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeModificationRequestMT:
      dynamic_cast<asb_uci::type::RouteModificationRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteModificationRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeModificationRequestStatusMDT:
      dynamic_cast<asb_uci::type::RouteModificationRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteModificationRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeModificationRequestStatusMT:
      dynamic_cast<asb_uci::type::RouteModificationRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RouteModificationRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanApprovalStatusMT:
      dynamic_cast<asb_uci::type::RoutePlanApprovalStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanApprovalStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanCommandID_Type:
      dynamic_cast<asb_uci::type::RoutePlanCommandID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanCommandID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanCommandMT:
      dynamic_cast<asb_uci::type::RoutePlanCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanCommandStatusMT:
      dynamic_cast<asb_uci::type::RoutePlanCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanExecutionStatusMT:
      dynamic_cast<asb_uci::type::RoutePlanExecutionStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanExecutionStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanID_Type:
      dynamic_cast<asb_uci::type::RoutePlanID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanInputsType:
      dynamic_cast<asb_uci::type::RoutePlanInputsType&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanInputsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanMT:
      dynamic_cast<asb_uci::type::RoutePlanMT&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanningCandidateType:
      dynamic_cast<asb_uci::type::RoutePlanningCandidateType&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanningCandidateType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanProcessDescriptionType:
      dynamic_cast<asb_uci::type::RoutePlanProcessDescriptionType&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanProcessDescriptionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanStatusMT:
      dynamic_cast<asb_uci::type::RoutePlanStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanStatusType:
      dynamic_cast<asb_uci::type::RoutePlanStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanValidationCommandMDT:
      dynamic_cast<asb_uci::type::RoutePlanValidationCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanValidationCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanValidationCommandMT:
      dynamic_cast<asb_uci::type::RoutePlanValidationCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanValidationCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanValidationCommandStatusMDT:
      dynamic_cast<asb_uci::type::RoutePlanValidationCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanValidationCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanValidationCommandStatusMT:
      dynamic_cast<asb_uci::type::RoutePlanValidationCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanValidationCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanValidationID_Type:
      dynamic_cast<asb_uci::type::RoutePlanValidationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanValidationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanValidationInputsType:
      dynamic_cast<asb_uci::type::RoutePlanValidationInputsType&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanValidationInputsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routePlanValidationMT:
      dynamic_cast<asb_uci::type::RoutePlanValidationMT&>(destination).copyImpl(dynamic_cast<const uci::type::RoutePlanValidationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::routeVulnerabilityMetricsRequestType:
      dynamic_cast<asb_uci::type::RouteVulnerabilityMetricsRequestType&>(destination).copyImpl(dynamic_cast<const uci::type::RouteVulnerabilityMetricsRequestType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rSO_ApproachType:
      dynamic_cast<asb_uci::type::RSO_ApproachType&>(destination).copyImpl(dynamic_cast<const uci::type::RSO_ApproachType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rSTA_FileTraceabilityType:
      dynamic_cast<asb_uci::type::RSTA_FileTraceabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::RSTA_FileTraceabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::rSTA_TraceabilityType:
      dynamic_cast<asb_uci::type::RSTA_TraceabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::RSTA_TraceabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::runwayID_Type:
      dynamic_cast<asb_uci::type::RunwayID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::RunwayID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_ActivityCommandType:
      dynamic_cast<asb_uci::type::SAR_ActivityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_ActivityCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_ActivityMT:
      dynamic_cast<asb_uci::type::SAR_ActivityMT&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_ActivityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_ActivityType:
      dynamic_cast<asb_uci::type::SAR_ActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_ActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_AutomaticTargetDetectionParametersType:
      dynamic_cast<asb_uci::type::SAR_AutomaticTargetDetectionParametersType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_AutomaticTargetDetectionParametersType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CapabilityCommandType:
      dynamic_cast<asb_uci::type::SAR_CapabilityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CapabilityCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CapabilityMDT:
      dynamic_cast<asb_uci::type::SAR_CapabilityMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CapabilityMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CapabilityMT:
      dynamic_cast<asb_uci::type::SAR_CapabilityMT&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CapabilityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CapabilityStatusMDT:
      dynamic_cast<asb_uci::type::SAR_CapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CapabilityStatusMT:
      dynamic_cast<asb_uci::type::SAR_CapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CapabilityStatusType:
      dynamic_cast<asb_uci::type::SAR_CapabilityStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CapabilityStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CapabilityType:
      dynamic_cast<asb_uci::type::SAR_CapabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CapabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CoherentChangeDetectionParametersType:
      dynamic_cast<asb_uci::type::SAR_CoherentChangeDetectionParametersType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CoherentChangeDetectionParametersType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CollectionConstraintsType:
      dynamic_cast<asb_uci::type::SAR_CollectionConstraintsType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CollectionConstraintsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CollectionOptionsType:
      dynamic_cast<asb_uci::type::SAR_CollectionOptionsType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CollectionOptionsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CommandMT:
      dynamic_cast<asb_uci::type::SAR_CommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CommandStatusMDT:
      dynamic_cast<asb_uci::type::SAR_CommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_CommandStatusMT:
      dynamic_cast<asb_uci::type::SAR_CommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_CommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_DynamicImageParametersType:
      dynamic_cast<asb_uci::type::SAR_DynamicImageParametersType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_DynamicImageParametersType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_ProcessingParametersType:
      dynamic_cast<asb_uci::type::SAR_ProcessingParametersType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_ProcessingParametersType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_SettingsCommandMDT:
      dynamic_cast<asb_uci::type::SAR_SettingsCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_SettingsCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_SettingsCommandMT:
      dynamic_cast<asb_uci::type::SAR_SettingsCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_SettingsCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_SettingsCommandStatusMDT:
      dynamic_cast<asb_uci::type::SAR_SettingsCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_SettingsCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_SettingsCommandStatusMT:
      dynamic_cast<asb_uci::type::SAR_SettingsCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_SettingsCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sAR_TaskAchievabilityAssessmentRequestType:
      dynamic_cast<asb_uci::type::SAR_TaskAchievabilityAssessmentRequestType&>(destination).copyImpl(dynamic_cast<const uci::type::SAR_TaskAchievabilityAssessmentRequestType&>(source), false);
      return true;
      break;
    default:
      return false;
  }
}

} // namespace util

} // namespace asb_uci

