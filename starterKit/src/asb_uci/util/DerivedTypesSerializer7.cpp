/** @file DerivedTypesSerializer7.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesSerializer7.h"

#include <string>

#include <boost/none.hpp>
#include <boost/property_tree/ptree.hpp>

#include "asb_uci/type/EffectActivityType.h"
#include "asb_uci/type/EffectAllocationType.h"
#include "asb_uci/type/EffectCancelCommandMDT.h"
#include "asb_uci/type/EffectCancelCommandMT.h"
#include "asb_uci/type/EffectCancelCommandStatusMDT.h"
#include "asb_uci/type/EffectCancelCommandStatusMT.h"
#include "asb_uci/type/EffectCapabilityCommandType.h"
#include "asb_uci/type/EffectCapabilityMDT.h"
#include "asb_uci/type/EffectCapabilityMT.h"
#include "asb_uci/type/EffectCapabilityStatusMDT.h"
#include "asb_uci/type/EffectCapabilityStatusMT.h"
#include "asb_uci/type/EffectCapabilityType.h"
#include "asb_uci/type/EffectCommandMT.h"
#include "asb_uci/type/EffectCommandStatusMDT.h"
#include "asb_uci/type/EffectCommandStatusMT.h"
#include "asb_uci/type/EffectExecutionApprovalStatusMDT.h"
#include "asb_uci/type/EffectExecutionApprovalStatusMT.h"
#include "asb_uci/type/EffectID_Type.h"
#include "asb_uci/type/EffectMT.h"
#include "asb_uci/type/EffectPlanApprovalStatusMT.h"
#include "asb_uci/type/EffectPlanCommandID_Type.h"
#include "asb_uci/type/EffectPlanCommandMT.h"
#include "asb_uci/type/EffectPlanCommandStatusMT.h"
#include "asb_uci/type/EffectPlanExecutionStatusMT.h"
#include "asb_uci/type/EffectPlanID_Type.h"
#include "asb_uci/type/EffectPlanInputsType.h"
#include "asb_uci/type/EffectPlanMT.h"
#include "asb_uci/type/EffectPlanProcessDescriptionType.h"
#include "asb_uci/type/EffectPlanStatusMT.h"
#include "asb_uci/type/EffectPlanValidationCommandMDT.h"
#include "asb_uci/type/EffectPlanValidationCommandMT.h"
#include "asb_uci/type/EffectPlanValidationCommandStatusMDT.h"
#include "asb_uci/type/EffectPlanValidationCommandStatusMT.h"
#include "asb_uci/type/EffectPlanValidationID_Type.h"
#include "asb_uci/type/EffectPlanValidationInputsType.h"
#include "asb_uci/type/EffectPlanValidationMT.h"
#include "asb_uci/type/EffectPlanningResultType.h"
#include "asb_uci/type/EffectPlanningStatusMDT.h"
#include "asb_uci/type/EffectPlanningStatusMT.h"
#include "asb_uci/type/EffectStatusMDT.h"
#include "asb_uci/type/EffectStatusMT.h"
#include "asb_uci/type/ElevationRequestMDT.h"
#include "asb_uci/type/ElevationRequestMT.h"
#include "asb_uci/type/ElevationRequestStatusMDT.h"
#include "asb_uci/type/ElevationRequestStatusMT.h"
#include "asb_uci/type/ElevationVisibilityRequestMDT.h"
#include "asb_uci/type/ElevationVisibilityRequestMT.h"
#include "asb_uci/type/ElevationVisibilityRequestStatusMDT.h"
#include "asb_uci/type/ElevationVisibilityRequestStatusMT.h"
#include "asb_uci/type/EllipseType.h"
#include "asb_uci/type/EmergencyReferenceOpPointType.h"
#include "asb_uci/type/EmitterFixedPositionType.h"
#include "asb_uci/type/EnduranceBaseType.h"
#include "asb_uci/type/EnduranceType.h"
#include "asb_uci/type/EntityConfirmationMT.h"
#include "asb_uci/type/EntityConfirmationRequestMDT.h"
#include "asb_uci/type/EntityConfirmationRequestMT.h"
#include "asb_uci/type/EntityConfirmationRequestStatusMDT.h"
#include "asb_uci/type/EntityConfirmationRequestStatusMT.h"
#include "asb_uci/type/EntityEphemerisRequestParametersType.h"
#include "asb_uci/type/EntityID_Type.h"
#include "asb_uci/type/EntityIdentityType.h"
#include "asb_uci/type/EntityLostMT.h"
#include "asb_uci/type/EntityMT.h"
#include "asb_uci/type/EntityManagementRequestMDT.h"
#include "asb_uci/type/EntityManagementRequestMT.h"
#include "asb_uci/type/EntityManagementRequestStatusMDT.h"
#include "asb_uci/type/EntityManagementRequestStatusMT.h"
#include "asb_uci/type/EntityMetadataMT.h"
#include "asb_uci/type/EntityMetadataPET.h"
#include "asb_uci/type/EntityNotificationMDT.h"
#include "asb_uci/type/EntityNotificationMT.h"
#include "asb_uci/type/EntityOrbitalCSO_ID_Type.h"
#include "asb_uci/type/EntityOrbitalCSO_MT.h"
#include "asb_uci/type/EntityOrbitalElementSetID_Type.h"
#include "asb_uci/type/EntityOrbitalElementSetMDT.h"
#include "asb_uci/type/EntityOrbitalElementSetMT.h"
#include "asb_uci/type/EntityOrbitalElementSetRequestMDT.h"
#include "asb_uci/type/EntityOrbitalElementSetRequestMT.h"
#include "asb_uci/type/EntityOrbitalElementSetRequestStatusMDT.h"
#include "asb_uci/type/EntityOrbitalElementSetRequestStatusMT.h"
#include "asb_uci/type/EntityOrbitalElementSetType.h"
#include "asb_uci/type/EntityOrbitalEphemerisID_Type.h"
#include "asb_uci/type/EntityOrbitalEphemerisMDT.h"
#include "asb_uci/type/EntityOrbitalEphemerisMT.h"
#include "asb_uci/type/EntityOrbitalEphemerisRequestMDT.h"
#include "asb_uci/type/EntityOrbitalEphemerisRequestMT.h"
#include "asb_uci/type/EntityOrbitalEphemerisRequestStatusMDT.h"
#include "asb_uci/type/EntityOrbitalEphemerisRequestStatusMT.h"
#include "asb_uci/type/EntityOrbitalEphemerisType.h"
#include "asb_uci/type/EntityOrbitalManeuverMT.h"
#include "asb_uci/type/EntityOrbitalVCM_ID_Type.h"
#include "asb_uci/type/EntityOrbitalVCM_MDT.h"
#include "asb_uci/type/EntityOrbitalVCM_MT.h"
#include "asb_uci/type/EntityOrbitalVCM_RequestMDT.h"
#include "asb_uci/type/EntityOrbitalVCM_RequestMT.h"
#include "asb_uci/type/EntityOrbitalVCM_RequestStatusMDT.h"
#include "asb_uci/type/EntityOrbitalVCM_RequestStatusMT.h"
#include "asb_uci/type/EntityOrbitalVCM_Type.h"
#include "asb_uci/type/EntityPropagationMT.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"
#include "uci/type/EffectActivityType.h"
#include "uci/type/EffectAllocationType.h"
#include "uci/type/EffectCancelCommandMDT.h"
#include "uci/type/EffectCancelCommandMT.h"
#include "uci/type/EffectCancelCommandStatusMDT.h"
#include "uci/type/EffectCancelCommandStatusMT.h"
#include "uci/type/EffectCapabilityCommandType.h"
#include "uci/type/EffectCapabilityMDT.h"
#include "uci/type/EffectCapabilityMT.h"
#include "uci/type/EffectCapabilityStatusMDT.h"
#include "uci/type/EffectCapabilityStatusMT.h"
#include "uci/type/EffectCapabilityType.h"
#include "uci/type/EffectCommandMT.h"
#include "uci/type/EffectCommandStatusMDT.h"
#include "uci/type/EffectCommandStatusMT.h"
#include "uci/type/EffectExecutionApprovalStatusMDT.h"
#include "uci/type/EffectExecutionApprovalStatusMT.h"
#include "uci/type/EffectID_Type.h"
#include "uci/type/EffectMT.h"
#include "uci/type/EffectPlanApprovalStatusMT.h"
#include "uci/type/EffectPlanCommandID_Type.h"
#include "uci/type/EffectPlanCommandMT.h"
#include "uci/type/EffectPlanCommandStatusMT.h"
#include "uci/type/EffectPlanExecutionStatusMT.h"
#include "uci/type/EffectPlanID_Type.h"
#include "uci/type/EffectPlanInputsType.h"
#include "uci/type/EffectPlanMT.h"
#include "uci/type/EffectPlanProcessDescriptionType.h"
#include "uci/type/EffectPlanStatusMT.h"
#include "uci/type/EffectPlanValidationCommandMDT.h"
#include "uci/type/EffectPlanValidationCommandMT.h"
#include "uci/type/EffectPlanValidationCommandStatusMDT.h"
#include "uci/type/EffectPlanValidationCommandStatusMT.h"
#include "uci/type/EffectPlanValidationID_Type.h"
#include "uci/type/EffectPlanValidationInputsType.h"
#include "uci/type/EffectPlanValidationMT.h"
#include "uci/type/EffectPlanningResultType.h"
#include "uci/type/EffectPlanningStatusMDT.h"
#include "uci/type/EffectPlanningStatusMT.h"
#include "uci/type/EffectStatusMDT.h"
#include "uci/type/EffectStatusMT.h"
#include "uci/type/ElevationRequestMDT.h"
#include "uci/type/ElevationRequestMT.h"
#include "uci/type/ElevationRequestStatusMDT.h"
#include "uci/type/ElevationRequestStatusMT.h"
#include "uci/type/ElevationVisibilityRequestMDT.h"
#include "uci/type/ElevationVisibilityRequestMT.h"
#include "uci/type/ElevationVisibilityRequestStatusMDT.h"
#include "uci/type/ElevationVisibilityRequestStatusMT.h"
#include "uci/type/EllipseType.h"
#include "uci/type/EmergencyReferenceOpPointType.h"
#include "uci/type/EmitterFixedPositionType.h"
#include "uci/type/EnduranceBaseType.h"
#include "uci/type/EnduranceType.h"
#include "uci/type/EntityConfirmationMT.h"
#include "uci/type/EntityConfirmationRequestMDT.h"
#include "uci/type/EntityConfirmationRequestMT.h"
#include "uci/type/EntityConfirmationRequestStatusMDT.h"
#include "uci/type/EntityConfirmationRequestStatusMT.h"
#include "uci/type/EntityEphemerisRequestParametersType.h"
#include "uci/type/EntityID_Type.h"
#include "uci/type/EntityIdentityType.h"
#include "uci/type/EntityLostMT.h"
#include "uci/type/EntityMT.h"
#include "uci/type/EntityManagementRequestMDT.h"
#include "uci/type/EntityManagementRequestMT.h"
#include "uci/type/EntityManagementRequestStatusMDT.h"
#include "uci/type/EntityManagementRequestStatusMT.h"
#include "uci/type/EntityMetadataMT.h"
#include "uci/type/EntityMetadataPET.h"
#include "uci/type/EntityNotificationMDT.h"
#include "uci/type/EntityNotificationMT.h"
#include "uci/type/EntityOrbitalCSO_ID_Type.h"
#include "uci/type/EntityOrbitalCSO_MT.h"
#include "uci/type/EntityOrbitalElementSetID_Type.h"
#include "uci/type/EntityOrbitalElementSetMDT.h"
#include "uci/type/EntityOrbitalElementSetMT.h"
#include "uci/type/EntityOrbitalElementSetRequestMDT.h"
#include "uci/type/EntityOrbitalElementSetRequestMT.h"
#include "uci/type/EntityOrbitalElementSetRequestStatusMDT.h"
#include "uci/type/EntityOrbitalElementSetRequestStatusMT.h"
#include "uci/type/EntityOrbitalElementSetType.h"
#include "uci/type/EntityOrbitalEphemerisID_Type.h"
#include "uci/type/EntityOrbitalEphemerisMDT.h"
#include "uci/type/EntityOrbitalEphemerisMT.h"
#include "uci/type/EntityOrbitalEphemerisRequestMDT.h"
#include "uci/type/EntityOrbitalEphemerisRequestMT.h"
#include "uci/type/EntityOrbitalEphemerisRequestStatusMDT.h"
#include "uci/type/EntityOrbitalEphemerisRequestStatusMT.h"
#include "uci/type/EntityOrbitalEphemerisType.h"
#include "uci/type/EntityOrbitalManeuverMT.h"
#include "uci/type/EntityOrbitalVCM_ID_Type.h"
#include "uci/type/EntityOrbitalVCM_MDT.h"
#include "uci/type/EntityOrbitalVCM_MT.h"
#include "uci/type/EntityOrbitalVCM_RequestMDT.h"
#include "uci/type/EntityOrbitalVCM_RequestMT.h"
#include "uci/type/EntityOrbitalVCM_RequestStatusMDT.h"
#include "uci/type/EntityOrbitalVCM_RequestStatusMT.h"
#include "uci/type/EntityOrbitalVCM_Type.h"
#include "uci/type/EntityPropagationMT.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

boost::optional<std::string> DerivedTypesSerializer7::serialize(const uci::base::Accessor& accessor, boost::property_tree::ptree& propTree, const std::string& nodeName, const bool createNode) {
  switch (accessor.getAccessorType()) {
    case uci::type::accessorType::effectActivityType:
      return asb_uci::type::EffectActivityType::serialize(dynamic_cast<const uci::type::EffectActivityType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectAllocationType:
      return asb_uci::type::EffectAllocationType::serialize(dynamic_cast<const uci::type::EffectAllocationType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCancelCommandMDT:
      return asb_uci::type::EffectCancelCommandMDT::serialize(dynamic_cast<const uci::type::EffectCancelCommandMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCancelCommandMT:
      return asb_uci::type::EffectCancelCommandMT::serialize(dynamic_cast<const uci::type::EffectCancelCommandMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCancelCommandStatusMDT:
      return asb_uci::type::EffectCancelCommandStatusMDT::serialize(dynamic_cast<const uci::type::EffectCancelCommandStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCancelCommandStatusMT:
      return asb_uci::type::EffectCancelCommandStatusMT::serialize(dynamic_cast<const uci::type::EffectCancelCommandStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCapabilityCommandType:
      return asb_uci::type::EffectCapabilityCommandType::serialize(dynamic_cast<const uci::type::EffectCapabilityCommandType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCapabilityMDT:
      return asb_uci::type::EffectCapabilityMDT::serialize(dynamic_cast<const uci::type::EffectCapabilityMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCapabilityMT:
      return asb_uci::type::EffectCapabilityMT::serialize(dynamic_cast<const uci::type::EffectCapabilityMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCapabilityStatusMDT:
      return asb_uci::type::EffectCapabilityStatusMDT::serialize(dynamic_cast<const uci::type::EffectCapabilityStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCapabilityStatusMT:
      return asb_uci::type::EffectCapabilityStatusMT::serialize(dynamic_cast<const uci::type::EffectCapabilityStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCapabilityType:
      return asb_uci::type::EffectCapabilityType::serialize(dynamic_cast<const uci::type::EffectCapabilityType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCommandMT:
      return asb_uci::type::EffectCommandMT::serialize(dynamic_cast<const uci::type::EffectCommandMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCommandStatusMDT:
      return asb_uci::type::EffectCommandStatusMDT::serialize(dynamic_cast<const uci::type::EffectCommandStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectCommandStatusMT:
      return asb_uci::type::EffectCommandStatusMT::serialize(dynamic_cast<const uci::type::EffectCommandStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectExecutionApprovalStatusMDT:
      return asb_uci::type::EffectExecutionApprovalStatusMDT::serialize(dynamic_cast<const uci::type::EffectExecutionApprovalStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectExecutionApprovalStatusMT:
      return asb_uci::type::EffectExecutionApprovalStatusMT::serialize(dynamic_cast<const uci::type::EffectExecutionApprovalStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectID_Type:
      return asb_uci::type::EffectID_Type::serialize(dynamic_cast<const uci::type::EffectID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectMT:
      return asb_uci::type::EffectMT::serialize(dynamic_cast<const uci::type::EffectMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanApprovalStatusMT:
      return asb_uci::type::EffectPlanApprovalStatusMT::serialize(dynamic_cast<const uci::type::EffectPlanApprovalStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanCommandID_Type:
      return asb_uci::type::EffectPlanCommandID_Type::serialize(dynamic_cast<const uci::type::EffectPlanCommandID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanCommandMT:
      return asb_uci::type::EffectPlanCommandMT::serialize(dynamic_cast<const uci::type::EffectPlanCommandMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanCommandStatusMT:
      return asb_uci::type::EffectPlanCommandStatusMT::serialize(dynamic_cast<const uci::type::EffectPlanCommandStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanExecutionStatusMT:
      return asb_uci::type::EffectPlanExecutionStatusMT::serialize(dynamic_cast<const uci::type::EffectPlanExecutionStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanID_Type:
      return asb_uci::type::EffectPlanID_Type::serialize(dynamic_cast<const uci::type::EffectPlanID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanInputsType:
      return asb_uci::type::EffectPlanInputsType::serialize(dynamic_cast<const uci::type::EffectPlanInputsType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanMT:
      return asb_uci::type::EffectPlanMT::serialize(dynamic_cast<const uci::type::EffectPlanMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanningResultType:
      return asb_uci::type::EffectPlanningResultType::serialize(dynamic_cast<const uci::type::EffectPlanningResultType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanningStatusMDT:
      return asb_uci::type::EffectPlanningStatusMDT::serialize(dynamic_cast<const uci::type::EffectPlanningStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanningStatusMT:
      return asb_uci::type::EffectPlanningStatusMT::serialize(dynamic_cast<const uci::type::EffectPlanningStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanProcessDescriptionType:
      return asb_uci::type::EffectPlanProcessDescriptionType::serialize(dynamic_cast<const uci::type::EffectPlanProcessDescriptionType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanStatusMT:
      return asb_uci::type::EffectPlanStatusMT::serialize(dynamic_cast<const uci::type::EffectPlanStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanValidationCommandMDT:
      return asb_uci::type::EffectPlanValidationCommandMDT::serialize(dynamic_cast<const uci::type::EffectPlanValidationCommandMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanValidationCommandMT:
      return asb_uci::type::EffectPlanValidationCommandMT::serialize(dynamic_cast<const uci::type::EffectPlanValidationCommandMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanValidationCommandStatusMDT:
      return asb_uci::type::EffectPlanValidationCommandStatusMDT::serialize(dynamic_cast<const uci::type::EffectPlanValidationCommandStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanValidationCommandStatusMT:
      return asb_uci::type::EffectPlanValidationCommandStatusMT::serialize(dynamic_cast<const uci::type::EffectPlanValidationCommandStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanValidationID_Type:
      return asb_uci::type::EffectPlanValidationID_Type::serialize(dynamic_cast<const uci::type::EffectPlanValidationID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanValidationInputsType:
      return asb_uci::type::EffectPlanValidationInputsType::serialize(dynamic_cast<const uci::type::EffectPlanValidationInputsType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectPlanValidationMT:
      return asb_uci::type::EffectPlanValidationMT::serialize(dynamic_cast<const uci::type::EffectPlanValidationMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectStatusMDT:
      return asb_uci::type::EffectStatusMDT::serialize(dynamic_cast<const uci::type::EffectStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::effectStatusMT:
      return asb_uci::type::EffectStatusMT::serialize(dynamic_cast<const uci::type::EffectStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::elevationRequestMDT:
      return asb_uci::type::ElevationRequestMDT::serialize(dynamic_cast<const uci::type::ElevationRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::elevationRequestMT:
      return asb_uci::type::ElevationRequestMT::serialize(dynamic_cast<const uci::type::ElevationRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::elevationRequestStatusMDT:
      return asb_uci::type::ElevationRequestStatusMDT::serialize(dynamic_cast<const uci::type::ElevationRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::elevationRequestStatusMT:
      return asb_uci::type::ElevationRequestStatusMT::serialize(dynamic_cast<const uci::type::ElevationRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::elevationVisibilityRequestMDT:
      return asb_uci::type::ElevationVisibilityRequestMDT::serialize(dynamic_cast<const uci::type::ElevationVisibilityRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::elevationVisibilityRequestMT:
      return asb_uci::type::ElevationVisibilityRequestMT::serialize(dynamic_cast<const uci::type::ElevationVisibilityRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::elevationVisibilityRequestStatusMDT:
      return asb_uci::type::ElevationVisibilityRequestStatusMDT::serialize(dynamic_cast<const uci::type::ElevationVisibilityRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::elevationVisibilityRequestStatusMT:
      return asb_uci::type::ElevationVisibilityRequestStatusMT::serialize(dynamic_cast<const uci::type::ElevationVisibilityRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::ellipseType:
      return asb_uci::type::EllipseType::serialize(dynamic_cast<const uci::type::EllipseType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::emergencyReferenceOpPointType:
      return asb_uci::type::EmergencyReferenceOpPointType::serialize(dynamic_cast<const uci::type::EmergencyReferenceOpPointType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::emitterFixedPositionType:
      return asb_uci::type::EmitterFixedPositionType::serialize(dynamic_cast<const uci::type::EmitterFixedPositionType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::enduranceBaseType:
      return asb_uci::type::EnduranceBaseType::serialize(dynamic_cast<const uci::type::EnduranceBaseType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::enduranceType:
      return asb_uci::type::EnduranceType::serialize(dynamic_cast<const uci::type::EnduranceType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityConfirmationMT:
      return asb_uci::type::EntityConfirmationMT::serialize(dynamic_cast<const uci::type::EntityConfirmationMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityConfirmationRequestMDT:
      return asb_uci::type::EntityConfirmationRequestMDT::serialize(dynamic_cast<const uci::type::EntityConfirmationRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityConfirmationRequestMT:
      return asb_uci::type::EntityConfirmationRequestMT::serialize(dynamic_cast<const uci::type::EntityConfirmationRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityConfirmationRequestStatusMDT:
      return asb_uci::type::EntityConfirmationRequestStatusMDT::serialize(dynamic_cast<const uci::type::EntityConfirmationRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityConfirmationRequestStatusMT:
      return asb_uci::type::EntityConfirmationRequestStatusMT::serialize(dynamic_cast<const uci::type::EntityConfirmationRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityEphemerisRequestParametersType:
      return asb_uci::type::EntityEphemerisRequestParametersType::serialize(dynamic_cast<const uci::type::EntityEphemerisRequestParametersType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityID_Type:
      return asb_uci::type::EntityID_Type::serialize(dynamic_cast<const uci::type::EntityID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityIdentityType:
      return asb_uci::type::EntityIdentityType::serialize(dynamic_cast<const uci::type::EntityIdentityType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityLostMT:
      return asb_uci::type::EntityLostMT::serialize(dynamic_cast<const uci::type::EntityLostMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityManagementRequestMDT:
      return asb_uci::type::EntityManagementRequestMDT::serialize(dynamic_cast<const uci::type::EntityManagementRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityManagementRequestMT:
      return asb_uci::type::EntityManagementRequestMT::serialize(dynamic_cast<const uci::type::EntityManagementRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityManagementRequestStatusMDT:
      return asb_uci::type::EntityManagementRequestStatusMDT::serialize(dynamic_cast<const uci::type::EntityManagementRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityManagementRequestStatusMT:
      return asb_uci::type::EntityManagementRequestStatusMT::serialize(dynamic_cast<const uci::type::EntityManagementRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityMetadataMT:
      return asb_uci::type::EntityMetadataMT::serialize(dynamic_cast<const uci::type::EntityMetadataMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityMetadataPET:
      return asb_uci::type::EntityMetadataPET::serialize(dynamic_cast<const uci::type::EntityMetadataPET&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityMT:
      return asb_uci::type::EntityMT::serialize(dynamic_cast<const uci::type::EntityMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityNotificationMDT:
      return asb_uci::type::EntityNotificationMDT::serialize(dynamic_cast<const uci::type::EntityNotificationMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityNotificationMT:
      return asb_uci::type::EntityNotificationMT::serialize(dynamic_cast<const uci::type::EntityNotificationMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalCSO_ID_Type:
      return asb_uci::type::EntityOrbitalCSO_ID_Type::serialize(dynamic_cast<const uci::type::EntityOrbitalCSO_ID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalCSO_MT:
      return asb_uci::type::EntityOrbitalCSO_MT::serialize(dynamic_cast<const uci::type::EntityOrbitalCSO_MT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalElementSetID_Type:
      return asb_uci::type::EntityOrbitalElementSetID_Type::serialize(dynamic_cast<const uci::type::EntityOrbitalElementSetID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalElementSetMDT:
      return asb_uci::type::EntityOrbitalElementSetMDT::serialize(dynamic_cast<const uci::type::EntityOrbitalElementSetMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalElementSetMT:
      return asb_uci::type::EntityOrbitalElementSetMT::serialize(dynamic_cast<const uci::type::EntityOrbitalElementSetMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalElementSetRequestMDT:
      return asb_uci::type::EntityOrbitalElementSetRequestMDT::serialize(dynamic_cast<const uci::type::EntityOrbitalElementSetRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalElementSetRequestMT:
      return asb_uci::type::EntityOrbitalElementSetRequestMT::serialize(dynamic_cast<const uci::type::EntityOrbitalElementSetRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalElementSetRequestStatusMDT:
      return asb_uci::type::EntityOrbitalElementSetRequestStatusMDT::serialize(dynamic_cast<const uci::type::EntityOrbitalElementSetRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalElementSetRequestStatusMT:
      return asb_uci::type::EntityOrbitalElementSetRequestStatusMT::serialize(dynamic_cast<const uci::type::EntityOrbitalElementSetRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalElementSetType:
      return asb_uci::type::EntityOrbitalElementSetType::serialize(dynamic_cast<const uci::type::EntityOrbitalElementSetType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalEphemerisID_Type:
      return asb_uci::type::EntityOrbitalEphemerisID_Type::serialize(dynamic_cast<const uci::type::EntityOrbitalEphemerisID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalEphemerisMDT:
      return asb_uci::type::EntityOrbitalEphemerisMDT::serialize(dynamic_cast<const uci::type::EntityOrbitalEphemerisMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalEphemerisMT:
      return asb_uci::type::EntityOrbitalEphemerisMT::serialize(dynamic_cast<const uci::type::EntityOrbitalEphemerisMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalEphemerisRequestMDT:
      return asb_uci::type::EntityOrbitalEphemerisRequestMDT::serialize(dynamic_cast<const uci::type::EntityOrbitalEphemerisRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalEphemerisRequestMT:
      return asb_uci::type::EntityOrbitalEphemerisRequestMT::serialize(dynamic_cast<const uci::type::EntityOrbitalEphemerisRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalEphemerisRequestStatusMDT:
      return asb_uci::type::EntityOrbitalEphemerisRequestStatusMDT::serialize(dynamic_cast<const uci::type::EntityOrbitalEphemerisRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalEphemerisRequestStatusMT:
      return asb_uci::type::EntityOrbitalEphemerisRequestStatusMT::serialize(dynamic_cast<const uci::type::EntityOrbitalEphemerisRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalEphemerisType:
      return asb_uci::type::EntityOrbitalEphemerisType::serialize(dynamic_cast<const uci::type::EntityOrbitalEphemerisType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalManeuverMT:
      return asb_uci::type::EntityOrbitalManeuverMT::serialize(dynamic_cast<const uci::type::EntityOrbitalManeuverMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalVCM_ID_Type:
      return asb_uci::type::EntityOrbitalVCM_ID_Type::serialize(dynamic_cast<const uci::type::EntityOrbitalVCM_ID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalVCM_MDT:
      return asb_uci::type::EntityOrbitalVCM_MDT::serialize(dynamic_cast<const uci::type::EntityOrbitalVCM_MDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalVCM_MT:
      return asb_uci::type::EntityOrbitalVCM_MT::serialize(dynamic_cast<const uci::type::EntityOrbitalVCM_MT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalVCM_RequestMDT:
      return asb_uci::type::EntityOrbitalVCM_RequestMDT::serialize(dynamic_cast<const uci::type::EntityOrbitalVCM_RequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalVCM_RequestMT:
      return asb_uci::type::EntityOrbitalVCM_RequestMT::serialize(dynamic_cast<const uci::type::EntityOrbitalVCM_RequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalVCM_RequestStatusMDT:
      return asb_uci::type::EntityOrbitalVCM_RequestStatusMDT::serialize(dynamic_cast<const uci::type::EntityOrbitalVCM_RequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalVCM_RequestStatusMT:
      return asb_uci::type::EntityOrbitalVCM_RequestStatusMT::serialize(dynamic_cast<const uci::type::EntityOrbitalVCM_RequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityOrbitalVCM_Type:
      return asb_uci::type::EntityOrbitalVCM_Type::serialize(dynamic_cast<const uci::type::EntityOrbitalVCM_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::entityPropagationMT:
      return asb_uci::type::EntityPropagationMT::serialize(dynamic_cast<const uci::type::EntityPropagationMT&>(accessor), propTree, nodeName, createNode, true, false);
    default:
      return boost::none;
  }
}

} // namespace util

} // namespace asb_uci

