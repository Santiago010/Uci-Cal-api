/** @file DerivedTypesCopier18.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCopier18.h"

#include "asb_uci/type/STANAG_4607_PackingPlanPET.h"
#include "asb_uci/type/STANAG_4607_PackingPlanRevA_Type.h"
#include "asb_uci/type/STANAG_4607_PackingPlanType.h"
#include "asb_uci/type/SpecialCodeDataLinkIdentifierType.h"
#include "asb_uci/type/SpecificBlueSeparationType.h"
#include "asb_uci/type/SpecificEmitterIdentityConfidenceType.h"
#include "asb_uci/type/SpecificEmitterIdentityType.h"
#include "asb_uci/type/SpecificIdentityConfidenceType.h"
#include "asb_uci/type/SpecificIdentityType.h"
#include "asb_uci/type/SpecificRedSeparationType.h"
#include "asb_uci/type/SpecificVehicleIdentityConfidenceType.h"
#include "asb_uci/type/SpectralDensityReportID_Type.h"
#include "asb_uci/type/SpectralDensityReportMT.h"
#include "asb_uci/type/StandardIdentityConfidenceType.h"
#include "asb_uci/type/StandardIdentityType.h"
#include "asb_uci/type/StateCovarianceNED_Type.h"
#include "asb_uci/type/StoreCarriageCapabilityStatusBaseType.h"
#include "asb_uci/type/StoreCarriageCapabilityStatusMT.h"
#include "asb_uci/type/StoreCarriageCapabilityStatusType.h"
#include "asb_uci/type/StoreCarriageStatusType.h"
#include "asb_uci/type/StoreInformationBaseType.h"
#include "asb_uci/type/StoreInformationType.h"
#include "asb_uci/type/StoreLoadoutConfigurationID_Type.h"
#include "asb_uci/type/StoreLoadoutConfigurationMT.h"
#include "asb_uci/type/StoreLoadoutItemPET.h"
#include "asb_uci/type/StoreLoadoutItemType.h"
#include "asb_uci/type/StoreManagementCommandMT.h"
#include "asb_uci/type/StoreManagementCommandStatusMDT.h"
#include "asb_uci/type/StoreManagementCommandStatusMT.h"
#include "asb_uci/type/StoreManagementCommandType.h"
#include "asb_uci/type/StoreManagementReportID_Type.h"
#include "asb_uci/type/StoreManagementReportMT.h"
#include "asb_uci/type/StoreManagementStatusMDT.h"
#include "asb_uci/type/StoreManagementStatusMT.h"
#include "asb_uci/type/StoreStatusBaseType.h"
#include "asb_uci/type/StoreStatusType.h"
#include "asb_uci/type/StoreType.h"
#include "asb_uci/type/StrikeActivityCommandType.h"
#include "asb_uci/type/StrikeActivityMT.h"
#include "asb_uci/type/StrikeActivityType.h"
#include "asb_uci/type/StrikeCapabilityCommandType.h"
#include "asb_uci/type/StrikeCapabilityMDT.h"
#include "asb_uci/type/StrikeCapabilityMT.h"
#include "asb_uci/type/StrikeCapabilityStatusMDT.h"
#include "asb_uci/type/StrikeCapabilityStatusMT.h"
#include "asb_uci/type/StrikeCapabilityStatusType.h"
#include "asb_uci/type/StrikeCapabilityType.h"
#include "asb_uci/type/StrikeCommandMT.h"
#include "asb_uci/type/StrikeCommandStatusMDT.h"
#include "asb_uci/type/StrikeCommandStatusMT.h"
#include "asb_uci/type/StrikeConsentRequestMT.h"
#include "asb_uci/type/StrikeConsentRequestStatusMDT.h"
#include "asb_uci/type/StrikeConsentRequestStatusMT.h"
#include "asb_uci/type/StrikeConsentRequestType.h"
#include "asb_uci/type/StrikeSettingsCommandMDT.h"
#include "asb_uci/type/StrikeSettingsCommandMT.h"
#include "asb_uci/type/StrikeSettingsCommandStatusMDT.h"
#include "asb_uci/type/StrikeSettingsCommandStatusMT.h"
#include "asb_uci/type/StrikeTaskAchievabilityAssessmentRequestType.h"
#include "asb_uci/type/StrikeTaskAchievabilityAssessmentType.h"
#include "asb_uci/type/StrikeTaskWeaponType.h"
#include "asb_uci/type/SubCapabilityID_Type.h"
#include "asb_uci/type/SubsystemBIT_CommandMDT.h"
#include "asb_uci/type/SubsystemBIT_CommandMT.h"
#include "asb_uci/type/SubsystemBIT_CommandStatusMDT.h"
#include "asb_uci/type/SubsystemBIT_CommandStatusMT.h"
#include "asb_uci/type/SubsystemBIT_ConfigurationID_Type.h"
#include "asb_uci/type/SubsystemBIT_ConfigurationMT.h"
#include "asb_uci/type/SubsystemBIT_StatusMT.h"
#include "asb_uci/type/SubsystemCalibrationCommandMDT.h"
#include "asb_uci/type/SubsystemCalibrationCommandMT.h"
#include "asb_uci/type/SubsystemCalibrationCommandStatusMDT.h"
#include "asb_uci/type/SubsystemCalibrationCommandStatusMT.h"
#include "asb_uci/type/SubsystemCalibrationConfigurationID_Type.h"
#include "asb_uci/type/SubsystemCalibrationConfigurationMT.h"
#include "asb_uci/type/SubsystemCalibrationStatusMT.h"
#include "asb_uci/type/SubsystemCommandStatusBaseType.h"
#include "asb_uci/type/SubsystemConfigurationDataRequestMDT.h"
#include "asb_uci/type/SubsystemConfigurationDataRequestMT.h"
#include "asb_uci/type/SubsystemConfigurationDataRequestStatusMDT.h"
#include "asb_uci/type/SubsystemConfigurationDataRequestStatusMT.h"
#include "asb_uci/type/SubsystemConfigurationID_Type.h"
#include "asb_uci/type/SubsystemConfigurationMT.h"
#include "asb_uci/type/SubsystemEraseCommandMDT.h"
#include "asb_uci/type/SubsystemEraseCommandMT.h"
#include "asb_uci/type/SubsystemEraseCommandStatusMDT.h"
#include "asb_uci/type/SubsystemEraseCommandStatusMT.h"
#include "asb_uci/type/SubsystemExtendedStatusPET.h"
#include "asb_uci/type/SubsystemID_Type.h"
#include "asb_uci/type/SubsystemMaintenanceCommandMDT.h"
#include "asb_uci/type/SubsystemMaintenanceCommandMT.h"
#include "asb_uci/type/SubsystemMaintenanceCommandStatusMDT.h"
#include "asb_uci/type/SubsystemMaintenanceCommandStatusMT.h"
#include "asb_uci/type/SubsystemMaintenanceConfigurationID_Type.h"
#include "asb_uci/type/SubsystemMaintenanceConfigurationMT.h"
#include "asb_uci/type/SubsystemMaintenanceID_Type.h"
#include "asb_uci/type/SubsystemMaintenanceStatusMT.h"
#include "asb_uci/type/SubsystemMaintenanceTestCommandPET.h"
#include "asb_uci/type/SubsystemMaintenanceTestCommandType.h"
#include "asb_uci/type/SubsystemMaintenanceTestPET.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"
#include "uci/type/STANAG_4607_PackingPlanPET.h"
#include "uci/type/STANAG_4607_PackingPlanRevA_Type.h"
#include "uci/type/STANAG_4607_PackingPlanType.h"
#include "uci/type/SpecialCodeDataLinkIdentifierType.h"
#include "uci/type/SpecificBlueSeparationType.h"
#include "uci/type/SpecificEmitterIdentityConfidenceType.h"
#include "uci/type/SpecificEmitterIdentityType.h"
#include "uci/type/SpecificIdentityConfidenceType.h"
#include "uci/type/SpecificIdentityType.h"
#include "uci/type/SpecificRedSeparationType.h"
#include "uci/type/SpecificVehicleIdentityConfidenceType.h"
#include "uci/type/SpectralDensityReportID_Type.h"
#include "uci/type/SpectralDensityReportMT.h"
#include "uci/type/StandardIdentityConfidenceType.h"
#include "uci/type/StandardIdentityType.h"
#include "uci/type/StateCovarianceNED_Type.h"
#include "uci/type/StoreCarriageCapabilityStatusBaseType.h"
#include "uci/type/StoreCarriageCapabilityStatusMT.h"
#include "uci/type/StoreCarriageCapabilityStatusType.h"
#include "uci/type/StoreCarriageStatusType.h"
#include "uci/type/StoreInformationBaseType.h"
#include "uci/type/StoreInformationType.h"
#include "uci/type/StoreLoadoutConfigurationID_Type.h"
#include "uci/type/StoreLoadoutConfigurationMT.h"
#include "uci/type/StoreLoadoutItemPET.h"
#include "uci/type/StoreLoadoutItemType.h"
#include "uci/type/StoreManagementCommandMT.h"
#include "uci/type/StoreManagementCommandStatusMDT.h"
#include "uci/type/StoreManagementCommandStatusMT.h"
#include "uci/type/StoreManagementCommandType.h"
#include "uci/type/StoreManagementReportID_Type.h"
#include "uci/type/StoreManagementReportMT.h"
#include "uci/type/StoreManagementStatusMDT.h"
#include "uci/type/StoreManagementStatusMT.h"
#include "uci/type/StoreStatusBaseType.h"
#include "uci/type/StoreStatusType.h"
#include "uci/type/StoreType.h"
#include "uci/type/StrikeActivityCommandType.h"
#include "uci/type/StrikeActivityMT.h"
#include "uci/type/StrikeActivityType.h"
#include "uci/type/StrikeCapabilityCommandType.h"
#include "uci/type/StrikeCapabilityMDT.h"
#include "uci/type/StrikeCapabilityMT.h"
#include "uci/type/StrikeCapabilityStatusMDT.h"
#include "uci/type/StrikeCapabilityStatusMT.h"
#include "uci/type/StrikeCapabilityStatusType.h"
#include "uci/type/StrikeCapabilityType.h"
#include "uci/type/StrikeCommandMT.h"
#include "uci/type/StrikeCommandStatusMDT.h"
#include "uci/type/StrikeCommandStatusMT.h"
#include "uci/type/StrikeConsentRequestMT.h"
#include "uci/type/StrikeConsentRequestStatusMDT.h"
#include "uci/type/StrikeConsentRequestStatusMT.h"
#include "uci/type/StrikeConsentRequestType.h"
#include "uci/type/StrikeSettingsCommandMDT.h"
#include "uci/type/StrikeSettingsCommandMT.h"
#include "uci/type/StrikeSettingsCommandStatusMDT.h"
#include "uci/type/StrikeSettingsCommandStatusMT.h"
#include "uci/type/StrikeTaskAchievabilityAssessmentRequestType.h"
#include "uci/type/StrikeTaskAchievabilityAssessmentType.h"
#include "uci/type/StrikeTaskWeaponType.h"
#include "uci/type/SubCapabilityID_Type.h"
#include "uci/type/SubsystemBIT_CommandMDT.h"
#include "uci/type/SubsystemBIT_CommandMT.h"
#include "uci/type/SubsystemBIT_CommandStatusMDT.h"
#include "uci/type/SubsystemBIT_CommandStatusMT.h"
#include "uci/type/SubsystemBIT_ConfigurationID_Type.h"
#include "uci/type/SubsystemBIT_ConfigurationMT.h"
#include "uci/type/SubsystemBIT_StatusMT.h"
#include "uci/type/SubsystemCalibrationCommandMDT.h"
#include "uci/type/SubsystemCalibrationCommandMT.h"
#include "uci/type/SubsystemCalibrationCommandStatusMDT.h"
#include "uci/type/SubsystemCalibrationCommandStatusMT.h"
#include "uci/type/SubsystemCalibrationConfigurationID_Type.h"
#include "uci/type/SubsystemCalibrationConfigurationMT.h"
#include "uci/type/SubsystemCalibrationStatusMT.h"
#include "uci/type/SubsystemCommandStatusBaseType.h"
#include "uci/type/SubsystemConfigurationDataRequestMDT.h"
#include "uci/type/SubsystemConfigurationDataRequestMT.h"
#include "uci/type/SubsystemConfigurationDataRequestStatusMDT.h"
#include "uci/type/SubsystemConfigurationDataRequestStatusMT.h"
#include "uci/type/SubsystemConfigurationID_Type.h"
#include "uci/type/SubsystemConfigurationMT.h"
#include "uci/type/SubsystemEraseCommandMDT.h"
#include "uci/type/SubsystemEraseCommandMT.h"
#include "uci/type/SubsystemEraseCommandStatusMDT.h"
#include "uci/type/SubsystemEraseCommandStatusMT.h"
#include "uci/type/SubsystemExtendedStatusPET.h"
#include "uci/type/SubsystemID_Type.h"
#include "uci/type/SubsystemMaintenanceCommandMDT.h"
#include "uci/type/SubsystemMaintenanceCommandMT.h"
#include "uci/type/SubsystemMaintenanceCommandStatusMDT.h"
#include "uci/type/SubsystemMaintenanceCommandStatusMT.h"
#include "uci/type/SubsystemMaintenanceConfigurationID_Type.h"
#include "uci/type/SubsystemMaintenanceConfigurationMT.h"
#include "uci/type/SubsystemMaintenanceID_Type.h"
#include "uci/type/SubsystemMaintenanceStatusMT.h"
#include "uci/type/SubsystemMaintenanceTestCommandPET.h"
#include "uci/type/SubsystemMaintenanceTestCommandType.h"
#include "uci/type/SubsystemMaintenanceTestPET.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

bool DerivedTypesCopier18::copy(const uci::base::Accessor& source, uci::base::Accessor& destination) {
  switch (source.getAccessorType()) {
    case uci::type::accessorType::specialCodeDataLinkIdentifierType:
      dynamic_cast<asb_uci::type::SpecialCodeDataLinkIdentifierType&>(destination).copyImpl(dynamic_cast<const uci::type::SpecialCodeDataLinkIdentifierType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::specificBlueSeparationType:
      dynamic_cast<asb_uci::type::SpecificBlueSeparationType&>(destination).copyImpl(dynamic_cast<const uci::type::SpecificBlueSeparationType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::specificEmitterIdentityConfidenceType:
      dynamic_cast<asb_uci::type::SpecificEmitterIdentityConfidenceType&>(destination).copyImpl(dynamic_cast<const uci::type::SpecificEmitterIdentityConfidenceType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::specificEmitterIdentityType:
      dynamic_cast<asb_uci::type::SpecificEmitterIdentityType&>(destination).copyImpl(dynamic_cast<const uci::type::SpecificEmitterIdentityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::specificIdentityConfidenceType:
      dynamic_cast<asb_uci::type::SpecificIdentityConfidenceType&>(destination).copyImpl(dynamic_cast<const uci::type::SpecificIdentityConfidenceType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::specificIdentityType:
      dynamic_cast<asb_uci::type::SpecificIdentityType&>(destination).copyImpl(dynamic_cast<const uci::type::SpecificIdentityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::specificRedSeparationType:
      dynamic_cast<asb_uci::type::SpecificRedSeparationType&>(destination).copyImpl(dynamic_cast<const uci::type::SpecificRedSeparationType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::specificVehicleIdentityConfidenceType:
      dynamic_cast<asb_uci::type::SpecificVehicleIdentityConfidenceType&>(destination).copyImpl(dynamic_cast<const uci::type::SpecificVehicleIdentityConfidenceType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::spectralDensityReportID_Type:
      dynamic_cast<asb_uci::type::SpectralDensityReportID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SpectralDensityReportID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::spectralDensityReportMT:
      dynamic_cast<asb_uci::type::SpectralDensityReportMT&>(destination).copyImpl(dynamic_cast<const uci::type::SpectralDensityReportMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sTANAG_4607_PackingPlanPET:
      dynamic_cast<asb_uci::type::STANAG_4607_PackingPlanPET&>(destination).copyImpl(dynamic_cast<const uci::type::STANAG_4607_PackingPlanPET&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sTANAG_4607_PackingPlanRevA_Type:
      dynamic_cast<asb_uci::type::STANAG_4607_PackingPlanRevA_Type&>(destination).copyImpl(dynamic_cast<const uci::type::STANAG_4607_PackingPlanRevA_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::sTANAG_4607_PackingPlanType:
      dynamic_cast<asb_uci::type::STANAG_4607_PackingPlanType&>(destination).copyImpl(dynamic_cast<const uci::type::STANAG_4607_PackingPlanType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::standardIdentityConfidenceType:
      dynamic_cast<asb_uci::type::StandardIdentityConfidenceType&>(destination).copyImpl(dynamic_cast<const uci::type::StandardIdentityConfidenceType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::standardIdentityType:
      dynamic_cast<asb_uci::type::StandardIdentityType&>(destination).copyImpl(dynamic_cast<const uci::type::StandardIdentityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::stateCovarianceNED_Type:
      dynamic_cast<asb_uci::type::StateCovarianceNED_Type&>(destination).copyImpl(dynamic_cast<const uci::type::StateCovarianceNED_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeCarriageCapabilityStatusBaseType:
      dynamic_cast<asb_uci::type::StoreCarriageCapabilityStatusBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::StoreCarriageCapabilityStatusBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeCarriageCapabilityStatusMT:
      dynamic_cast<asb_uci::type::StoreCarriageCapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::StoreCarriageCapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeCarriageCapabilityStatusType:
      dynamic_cast<asb_uci::type::StoreCarriageCapabilityStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::StoreCarriageCapabilityStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeCarriageStatusType:
      dynamic_cast<asb_uci::type::StoreCarriageStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::StoreCarriageStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeInformationBaseType:
      dynamic_cast<asb_uci::type::StoreInformationBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::StoreInformationBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeInformationType:
      dynamic_cast<asb_uci::type::StoreInformationType&>(destination).copyImpl(dynamic_cast<const uci::type::StoreInformationType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeLoadoutConfigurationID_Type:
      dynamic_cast<asb_uci::type::StoreLoadoutConfigurationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::StoreLoadoutConfigurationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeLoadoutConfigurationMT:
      dynamic_cast<asb_uci::type::StoreLoadoutConfigurationMT&>(destination).copyImpl(dynamic_cast<const uci::type::StoreLoadoutConfigurationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeLoadoutItemPET:
      dynamic_cast<asb_uci::type::StoreLoadoutItemPET&>(destination).copyImpl(dynamic_cast<const uci::type::StoreLoadoutItemPET&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeLoadoutItemType:
      dynamic_cast<asb_uci::type::StoreLoadoutItemType&>(destination).copyImpl(dynamic_cast<const uci::type::StoreLoadoutItemType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeManagementCommandMT:
      dynamic_cast<asb_uci::type::StoreManagementCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::StoreManagementCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeManagementCommandStatusMDT:
      dynamic_cast<asb_uci::type::StoreManagementCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::StoreManagementCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeManagementCommandStatusMT:
      dynamic_cast<asb_uci::type::StoreManagementCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::StoreManagementCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeManagementCommandType:
      dynamic_cast<asb_uci::type::StoreManagementCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::StoreManagementCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeManagementReportID_Type:
      dynamic_cast<asb_uci::type::StoreManagementReportID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::StoreManagementReportID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeManagementReportMT:
      dynamic_cast<asb_uci::type::StoreManagementReportMT&>(destination).copyImpl(dynamic_cast<const uci::type::StoreManagementReportMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeManagementStatusMDT:
      dynamic_cast<asb_uci::type::StoreManagementStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::StoreManagementStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeManagementStatusMT:
      dynamic_cast<asb_uci::type::StoreManagementStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::StoreManagementStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeStatusBaseType:
      dynamic_cast<asb_uci::type::StoreStatusBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::StoreStatusBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeStatusType:
      dynamic_cast<asb_uci::type::StoreStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::StoreStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::storeType:
      dynamic_cast<asb_uci::type::StoreType&>(destination).copyImpl(dynamic_cast<const uci::type::StoreType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeActivityCommandType:
      dynamic_cast<asb_uci::type::StrikeActivityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeActivityCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeActivityMT:
      dynamic_cast<asb_uci::type::StrikeActivityMT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeActivityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeActivityType:
      dynamic_cast<asb_uci::type::StrikeActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeCapabilityCommandType:
      dynamic_cast<asb_uci::type::StrikeCapabilityCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeCapabilityCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeCapabilityMDT:
      dynamic_cast<asb_uci::type::StrikeCapabilityMDT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeCapabilityMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeCapabilityMT:
      dynamic_cast<asb_uci::type::StrikeCapabilityMT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeCapabilityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeCapabilityStatusMDT:
      dynamic_cast<asb_uci::type::StrikeCapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeCapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeCapabilityStatusMT:
      dynamic_cast<asb_uci::type::StrikeCapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeCapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeCapabilityStatusType:
      dynamic_cast<asb_uci::type::StrikeCapabilityStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeCapabilityStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeCapabilityType:
      dynamic_cast<asb_uci::type::StrikeCapabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeCapabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeCommandMT:
      dynamic_cast<asb_uci::type::StrikeCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeCommandStatusMDT:
      dynamic_cast<asb_uci::type::StrikeCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeCommandStatusMT:
      dynamic_cast<asb_uci::type::StrikeCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeConsentRequestMT:
      dynamic_cast<asb_uci::type::StrikeConsentRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeConsentRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeConsentRequestStatusMDT:
      dynamic_cast<asb_uci::type::StrikeConsentRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeConsentRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeConsentRequestStatusMT:
      dynamic_cast<asb_uci::type::StrikeConsentRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeConsentRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeConsentRequestType:
      dynamic_cast<asb_uci::type::StrikeConsentRequestType&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeConsentRequestType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeSettingsCommandMDT:
      dynamic_cast<asb_uci::type::StrikeSettingsCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeSettingsCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeSettingsCommandMT:
      dynamic_cast<asb_uci::type::StrikeSettingsCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeSettingsCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeSettingsCommandStatusMDT:
      dynamic_cast<asb_uci::type::StrikeSettingsCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeSettingsCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeSettingsCommandStatusMT:
      dynamic_cast<asb_uci::type::StrikeSettingsCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeSettingsCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeTaskAchievabilityAssessmentRequestType:
      dynamic_cast<asb_uci::type::StrikeTaskAchievabilityAssessmentRequestType&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeTaskAchievabilityAssessmentRequestType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeTaskAchievabilityAssessmentType:
      dynamic_cast<asb_uci::type::StrikeTaskAchievabilityAssessmentType&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeTaskAchievabilityAssessmentType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::strikeTaskWeaponType:
      dynamic_cast<asb_uci::type::StrikeTaskWeaponType&>(destination).copyImpl(dynamic_cast<const uci::type::StrikeTaskWeaponType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subCapabilityID_Type:
      dynamic_cast<asb_uci::type::SubCapabilityID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SubCapabilityID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemBIT_CommandMDT:
      dynamic_cast<asb_uci::type::SubsystemBIT_CommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemBIT_CommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemBIT_CommandMT:
      dynamic_cast<asb_uci::type::SubsystemBIT_CommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemBIT_CommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemBIT_CommandStatusMDT:
      dynamic_cast<asb_uci::type::SubsystemBIT_CommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemBIT_CommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemBIT_CommandStatusMT:
      dynamic_cast<asb_uci::type::SubsystemBIT_CommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemBIT_CommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemBIT_ConfigurationID_Type:
      dynamic_cast<asb_uci::type::SubsystemBIT_ConfigurationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemBIT_ConfigurationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemBIT_ConfigurationMT:
      dynamic_cast<asb_uci::type::SubsystemBIT_ConfigurationMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemBIT_ConfigurationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemBIT_StatusMT:
      dynamic_cast<asb_uci::type::SubsystemBIT_StatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemBIT_StatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemCalibrationCommandMDT:
      dynamic_cast<asb_uci::type::SubsystemCalibrationCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemCalibrationCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemCalibrationCommandMT:
      dynamic_cast<asb_uci::type::SubsystemCalibrationCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemCalibrationCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemCalibrationCommandStatusMDT:
      dynamic_cast<asb_uci::type::SubsystemCalibrationCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemCalibrationCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemCalibrationCommandStatusMT:
      dynamic_cast<asb_uci::type::SubsystemCalibrationCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemCalibrationCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemCalibrationConfigurationID_Type:
      dynamic_cast<asb_uci::type::SubsystemCalibrationConfigurationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemCalibrationConfigurationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemCalibrationConfigurationMT:
      dynamic_cast<asb_uci::type::SubsystemCalibrationConfigurationMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemCalibrationConfigurationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemCalibrationStatusMT:
      dynamic_cast<asb_uci::type::SubsystemCalibrationStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemCalibrationStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemCommandStatusBaseType:
      dynamic_cast<asb_uci::type::SubsystemCommandStatusBaseType&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemCommandStatusBaseType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemConfigurationDataRequestMDT:
      dynamic_cast<asb_uci::type::SubsystemConfigurationDataRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemConfigurationDataRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemConfigurationDataRequestMT:
      dynamic_cast<asb_uci::type::SubsystemConfigurationDataRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemConfigurationDataRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemConfigurationDataRequestStatusMDT:
      dynamic_cast<asb_uci::type::SubsystemConfigurationDataRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemConfigurationDataRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemConfigurationDataRequestStatusMT:
      dynamic_cast<asb_uci::type::SubsystemConfigurationDataRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemConfigurationDataRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemConfigurationID_Type:
      dynamic_cast<asb_uci::type::SubsystemConfigurationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemConfigurationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemConfigurationMT:
      dynamic_cast<asb_uci::type::SubsystemConfigurationMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemConfigurationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemEraseCommandMDT:
      dynamic_cast<asb_uci::type::SubsystemEraseCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemEraseCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemEraseCommandMT:
      dynamic_cast<asb_uci::type::SubsystemEraseCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemEraseCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemEraseCommandStatusMDT:
      dynamic_cast<asb_uci::type::SubsystemEraseCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemEraseCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemEraseCommandStatusMT:
      dynamic_cast<asb_uci::type::SubsystemEraseCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemEraseCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemExtendedStatusPET:
      dynamic_cast<asb_uci::type::SubsystemExtendedStatusPET&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemExtendedStatusPET&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemID_Type:
      dynamic_cast<asb_uci::type::SubsystemID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemMaintenanceCommandMDT:
      dynamic_cast<asb_uci::type::SubsystemMaintenanceCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemMaintenanceCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemMaintenanceCommandMT:
      dynamic_cast<asb_uci::type::SubsystemMaintenanceCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemMaintenanceCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemMaintenanceCommandStatusMDT:
      dynamic_cast<asb_uci::type::SubsystemMaintenanceCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemMaintenanceCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemMaintenanceCommandStatusMT:
      dynamic_cast<asb_uci::type::SubsystemMaintenanceCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemMaintenanceCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemMaintenanceConfigurationID_Type:
      dynamic_cast<asb_uci::type::SubsystemMaintenanceConfigurationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemMaintenanceConfigurationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemMaintenanceConfigurationMT:
      dynamic_cast<asb_uci::type::SubsystemMaintenanceConfigurationMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemMaintenanceConfigurationMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemMaintenanceID_Type:
      dynamic_cast<asb_uci::type::SubsystemMaintenanceID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemMaintenanceID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemMaintenanceStatusMT:
      dynamic_cast<asb_uci::type::SubsystemMaintenanceStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemMaintenanceStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemMaintenanceTestCommandPET:
      dynamic_cast<asb_uci::type::SubsystemMaintenanceTestCommandPET&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemMaintenanceTestCommandPET&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemMaintenanceTestCommandType:
      dynamic_cast<asb_uci::type::SubsystemMaintenanceTestCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemMaintenanceTestCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::subsystemMaintenanceTestPET:
      dynamic_cast<asb_uci::type::SubsystemMaintenanceTestPET&>(destination).copyImpl(dynamic_cast<const uci::type::SubsystemMaintenanceTestPET&>(source), false);
      return true;
      break;
    default:
      return false;
  }
}

} // namespace util

} // namespace asb_uci

