/** @file DerivedTypesSerializer19.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesSerializer19.h"

#include <string>

#include <boost/none.hpp>
#include <boost/property_tree/ptree.hpp>

#include "asb_uci/type/SubsystemMaintenanceTestResultPET.h"
#include "asb_uci/type/SubsystemMaintenanceTestResultType.h"
#include "asb_uci/type/SubsystemMaintenanceTestType.h"
#include "asb_uci/type/SubsystemSettingsCommandMDT.h"
#include "asb_uci/type/SubsystemSettingsCommandMT.h"
#include "asb_uci/type/SubsystemSettingsCommandStatusMDT.h"
#include "asb_uci/type/SubsystemSettingsCommandStatusMT.h"
#include "asb_uci/type/SubsystemStateCommandMDT.h"
#include "asb_uci/type/SubsystemStateCommandMT.h"
#include "asb_uci/type/SubsystemStateCommandStatusMDT.h"
#include "asb_uci/type/SubsystemStateCommandStatusMT.h"
#include "asb_uci/type/SubsystemStatusDataRequestMDT.h"
#include "asb_uci/type/SubsystemStatusDataRequestMT.h"
#include "asb_uci/type/SubsystemStatusDataRequestStatusMDT.h"
#include "asb_uci/type/SubsystemStatusDataRequestStatusMT.h"
#include "asb_uci/type/SubsystemStatusDetailedDataRequestMDT.h"
#include "asb_uci/type/SubsystemStatusDetailedDataRequestMT.h"
#include "asb_uci/type/SubsystemStatusDetailedDataRequestStatusMDT.h"
#include "asb_uci/type/SubsystemStatusDetailedDataRequestStatusMT.h"
#include "asb_uci/type/SubsystemStatusDetailedMT.h"
#include "asb_uci/type/SubsystemStatusMT.h"
#include "asb_uci/type/SubsystemStreamMT.h"
#include "asb_uci/type/SupportCapabilityCommandBaseType.h"
#include "asb_uci/type/SupportCapabilityCommandStatusBaseType.h"
#include "asb_uci/type/SupportCapabilityID_Type.h"
#include "asb_uci/type/SupportCapabilityStatusBaseType.h"
#include "asb_uci/type/SupportedResolutionID_Type.h"
#include "asb_uci/type/SurvivabilityRiskLevelID_Type.h"
#include "asb_uci/type/SurvivabilityRiskLevelMT.h"
#include "asb_uci/type/SystemDeploymentActivityMT.h"
#include "asb_uci/type/SystemDeploymentActivityType.h"
#include "asb_uci/type/SystemDeploymentCapabilityMDT.h"
#include "asb_uci/type/SystemDeploymentCapabilityMT.h"
#include "asb_uci/type/SystemDeploymentCapabilityStatusMDT.h"
#include "asb_uci/type/SystemDeploymentCapabilityStatusMT.h"
#include "asb_uci/type/SystemDeploymentCapabilityStatusType.h"
#include "asb_uci/type/SystemDeploymentCapabilityType.h"
#include "asb_uci/type/SystemDeploymentTaskBaseType.h"
#include "asb_uci/type/SystemDeploymentTaskType.h"
#include "asb_uci/type/SystemEphemerisRequestParametersType.h"
#include "asb_uci/type/SystemEstimationRequestMDT.h"
#include "asb_uci/type/SystemEstimationRequestMT.h"
#include "asb_uci/type/SystemEstimationRequestStatusMDT.h"
#include "asb_uci/type/SystemEstimationRequestStatusMT.h"
#include "asb_uci/type/SystemID_Type.h"
#include "asb_uci/type/SystemIdentityType.h"
#include "asb_uci/type/SystemManagementRequestMDT.h"
#include "asb_uci/type/SystemManagementRequestMT.h"
#include "asb_uci/type/SystemManagementRequestStatusMDT.h"
#include "asb_uci/type/SystemManagementRequestStatusMT.h"
#include "asb_uci/type/SystemMetadataMT.h"
#include "asb_uci/type/SystemMetadataPET.h"
#include "asb_uci/type/SystemNotificationMDT.h"
#include "asb_uci/type/SystemNotificationMT.h"
#include "asb_uci/type/SystemOrbitReportMT.h"
#include "asb_uci/type/SystemOrbitalElementSetID_Type.h"
#include "asb_uci/type/SystemOrbitalElementSetMDT.h"
#include "asb_uci/type/SystemOrbitalElementSetMT.h"
#include "asb_uci/type/SystemOrbitalElementSetRequestMDT.h"
#include "asb_uci/type/SystemOrbitalElementSetRequestMT.h"
#include "asb_uci/type/SystemOrbitalElementSetRequestStatusMDT.h"
#include "asb_uci/type/SystemOrbitalElementSetRequestStatusMT.h"
#include "asb_uci/type/SystemOrbitalElementSetType.h"
#include "asb_uci/type/SystemOrbitalEphemerisID_Type.h"
#include "asb_uci/type/SystemOrbitalEphemerisMDT.h"
#include "asb_uci/type/SystemOrbitalEphemerisMT.h"
#include "asb_uci/type/SystemOrbitalEphemerisRequestMDT.h"
#include "asb_uci/type/SystemOrbitalEphemerisRequestMT.h"
#include "asb_uci/type/SystemOrbitalEphemerisRequestStatusMDT.h"
#include "asb_uci/type/SystemOrbitalEphemerisRequestStatusMT.h"
#include "asb_uci/type/SystemOrbitalEphemerisType.h"
#include "asb_uci/type/SystemOrbitalPositionReportMT.h"
#include "asb_uci/type/SystemOrbitalVCM_ID_Type.h"
#include "asb_uci/type/SystemOrbitalVCM_MDT.h"
#include "asb_uci/type/SystemOrbitalVCM_MT.h"
#include "asb_uci/type/SystemOrbitalVCM_RequestMDT.h"
#include "asb_uci/type/SystemOrbitalVCM_RequestMT.h"
#include "asb_uci/type/SystemOrbitalVCM_RequestStatusMDT.h"
#include "asb_uci/type/SystemOrbitalVCM_RequestStatusMT.h"
#include "asb_uci/type/SystemOrbitalVCM_Type.h"
#include "asb_uci/type/SystemReadinessID_Type.h"
#include "asb_uci/type/SystemReadinessMDT.h"
#include "asb_uci/type/SystemReadinessMT.h"
#include "asb_uci/type/SystemStatusMT.h"
#include "asb_uci/type/SystemTimeAtReferenceMT.h"
#include "asb_uci/type/SystemsNeededRequestMDT.h"
#include "asb_uci/type/SystemsNeededRequestMT.h"
#include "asb_uci/type/SystemsNeededRequestStatusMDT.h"
#include "asb_uci/type/SystemsNeededRequestStatusMT.h"
#include "asb_uci/type/TacticalOrderActivityMT.h"
#include "asb_uci/type/TacticalOrderActivityType.h"
#include "asb_uci/type/TacticalOrderCapabilityMDT.h"
#include "asb_uci/type/TacticalOrderCapabilityMT.h"
#include "asb_uci/type/TacticalOrderCapabilityStatusMDT.h"
#include "asb_uci/type/TacticalOrderCapabilityStatusMT.h"
#include "asb_uci/type/TacticalOrderCapabilityType.h"
#include "asb_uci/type/TacticalOrderTaskBaseType.h"
#include "asb_uci/type/TacticalOrderTaskType.h"
#include "asb_uci/type/TagAssociationID_Type.h"
#include "asb_uci/type/TagAssociationMDT.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"
#include "uci/type/SubsystemMaintenanceTestResultPET.h"
#include "uci/type/SubsystemMaintenanceTestResultType.h"
#include "uci/type/SubsystemMaintenanceTestType.h"
#include "uci/type/SubsystemSettingsCommandMDT.h"
#include "uci/type/SubsystemSettingsCommandMT.h"
#include "uci/type/SubsystemSettingsCommandStatusMDT.h"
#include "uci/type/SubsystemSettingsCommandStatusMT.h"
#include "uci/type/SubsystemStateCommandMDT.h"
#include "uci/type/SubsystemStateCommandMT.h"
#include "uci/type/SubsystemStateCommandStatusMDT.h"
#include "uci/type/SubsystemStateCommandStatusMT.h"
#include "uci/type/SubsystemStatusDataRequestMDT.h"
#include "uci/type/SubsystemStatusDataRequestMT.h"
#include "uci/type/SubsystemStatusDataRequestStatusMDT.h"
#include "uci/type/SubsystemStatusDataRequestStatusMT.h"
#include "uci/type/SubsystemStatusDetailedDataRequestMDT.h"
#include "uci/type/SubsystemStatusDetailedDataRequestMT.h"
#include "uci/type/SubsystemStatusDetailedDataRequestStatusMDT.h"
#include "uci/type/SubsystemStatusDetailedDataRequestStatusMT.h"
#include "uci/type/SubsystemStatusDetailedMT.h"
#include "uci/type/SubsystemStatusMT.h"
#include "uci/type/SubsystemStreamMT.h"
#include "uci/type/SupportCapabilityCommandBaseType.h"
#include "uci/type/SupportCapabilityCommandStatusBaseType.h"
#include "uci/type/SupportCapabilityID_Type.h"
#include "uci/type/SupportCapabilityStatusBaseType.h"
#include "uci/type/SupportedResolutionID_Type.h"
#include "uci/type/SurvivabilityRiskLevelID_Type.h"
#include "uci/type/SurvivabilityRiskLevelMT.h"
#include "uci/type/SystemDeploymentActivityMT.h"
#include "uci/type/SystemDeploymentActivityType.h"
#include "uci/type/SystemDeploymentCapabilityMDT.h"
#include "uci/type/SystemDeploymentCapabilityMT.h"
#include "uci/type/SystemDeploymentCapabilityStatusMDT.h"
#include "uci/type/SystemDeploymentCapabilityStatusMT.h"
#include "uci/type/SystemDeploymentCapabilityStatusType.h"
#include "uci/type/SystemDeploymentCapabilityType.h"
#include "uci/type/SystemDeploymentTaskBaseType.h"
#include "uci/type/SystemDeploymentTaskType.h"
#include "uci/type/SystemEphemerisRequestParametersType.h"
#include "uci/type/SystemEstimationRequestMDT.h"
#include "uci/type/SystemEstimationRequestMT.h"
#include "uci/type/SystemEstimationRequestStatusMDT.h"
#include "uci/type/SystemEstimationRequestStatusMT.h"
#include "uci/type/SystemID_Type.h"
#include "uci/type/SystemIdentityType.h"
#include "uci/type/SystemManagementRequestMDT.h"
#include "uci/type/SystemManagementRequestMT.h"
#include "uci/type/SystemManagementRequestStatusMDT.h"
#include "uci/type/SystemManagementRequestStatusMT.h"
#include "uci/type/SystemMetadataMT.h"
#include "uci/type/SystemMetadataPET.h"
#include "uci/type/SystemNotificationMDT.h"
#include "uci/type/SystemNotificationMT.h"
#include "uci/type/SystemOrbitReportMT.h"
#include "uci/type/SystemOrbitalElementSetID_Type.h"
#include "uci/type/SystemOrbitalElementSetMDT.h"
#include "uci/type/SystemOrbitalElementSetMT.h"
#include "uci/type/SystemOrbitalElementSetRequestMDT.h"
#include "uci/type/SystemOrbitalElementSetRequestMT.h"
#include "uci/type/SystemOrbitalElementSetRequestStatusMDT.h"
#include "uci/type/SystemOrbitalElementSetRequestStatusMT.h"
#include "uci/type/SystemOrbitalElementSetType.h"
#include "uci/type/SystemOrbitalEphemerisID_Type.h"
#include "uci/type/SystemOrbitalEphemerisMDT.h"
#include "uci/type/SystemOrbitalEphemerisMT.h"
#include "uci/type/SystemOrbitalEphemerisRequestMDT.h"
#include "uci/type/SystemOrbitalEphemerisRequestMT.h"
#include "uci/type/SystemOrbitalEphemerisRequestStatusMDT.h"
#include "uci/type/SystemOrbitalEphemerisRequestStatusMT.h"
#include "uci/type/SystemOrbitalEphemerisType.h"
#include "uci/type/SystemOrbitalPositionReportMT.h"
#include "uci/type/SystemOrbitalVCM_ID_Type.h"
#include "uci/type/SystemOrbitalVCM_MDT.h"
#include "uci/type/SystemOrbitalVCM_MT.h"
#include "uci/type/SystemOrbitalVCM_RequestMDT.h"
#include "uci/type/SystemOrbitalVCM_RequestMT.h"
#include "uci/type/SystemOrbitalVCM_RequestStatusMDT.h"
#include "uci/type/SystemOrbitalVCM_RequestStatusMT.h"
#include "uci/type/SystemOrbitalVCM_Type.h"
#include "uci/type/SystemReadinessID_Type.h"
#include "uci/type/SystemReadinessMDT.h"
#include "uci/type/SystemReadinessMT.h"
#include "uci/type/SystemStatusMT.h"
#include "uci/type/SystemTimeAtReferenceMT.h"
#include "uci/type/SystemsNeededRequestMDT.h"
#include "uci/type/SystemsNeededRequestMT.h"
#include "uci/type/SystemsNeededRequestStatusMDT.h"
#include "uci/type/SystemsNeededRequestStatusMT.h"
#include "uci/type/TacticalOrderActivityMT.h"
#include "uci/type/TacticalOrderActivityType.h"
#include "uci/type/TacticalOrderCapabilityMDT.h"
#include "uci/type/TacticalOrderCapabilityMT.h"
#include "uci/type/TacticalOrderCapabilityStatusMDT.h"
#include "uci/type/TacticalOrderCapabilityStatusMT.h"
#include "uci/type/TacticalOrderCapabilityType.h"
#include "uci/type/TacticalOrderTaskBaseType.h"
#include "uci/type/TacticalOrderTaskType.h"
#include "uci/type/TagAssociationID_Type.h"
#include "uci/type/TagAssociationMDT.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

boost::optional<std::string> DerivedTypesSerializer19::serialize(const uci::base::Accessor& accessor, boost::property_tree::ptree& propTree, const std::string& nodeName, const bool createNode) {
  switch (accessor.getAccessorType()) {
    case uci::type::accessorType::subsystemMaintenanceTestResultPET:
      return asb_uci::type::SubsystemMaintenanceTestResultPET::serialize(dynamic_cast<const uci::type::SubsystemMaintenanceTestResultPET&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemMaintenanceTestResultType:
      return asb_uci::type::SubsystemMaintenanceTestResultType::serialize(dynamic_cast<const uci::type::SubsystemMaintenanceTestResultType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemMaintenanceTestType:
      return asb_uci::type::SubsystemMaintenanceTestType::serialize(dynamic_cast<const uci::type::SubsystemMaintenanceTestType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemSettingsCommandMDT:
      return asb_uci::type::SubsystemSettingsCommandMDT::serialize(dynamic_cast<const uci::type::SubsystemSettingsCommandMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemSettingsCommandMT:
      return asb_uci::type::SubsystemSettingsCommandMT::serialize(dynamic_cast<const uci::type::SubsystemSettingsCommandMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemSettingsCommandStatusMDT:
      return asb_uci::type::SubsystemSettingsCommandStatusMDT::serialize(dynamic_cast<const uci::type::SubsystemSettingsCommandStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemSettingsCommandStatusMT:
      return asb_uci::type::SubsystemSettingsCommandStatusMT::serialize(dynamic_cast<const uci::type::SubsystemSettingsCommandStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStateCommandMDT:
      return asb_uci::type::SubsystemStateCommandMDT::serialize(dynamic_cast<const uci::type::SubsystemStateCommandMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStateCommandMT:
      return asb_uci::type::SubsystemStateCommandMT::serialize(dynamic_cast<const uci::type::SubsystemStateCommandMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStateCommandStatusMDT:
      return asb_uci::type::SubsystemStateCommandStatusMDT::serialize(dynamic_cast<const uci::type::SubsystemStateCommandStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStateCommandStatusMT:
      return asb_uci::type::SubsystemStateCommandStatusMT::serialize(dynamic_cast<const uci::type::SubsystemStateCommandStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStatusDataRequestMDT:
      return asb_uci::type::SubsystemStatusDataRequestMDT::serialize(dynamic_cast<const uci::type::SubsystemStatusDataRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStatusDataRequestMT:
      return asb_uci::type::SubsystemStatusDataRequestMT::serialize(dynamic_cast<const uci::type::SubsystemStatusDataRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStatusDataRequestStatusMDT:
      return asb_uci::type::SubsystemStatusDataRequestStatusMDT::serialize(dynamic_cast<const uci::type::SubsystemStatusDataRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStatusDataRequestStatusMT:
      return asb_uci::type::SubsystemStatusDataRequestStatusMT::serialize(dynamic_cast<const uci::type::SubsystemStatusDataRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStatusDetailedDataRequestMDT:
      return asb_uci::type::SubsystemStatusDetailedDataRequestMDT::serialize(dynamic_cast<const uci::type::SubsystemStatusDetailedDataRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStatusDetailedDataRequestMT:
      return asb_uci::type::SubsystemStatusDetailedDataRequestMT::serialize(dynamic_cast<const uci::type::SubsystemStatusDetailedDataRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStatusDetailedDataRequestStatusMDT:
      return asb_uci::type::SubsystemStatusDetailedDataRequestStatusMDT::serialize(dynamic_cast<const uci::type::SubsystemStatusDetailedDataRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStatusDetailedDataRequestStatusMT:
      return asb_uci::type::SubsystemStatusDetailedDataRequestStatusMT::serialize(dynamic_cast<const uci::type::SubsystemStatusDetailedDataRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStatusDetailedMT:
      return asb_uci::type::SubsystemStatusDetailedMT::serialize(dynamic_cast<const uci::type::SubsystemStatusDetailedMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStatusMT:
      return asb_uci::type::SubsystemStatusMT::serialize(dynamic_cast<const uci::type::SubsystemStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::subsystemStreamMT:
      return asb_uci::type::SubsystemStreamMT::serialize(dynamic_cast<const uci::type::SubsystemStreamMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::supportCapabilityCommandBaseType:
      return asb_uci::type::SupportCapabilityCommandBaseType::serialize(dynamic_cast<const uci::type::SupportCapabilityCommandBaseType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::supportCapabilityCommandStatusBaseType:
      return asb_uci::type::SupportCapabilityCommandStatusBaseType::serialize(dynamic_cast<const uci::type::SupportCapabilityCommandStatusBaseType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::supportCapabilityID_Type:
      return asb_uci::type::SupportCapabilityID_Type::serialize(dynamic_cast<const uci::type::SupportCapabilityID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::supportCapabilityStatusBaseType:
      return asb_uci::type::SupportCapabilityStatusBaseType::serialize(dynamic_cast<const uci::type::SupportCapabilityStatusBaseType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::supportedResolutionID_Type:
      return asb_uci::type::SupportedResolutionID_Type::serialize(dynamic_cast<const uci::type::SupportedResolutionID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::survivabilityRiskLevelID_Type:
      return asb_uci::type::SurvivabilityRiskLevelID_Type::serialize(dynamic_cast<const uci::type::SurvivabilityRiskLevelID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::survivabilityRiskLevelMT:
      return asb_uci::type::SurvivabilityRiskLevelMT::serialize(dynamic_cast<const uci::type::SurvivabilityRiskLevelMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemDeploymentActivityMT:
      return asb_uci::type::SystemDeploymentActivityMT::serialize(dynamic_cast<const uci::type::SystemDeploymentActivityMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemDeploymentActivityType:
      return asb_uci::type::SystemDeploymentActivityType::serialize(dynamic_cast<const uci::type::SystemDeploymentActivityType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemDeploymentCapabilityMDT:
      return asb_uci::type::SystemDeploymentCapabilityMDT::serialize(dynamic_cast<const uci::type::SystemDeploymentCapabilityMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemDeploymentCapabilityMT:
      return asb_uci::type::SystemDeploymentCapabilityMT::serialize(dynamic_cast<const uci::type::SystemDeploymentCapabilityMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemDeploymentCapabilityStatusMDT:
      return asb_uci::type::SystemDeploymentCapabilityStatusMDT::serialize(dynamic_cast<const uci::type::SystemDeploymentCapabilityStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemDeploymentCapabilityStatusMT:
      return asb_uci::type::SystemDeploymentCapabilityStatusMT::serialize(dynamic_cast<const uci::type::SystemDeploymentCapabilityStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemDeploymentCapabilityStatusType:
      return asb_uci::type::SystemDeploymentCapabilityStatusType::serialize(dynamic_cast<const uci::type::SystemDeploymentCapabilityStatusType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemDeploymentCapabilityType:
      return asb_uci::type::SystemDeploymentCapabilityType::serialize(dynamic_cast<const uci::type::SystemDeploymentCapabilityType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemDeploymentTaskBaseType:
      return asb_uci::type::SystemDeploymentTaskBaseType::serialize(dynamic_cast<const uci::type::SystemDeploymentTaskBaseType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemDeploymentTaskType:
      return asb_uci::type::SystemDeploymentTaskType::serialize(dynamic_cast<const uci::type::SystemDeploymentTaskType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemEphemerisRequestParametersType:
      return asb_uci::type::SystemEphemerisRequestParametersType::serialize(dynamic_cast<const uci::type::SystemEphemerisRequestParametersType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemEstimationRequestMDT:
      return asb_uci::type::SystemEstimationRequestMDT::serialize(dynamic_cast<const uci::type::SystemEstimationRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemEstimationRequestMT:
      return asb_uci::type::SystemEstimationRequestMT::serialize(dynamic_cast<const uci::type::SystemEstimationRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemEstimationRequestStatusMDT:
      return asb_uci::type::SystemEstimationRequestStatusMDT::serialize(dynamic_cast<const uci::type::SystemEstimationRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemEstimationRequestStatusMT:
      return asb_uci::type::SystemEstimationRequestStatusMT::serialize(dynamic_cast<const uci::type::SystemEstimationRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemID_Type:
      return asb_uci::type::SystemID_Type::serialize(dynamic_cast<const uci::type::SystemID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemIdentityType:
      return asb_uci::type::SystemIdentityType::serialize(dynamic_cast<const uci::type::SystemIdentityType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemManagementRequestMDT:
      return asb_uci::type::SystemManagementRequestMDT::serialize(dynamic_cast<const uci::type::SystemManagementRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemManagementRequestMT:
      return asb_uci::type::SystemManagementRequestMT::serialize(dynamic_cast<const uci::type::SystemManagementRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemManagementRequestStatusMDT:
      return asb_uci::type::SystemManagementRequestStatusMDT::serialize(dynamic_cast<const uci::type::SystemManagementRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemManagementRequestStatusMT:
      return asb_uci::type::SystemManagementRequestStatusMT::serialize(dynamic_cast<const uci::type::SystemManagementRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemMetadataMT:
      return asb_uci::type::SystemMetadataMT::serialize(dynamic_cast<const uci::type::SystemMetadataMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemMetadataPET:
      return asb_uci::type::SystemMetadataPET::serialize(dynamic_cast<const uci::type::SystemMetadataPET&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemNotificationMDT:
      return asb_uci::type::SystemNotificationMDT::serialize(dynamic_cast<const uci::type::SystemNotificationMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemNotificationMT:
      return asb_uci::type::SystemNotificationMT::serialize(dynamic_cast<const uci::type::SystemNotificationMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalElementSetID_Type:
      return asb_uci::type::SystemOrbitalElementSetID_Type::serialize(dynamic_cast<const uci::type::SystemOrbitalElementSetID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalElementSetMDT:
      return asb_uci::type::SystemOrbitalElementSetMDT::serialize(dynamic_cast<const uci::type::SystemOrbitalElementSetMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalElementSetMT:
      return asb_uci::type::SystemOrbitalElementSetMT::serialize(dynamic_cast<const uci::type::SystemOrbitalElementSetMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalElementSetRequestMDT:
      return asb_uci::type::SystemOrbitalElementSetRequestMDT::serialize(dynamic_cast<const uci::type::SystemOrbitalElementSetRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalElementSetRequestMT:
      return asb_uci::type::SystemOrbitalElementSetRequestMT::serialize(dynamic_cast<const uci::type::SystemOrbitalElementSetRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalElementSetRequestStatusMDT:
      return asb_uci::type::SystemOrbitalElementSetRequestStatusMDT::serialize(dynamic_cast<const uci::type::SystemOrbitalElementSetRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalElementSetRequestStatusMT:
      return asb_uci::type::SystemOrbitalElementSetRequestStatusMT::serialize(dynamic_cast<const uci::type::SystemOrbitalElementSetRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalElementSetType:
      return asb_uci::type::SystemOrbitalElementSetType::serialize(dynamic_cast<const uci::type::SystemOrbitalElementSetType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalEphemerisID_Type:
      return asb_uci::type::SystemOrbitalEphemerisID_Type::serialize(dynamic_cast<const uci::type::SystemOrbitalEphemerisID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalEphemerisMDT:
      return asb_uci::type::SystemOrbitalEphemerisMDT::serialize(dynamic_cast<const uci::type::SystemOrbitalEphemerisMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalEphemerisMT:
      return asb_uci::type::SystemOrbitalEphemerisMT::serialize(dynamic_cast<const uci::type::SystemOrbitalEphemerisMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalEphemerisRequestMDT:
      return asb_uci::type::SystemOrbitalEphemerisRequestMDT::serialize(dynamic_cast<const uci::type::SystemOrbitalEphemerisRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalEphemerisRequestMT:
      return asb_uci::type::SystemOrbitalEphemerisRequestMT::serialize(dynamic_cast<const uci::type::SystemOrbitalEphemerisRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalEphemerisRequestStatusMDT:
      return asb_uci::type::SystemOrbitalEphemerisRequestStatusMDT::serialize(dynamic_cast<const uci::type::SystemOrbitalEphemerisRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalEphemerisRequestStatusMT:
      return asb_uci::type::SystemOrbitalEphemerisRequestStatusMT::serialize(dynamic_cast<const uci::type::SystemOrbitalEphemerisRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalEphemerisType:
      return asb_uci::type::SystemOrbitalEphemerisType::serialize(dynamic_cast<const uci::type::SystemOrbitalEphemerisType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalPositionReportMT:
      return asb_uci::type::SystemOrbitalPositionReportMT::serialize(dynamic_cast<const uci::type::SystemOrbitalPositionReportMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalVCM_ID_Type:
      return asb_uci::type::SystemOrbitalVCM_ID_Type::serialize(dynamic_cast<const uci::type::SystemOrbitalVCM_ID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalVCM_MDT:
      return asb_uci::type::SystemOrbitalVCM_MDT::serialize(dynamic_cast<const uci::type::SystemOrbitalVCM_MDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalVCM_MT:
      return asb_uci::type::SystemOrbitalVCM_MT::serialize(dynamic_cast<const uci::type::SystemOrbitalVCM_MT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalVCM_RequestMDT:
      return asb_uci::type::SystemOrbitalVCM_RequestMDT::serialize(dynamic_cast<const uci::type::SystemOrbitalVCM_RequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalVCM_RequestMT:
      return asb_uci::type::SystemOrbitalVCM_RequestMT::serialize(dynamic_cast<const uci::type::SystemOrbitalVCM_RequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalVCM_RequestStatusMDT:
      return asb_uci::type::SystemOrbitalVCM_RequestStatusMDT::serialize(dynamic_cast<const uci::type::SystemOrbitalVCM_RequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalVCM_RequestStatusMT:
      return asb_uci::type::SystemOrbitalVCM_RequestStatusMT::serialize(dynamic_cast<const uci::type::SystemOrbitalVCM_RequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitalVCM_Type:
      return asb_uci::type::SystemOrbitalVCM_Type::serialize(dynamic_cast<const uci::type::SystemOrbitalVCM_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemOrbitReportMT:
      return asb_uci::type::SystemOrbitReportMT::serialize(dynamic_cast<const uci::type::SystemOrbitReportMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemReadinessID_Type:
      return asb_uci::type::SystemReadinessID_Type::serialize(dynamic_cast<const uci::type::SystemReadinessID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemReadinessMDT:
      return asb_uci::type::SystemReadinessMDT::serialize(dynamic_cast<const uci::type::SystemReadinessMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemReadinessMT:
      return asb_uci::type::SystemReadinessMT::serialize(dynamic_cast<const uci::type::SystemReadinessMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemsNeededRequestMDT:
      return asb_uci::type::SystemsNeededRequestMDT::serialize(dynamic_cast<const uci::type::SystemsNeededRequestMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemsNeededRequestMT:
      return asb_uci::type::SystemsNeededRequestMT::serialize(dynamic_cast<const uci::type::SystemsNeededRequestMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemsNeededRequestStatusMDT:
      return asb_uci::type::SystemsNeededRequestStatusMDT::serialize(dynamic_cast<const uci::type::SystemsNeededRequestStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemsNeededRequestStatusMT:
      return asb_uci::type::SystemsNeededRequestStatusMT::serialize(dynamic_cast<const uci::type::SystemsNeededRequestStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemStatusMT:
      return asb_uci::type::SystemStatusMT::serialize(dynamic_cast<const uci::type::SystemStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::systemTimeAtReferenceMT:
      return asb_uci::type::SystemTimeAtReferenceMT::serialize(dynamic_cast<const uci::type::SystemTimeAtReferenceMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::tacticalOrderActivityMT:
      return asb_uci::type::TacticalOrderActivityMT::serialize(dynamic_cast<const uci::type::TacticalOrderActivityMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::tacticalOrderActivityType:
      return asb_uci::type::TacticalOrderActivityType::serialize(dynamic_cast<const uci::type::TacticalOrderActivityType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::tacticalOrderCapabilityMDT:
      return asb_uci::type::TacticalOrderCapabilityMDT::serialize(dynamic_cast<const uci::type::TacticalOrderCapabilityMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::tacticalOrderCapabilityMT:
      return asb_uci::type::TacticalOrderCapabilityMT::serialize(dynamic_cast<const uci::type::TacticalOrderCapabilityMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::tacticalOrderCapabilityStatusMDT:
      return asb_uci::type::TacticalOrderCapabilityStatusMDT::serialize(dynamic_cast<const uci::type::TacticalOrderCapabilityStatusMDT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::tacticalOrderCapabilityStatusMT:
      return asb_uci::type::TacticalOrderCapabilityStatusMT::serialize(dynamic_cast<const uci::type::TacticalOrderCapabilityStatusMT&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::tacticalOrderCapabilityType:
      return asb_uci::type::TacticalOrderCapabilityType::serialize(dynamic_cast<const uci::type::TacticalOrderCapabilityType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::tacticalOrderTaskBaseType:
      return asb_uci::type::TacticalOrderTaskBaseType::serialize(dynamic_cast<const uci::type::TacticalOrderTaskBaseType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::tacticalOrderTaskType:
      return asb_uci::type::TacticalOrderTaskType::serialize(dynamic_cast<const uci::type::TacticalOrderTaskType&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::tagAssociationID_Type:
      return asb_uci::type::TagAssociationID_Type::serialize(dynamic_cast<const uci::type::TagAssociationID_Type&>(accessor), propTree, nodeName, createNode, true, false);
    case uci::type::accessorType::tagAssociationMDT:
      return asb_uci::type::TagAssociationMDT::serialize(dynamic_cast<const uci::type::TagAssociationMDT&>(accessor), propTree, nodeName, createNode, true, false);
    default:
      return boost::none;
  }
}

} // namespace util

} // namespace asb_uci

