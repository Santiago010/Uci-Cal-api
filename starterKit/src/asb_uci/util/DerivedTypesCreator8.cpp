/** @file DerivedTypesCreator8.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCreator8.h"

#include <boost/smart_ptr/make_unique.hpp>

#include "asb_uci/type/EOB_CorrelationRecordID_Type.h"
#include "asb_uci/type/EOB_CorrelationRecordMDT.h"
#include "asb_uci/type/EOB_CorrelationRecordMT.h"
#include "asb_uci/type/EOB_EmitterID_Type.h"
#include "asb_uci/type/EOB_EmitterModeID_Type.h"
#include "asb_uci/type/EOB_EmitterModeType.h"
#include "asb_uci/type/EOB_EmitterType.h"
#include "asb_uci/type/EOB_EquipmentIdentityType.h"
#include "asb_uci/type/EOB_EquipmentRecordType.h"
#include "asb_uci/type/EOB_EquipmentType.h"
#include "asb_uci/type/EOB_FixedPositionType.h"
#include "asb_uci/type/EOB_IdentityBaseType.h"
#include "asb_uci/type/EOB_RecordID_Type.h"
#include "asb_uci/type/EOB_RecordMarkedType.h"
#include "asb_uci/type/EOB_SignalType.h"
#include "asb_uci/type/EOB_SiteIdentityType.h"
#include "asb_uci/type/EOB_SitePIN_Type.h"
#include "asb_uci/type/ESM_ActivityCommandType.h"
#include "asb_uci/type/ESM_ActivityMT.h"
#include "asb_uci/type/ESM_ActivityType.h"
#include "asb_uci/type/ESM_CapabilityCommandType.h"
#include "asb_uci/type/ESM_CapabilityMDT.h"
#include "asb_uci/type/ESM_CapabilityMT.h"
#include "asb_uci/type/ESM_CapabilityStatusMDT.h"
#include "asb_uci/type/ESM_CapabilityStatusMT.h"
#include "asb_uci/type/ESM_CapabilityType.h"
#include "asb_uci/type/ESM_CommandMT.h"
#include "asb_uci/type/ESM_CommandStatusMDT.h"
#include "asb_uci/type/ESM_CommandStatusMT.h"
#include "asb_uci/type/ESM_ConsentRequestMT.h"
#include "asb_uci/type/ESM_ConsentRequestStatusMDT.h"
#include "asb_uci/type/ESM_ConsentRequestStatusMT.h"
#include "asb_uci/type/ESM_ConsentRequestType.h"
#include "asb_uci/type/ESM_SettingsCommandMDT.h"
#include "asb_uci/type/ESM_SettingsCommandMT.h"
#include "asb_uci/type/ESM_SettingsCommandStatusMDT.h"
#include "asb_uci/type/ESM_SettingsCommandStatusMT.h"
#include "asb_uci/type/ESM_TaskBaseType.h"
#include "asb_uci/type/ESM_TaskType.h"
#include "asb_uci/type/EW_ConfigurationID_Type.h"
#include "asb_uci/type/EW_ConfigurationMT.h"
#include "asb_uci/type/EW_CoordinationDataLinkIdentifierType.h"
#include "asb_uci/type/EW_IndexNumberDataLinkIdentifierType.h"
#include "asb_uci/type/ExecutionPlanSetBaseType.h"
#include "asb_uci/type/ExecutionPlanSetID_Type.h"
#include "asb_uci/type/ExecutionSequenceInsertionType.h"
#include "asb_uci/type/ExecutionSequencePlanSetsType.h"
#include "asb_uci/type/ExecutionSequenceType.h"
#include "asb_uci/type/ExternalDataRequestMDT.h"
#include "asb_uci/type/ExternalDataRequestMT.h"
#include "asb_uci/type/ExternalDataRequestStatusMDT.h"
#include "asb_uci/type/ExternalDataRequestStatusMT.h"
#include "asb_uci/type/ExternalRequestedDataID_Type.h"
#include "asb_uci/type/FOV_ActivityType.h"
#include "asb_uci/type/FOV_Type.h"
#include "asb_uci/type/FOV_VolumeType.h"
#include "asb_uci/type/FaultID_Type.h"
#include "asb_uci/type/FaultMDT.h"
#include "asb_uci/type/FaultMT.h"
#include "asb_uci/type/FileLocationID_Type.h"
#include "asb_uci/type/FileLocationMDT.h"
#include "asb_uci/type/FileLocationMT.h"
#include "asb_uci/type/FileMetadataID_Type.h"
#include "asb_uci/type/FileMetadataMDT.h"
#include "asb_uci/type/FileMetadataMT.h"
#include "asb_uci/type/FilterID_Type.h"
#include "asb_uci/type/FixedPositionType.h"
#include "asb_uci/type/FlightActivityMT.h"
#include "asb_uci/type/FlightActivityType.h"
#include "asb_uci/type/FlightCapabilityMDT.h"
#include "asb_uci/type/FlightCapabilityMT.h"
#include "asb_uci/type/FlightCapabilityStatusMDT.h"
#include "asb_uci/type/FlightCapabilityStatusMT.h"
#include "asb_uci/type/FlightCapabilityType.h"
#include "asb_uci/type/FlightTaskBaseType.h"
#include "asb_uci/type/FlightTaskType.h"
#include "asb_uci/type/FloatMinMaxType.h"
#include "asb_uci/type/ForeignKeyMapDRL.h"
#include "asb_uci/type/ForeignKeyMapID_Type.h"
#include "asb_uci/type/ForeignKeyMapMDT.h"
#include "asb_uci/type/ForeignKeyMapML.h"
#include "asb_uci/type/ForeignKeyMapMT.h"
#include "asb_uci/type/ForeignKeyPairDRLE.h"
#include "asb_uci/type/ForeignKeyPairID_Type.h"
#include "asb_uci/type/ForeignKeyPairMDT.h"
#include "asb_uci/type/ForeignKeyPairMT.h"
#include "asb_uci/type/ForeignKeyType.h"
#include "asb_uci/type/FrequencyDataBaseType.h"
#include "asb_uci/type/FrequencyDataType.h"
#include "asb_uci/type/FuelSubsystemExtendedStatusType.h"
#include "asb_uci/type/FuelTankComponentExtendedStatusType.h"
#include "asb_uci/type/FunctionID_Type.h"
#include "asb_uci/type/FunctionalDamageConfidenceType.h"
#include "asb_uci/type/FunctionalDamageProbabilityType.h"
#include "asb_uci/type/FusionSettingsMT.h"
#include "asb_uci/type/FusionSettingsRequestMDT.h"
#include "asb_uci/type/FusionSettingsRequestMT.h"
#include "asb_uci/type/FusionSettingsRequestStatusMDT.h"
#include "asb_uci/type/FusionSettingsRequestStatusMT.h"
#include "asb_uci/type/GatewayActivityCommandType.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

uci::base::Accessor* DerivedTypesCreator8::create(const uci::base::accessorType::AccessorType type) {
  switch (type) {
    case uci::type::accessorType::eOB_CorrelationRecordID_Type:
      return boost::make_unique<asb_uci::type::EOB_CorrelationRecordID_Type>().release();
    case uci::type::accessorType::eOB_CorrelationRecordMDT:
      return boost::make_unique<asb_uci::type::EOB_CorrelationRecordMDT>().release();
    case uci::type::accessorType::eOB_CorrelationRecordMT:
      return boost::make_unique<asb_uci::type::EOB_CorrelationRecordMT>().release();
    case uci::type::accessorType::eOB_EmitterID_Type:
      return boost::make_unique<asb_uci::type::EOB_EmitterID_Type>().release();
    case uci::type::accessorType::eOB_EmitterModeID_Type:
      return boost::make_unique<asb_uci::type::EOB_EmitterModeID_Type>().release();
    case uci::type::accessorType::eOB_EmitterModeType:
      return boost::make_unique<asb_uci::type::EOB_EmitterModeType>().release();
    case uci::type::accessorType::eOB_EmitterType:
      return boost::make_unique<asb_uci::type::EOB_EmitterType>().release();
    case uci::type::accessorType::eOB_EquipmentIdentityType:
      return boost::make_unique<asb_uci::type::EOB_EquipmentIdentityType>().release();
    case uci::type::accessorType::eOB_EquipmentRecordType:
      return boost::make_unique<asb_uci::type::EOB_EquipmentRecordType>().release();
    case uci::type::accessorType::eOB_EquipmentType:
      return boost::make_unique<asb_uci::type::EOB_EquipmentType>().release();
    case uci::type::accessorType::eOB_FixedPositionType:
      return boost::make_unique<asb_uci::type::EOB_FixedPositionType>().release();
    case uci::type::accessorType::eOB_IdentityBaseType:
      return boost::make_unique<asb_uci::type::EOB_IdentityBaseType>().release();
    case uci::type::accessorType::eOB_RecordID_Type:
      return boost::make_unique<asb_uci::type::EOB_RecordID_Type>().release();
    case uci::type::accessorType::eOB_RecordMarkedType:
      return boost::make_unique<asb_uci::type::EOB_RecordMarkedType>().release();
    case uci::type::accessorType::eOB_SignalType:
      return boost::make_unique<asb_uci::type::EOB_SignalType>().release();
    case uci::type::accessorType::eOB_SiteIdentityType:
      return boost::make_unique<asb_uci::type::EOB_SiteIdentityType>().release();
    case uci::type::accessorType::eOB_SitePIN_Type:
      return boost::make_unique<asb_uci::type::EOB_SitePIN_Type>().release();
    case uci::type::accessorType::eSM_ActivityCommandType:
      return boost::make_unique<asb_uci::type::ESM_ActivityCommandType>().release();
    case uci::type::accessorType::eSM_ActivityMT:
      return boost::make_unique<asb_uci::type::ESM_ActivityMT>().release();
    case uci::type::accessorType::eSM_ActivityType:
      return boost::make_unique<asb_uci::type::ESM_ActivityType>().release();
    case uci::type::accessorType::eSM_CapabilityCommandType:
      return boost::make_unique<asb_uci::type::ESM_CapabilityCommandType>().release();
    case uci::type::accessorType::eSM_CapabilityMDT:
      return boost::make_unique<asb_uci::type::ESM_CapabilityMDT>().release();
    case uci::type::accessorType::eSM_CapabilityMT:
      return boost::make_unique<asb_uci::type::ESM_CapabilityMT>().release();
    case uci::type::accessorType::eSM_CapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::ESM_CapabilityStatusMDT>().release();
    case uci::type::accessorType::eSM_CapabilityStatusMT:
      return boost::make_unique<asb_uci::type::ESM_CapabilityStatusMT>().release();
    case uci::type::accessorType::eSM_CapabilityType:
      return boost::make_unique<asb_uci::type::ESM_CapabilityType>().release();
    case uci::type::accessorType::eSM_CommandMT:
      return boost::make_unique<asb_uci::type::ESM_CommandMT>().release();
    case uci::type::accessorType::eSM_CommandStatusMDT:
      return boost::make_unique<asb_uci::type::ESM_CommandStatusMDT>().release();
    case uci::type::accessorType::eSM_CommandStatusMT:
      return boost::make_unique<asb_uci::type::ESM_CommandStatusMT>().release();
    case uci::type::accessorType::eSM_ConsentRequestMT:
      return boost::make_unique<asb_uci::type::ESM_ConsentRequestMT>().release();
    case uci::type::accessorType::eSM_ConsentRequestStatusMDT:
      return boost::make_unique<asb_uci::type::ESM_ConsentRequestStatusMDT>().release();
    case uci::type::accessorType::eSM_ConsentRequestStatusMT:
      return boost::make_unique<asb_uci::type::ESM_ConsentRequestStatusMT>().release();
    case uci::type::accessorType::eSM_ConsentRequestType:
      return boost::make_unique<asb_uci::type::ESM_ConsentRequestType>().release();
    case uci::type::accessorType::eSM_SettingsCommandMDT:
      return boost::make_unique<asb_uci::type::ESM_SettingsCommandMDT>().release();
    case uci::type::accessorType::eSM_SettingsCommandMT:
      return boost::make_unique<asb_uci::type::ESM_SettingsCommandMT>().release();
    case uci::type::accessorType::eSM_SettingsCommandStatusMDT:
      return boost::make_unique<asb_uci::type::ESM_SettingsCommandStatusMDT>().release();
    case uci::type::accessorType::eSM_SettingsCommandStatusMT:
      return boost::make_unique<asb_uci::type::ESM_SettingsCommandStatusMT>().release();
    case uci::type::accessorType::eSM_TaskBaseType:
      return boost::make_unique<asb_uci::type::ESM_TaskBaseType>().release();
    case uci::type::accessorType::eSM_TaskType:
      return boost::make_unique<asb_uci::type::ESM_TaskType>().release();
    case uci::type::accessorType::eW_ConfigurationID_Type:
      return boost::make_unique<asb_uci::type::EW_ConfigurationID_Type>().release();
    case uci::type::accessorType::eW_ConfigurationMT:
      return boost::make_unique<asb_uci::type::EW_ConfigurationMT>().release();
    case uci::type::accessorType::eW_CoordinationDataLinkIdentifierType:
      return boost::make_unique<asb_uci::type::EW_CoordinationDataLinkIdentifierType>().release();
    case uci::type::accessorType::eW_IndexNumberDataLinkIdentifierType:
      return boost::make_unique<asb_uci::type::EW_IndexNumberDataLinkIdentifierType>().release();
    case uci::type::accessorType::executionPlanSetBaseType:
      return boost::make_unique<asb_uci::type::ExecutionPlanSetBaseType>().release();
    case uci::type::accessorType::executionPlanSetID_Type:
      return boost::make_unique<asb_uci::type::ExecutionPlanSetID_Type>().release();
    case uci::type::accessorType::executionSequenceInsertionType:
      return boost::make_unique<asb_uci::type::ExecutionSequenceInsertionType>().release();
    case uci::type::accessorType::executionSequencePlanSetsType:
      return boost::make_unique<asb_uci::type::ExecutionSequencePlanSetsType>().release();
    case uci::type::accessorType::executionSequenceType:
      return boost::make_unique<asb_uci::type::ExecutionSequenceType>().release();
    case uci::type::accessorType::externalDataRequestMDT:
      return boost::make_unique<asb_uci::type::ExternalDataRequestMDT>().release();
    case uci::type::accessorType::externalDataRequestMT:
      return boost::make_unique<asb_uci::type::ExternalDataRequestMT>().release();
    case uci::type::accessorType::externalDataRequestStatusMDT:
      return boost::make_unique<asb_uci::type::ExternalDataRequestStatusMDT>().release();
    case uci::type::accessorType::externalDataRequestStatusMT:
      return boost::make_unique<asb_uci::type::ExternalDataRequestStatusMT>().release();
    case uci::type::accessorType::externalRequestedDataID_Type:
      return boost::make_unique<asb_uci::type::ExternalRequestedDataID_Type>().release();
    case uci::type::accessorType::faultID_Type:
      return boost::make_unique<asb_uci::type::FaultID_Type>().release();
    case uci::type::accessorType::faultMDT:
      return boost::make_unique<asb_uci::type::FaultMDT>().release();
    case uci::type::accessorType::faultMT:
      return boost::make_unique<asb_uci::type::FaultMT>().release();
    case uci::type::accessorType::fileLocationID_Type:
      return boost::make_unique<asb_uci::type::FileLocationID_Type>().release();
    case uci::type::accessorType::fileLocationMDT:
      return boost::make_unique<asb_uci::type::FileLocationMDT>().release();
    case uci::type::accessorType::fileLocationMT:
      return boost::make_unique<asb_uci::type::FileLocationMT>().release();
    case uci::type::accessorType::fileMetadataID_Type:
      return boost::make_unique<asb_uci::type::FileMetadataID_Type>().release();
    case uci::type::accessorType::fileMetadataMDT:
      return boost::make_unique<asb_uci::type::FileMetadataMDT>().release();
    case uci::type::accessorType::fileMetadataMT:
      return boost::make_unique<asb_uci::type::FileMetadataMT>().release();
    case uci::type::accessorType::filterID_Type:
      return boost::make_unique<asb_uci::type::FilterID_Type>().release();
    case uci::type::accessorType::fixedPositionType:
      return boost::make_unique<asb_uci::type::FixedPositionType>().release();
    case uci::type::accessorType::flightActivityMT:
      return boost::make_unique<asb_uci::type::FlightActivityMT>().release();
    case uci::type::accessorType::flightActivityType:
      return boost::make_unique<asb_uci::type::FlightActivityType>().release();
    case uci::type::accessorType::flightCapabilityMDT:
      return boost::make_unique<asb_uci::type::FlightCapabilityMDT>().release();
    case uci::type::accessorType::flightCapabilityMT:
      return boost::make_unique<asb_uci::type::FlightCapabilityMT>().release();
    case uci::type::accessorType::flightCapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::FlightCapabilityStatusMDT>().release();
    case uci::type::accessorType::flightCapabilityStatusMT:
      return boost::make_unique<asb_uci::type::FlightCapabilityStatusMT>().release();
    case uci::type::accessorType::flightCapabilityType:
      return boost::make_unique<asb_uci::type::FlightCapabilityType>().release();
    case uci::type::accessorType::flightTaskBaseType:
      return boost::make_unique<asb_uci::type::FlightTaskBaseType>().release();
    case uci::type::accessorType::flightTaskType:
      return boost::make_unique<asb_uci::type::FlightTaskType>().release();
    case uci::type::accessorType::floatMinMaxType:
      return boost::make_unique<asb_uci::type::FloatMinMaxType>().release();
    case uci::type::accessorType::foreignKeyMapDRL:
      return boost::make_unique<asb_uci::type::ForeignKeyMapDRL>().release();
    case uci::type::accessorType::foreignKeyMapID_Type:
      return boost::make_unique<asb_uci::type::ForeignKeyMapID_Type>().release();
    case uci::type::accessorType::foreignKeyMapMDT:
      return boost::make_unique<asb_uci::type::ForeignKeyMapMDT>().release();
    case uci::type::accessorType::foreignKeyMapML:
      return boost::make_unique<asb_uci::type::ForeignKeyMapML>().release();
    case uci::type::accessorType::foreignKeyMapMT:
      return boost::make_unique<asb_uci::type::ForeignKeyMapMT>().release();
    case uci::type::accessorType::foreignKeyPairDRLE:
      return boost::make_unique<asb_uci::type::ForeignKeyPairDRLE>().release();
    case uci::type::accessorType::foreignKeyPairID_Type:
      return boost::make_unique<asb_uci::type::ForeignKeyPairID_Type>().release();
    case uci::type::accessorType::foreignKeyPairMDT:
      return boost::make_unique<asb_uci::type::ForeignKeyPairMDT>().release();
    case uci::type::accessorType::foreignKeyPairMT:
      return boost::make_unique<asb_uci::type::ForeignKeyPairMT>().release();
    case uci::type::accessorType::foreignKeyType:
      return boost::make_unique<asb_uci::type::ForeignKeyType>().release();
    case uci::type::accessorType::fOV_ActivityType:
      return boost::make_unique<asb_uci::type::FOV_ActivityType>().release();
    case uci::type::accessorType::fOV_Type:
      return boost::make_unique<asb_uci::type::FOV_Type>().release();
    case uci::type::accessorType::fOV_VolumeType:
      return boost::make_unique<asb_uci::type::FOV_VolumeType>().release();
    case uci::type::accessorType::frequencyDataBaseType:
      return boost::make_unique<asb_uci::type::FrequencyDataBaseType>().release();
    case uci::type::accessorType::frequencyDataType:
      return boost::make_unique<asb_uci::type::FrequencyDataType>().release();
    case uci::type::accessorType::fuelSubsystemExtendedStatusType:
      return boost::make_unique<asb_uci::type::FuelSubsystemExtendedStatusType>().release();
    case uci::type::accessorType::fuelTankComponentExtendedStatusType:
      return boost::make_unique<asb_uci::type::FuelTankComponentExtendedStatusType>().release();
    case uci::type::accessorType::functionalDamageConfidenceType:
      return boost::make_unique<asb_uci::type::FunctionalDamageConfidenceType>().release();
    case uci::type::accessorType::functionalDamageProbabilityType:
      return boost::make_unique<asb_uci::type::FunctionalDamageProbabilityType>().release();
    case uci::type::accessorType::functionID_Type:
      return boost::make_unique<asb_uci::type::FunctionID_Type>().release();
    case uci::type::accessorType::fusionSettingsMT:
      return boost::make_unique<asb_uci::type::FusionSettingsMT>().release();
    case uci::type::accessorType::fusionSettingsRequestMDT:
      return boost::make_unique<asb_uci::type::FusionSettingsRequestMDT>().release();
    case uci::type::accessorType::fusionSettingsRequestMT:
      return boost::make_unique<asb_uci::type::FusionSettingsRequestMT>().release();
    case uci::type::accessorType::fusionSettingsRequestStatusMDT:
      return boost::make_unique<asb_uci::type::FusionSettingsRequestStatusMDT>().release();
    case uci::type::accessorType::fusionSettingsRequestStatusMT:
      return boost::make_unique<asb_uci::type::FusionSettingsRequestStatusMT>().release();
    case uci::type::accessorType::gatewayActivityCommandType:
      return boost::make_unique<asb_uci::type::GatewayActivityCommandType>().release();
    default:
      return nullptr;
  }
}

} // namespace util

} // namespace asb_uci

