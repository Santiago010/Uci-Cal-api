/** @file DerivedTypesCopier5.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCopier5.h"

#include "asb_uci/type/CS_ActivityDetailType.h"
#include "asb_uci/type/CS_ActivityType.h"
#include "asb_uci/type/CS_AssessmentType.h"
#include "asb_uci/type/CS_CapabilityType.h"
#include "asb_uci/type/ComponentConfigurationType.h"
#include "asb_uci/type/ComponentDetailedStatusInfoType.h"
#include "asb_uci/type/ComponentDetailedStatusType.h"
#include "asb_uci/type/ComponentElementID_Type.h"
#include "asb_uci/type/ComponentExtendedStatusPET.h"
#include "asb_uci/type/ComponentID_Type.h"
#include "asb_uci/type/ComponentSettingsCommandMDT.h"
#include "asb_uci/type/ComponentSettingsCommandMT.h"
#include "asb_uci/type/ComponentSettingsCommandStatusMDT.h"
#include "asb_uci/type/ComponentSettingsCommandStatusMT.h"
#include "asb_uci/type/ComponentStatusDataRequestMDT.h"
#include "asb_uci/type/ComponentStatusDataRequestMT.h"
#include "asb_uci/type/ComponentStatusDataRequestStatusMDT.h"
#include "asb_uci/type/ComponentStatusDataRequestStatusMT.h"
#include "asb_uci/type/ComponentStatusMT.h"
#include "asb_uci/type/ComponentTemperatureType.h"
#include "asb_uci/type/CompressionRatioSettingsType.h"
#include "asb_uci/type/ConstrainingPlanPartsType.h"
#include "asb_uci/type/ControlInterfacesCommandMDT.h"
#include "asb_uci/type/ControlInterfacesCommandMT.h"
#include "asb_uci/type/ControlInterfacesCommandStatusMDT.h"
#include "asb_uci/type/ControlInterfacesCommandStatusMT.h"
#include "asb_uci/type/ControlRequestMDT.h"
#include "asb_uci/type/ControlRequestMT.h"
#include "asb_uci/type/ControlRequestStatusMDT.h"
#include "asb_uci/type/ControlRequestStatusMT.h"
#include "asb_uci/type/ControlSourcesCommandMDT.h"
#include "asb_uci/type/ControlSourcesCommandMT.h"
#include "asb_uci/type/ControlSourcesCommandStatusMDT.h"
#include "asb_uci/type/ControlSourcesCommandStatusMT.h"
#include "asb_uci/type/ControlStatusMT.h"
#include "asb_uci/type/CoordinatedRequirementSetID_Type.h"
#include "asb_uci/type/CoordinatedRequirementSetMT.h"
#include "asb_uci/type/CoordinatedRequirementSetStatusMT.h"
#include "asb_uci/type/CornerPointImageRegionOfInterestType.h"
#include "asb_uci/type/CorrelatedEntityID_Type.h"
#include "asb_uci/type/CounterSpaceActivityMT.h"
#include "asb_uci/type/CounterSpaceCapabilityMDT.h"
#include "asb_uci/type/CounterSpaceCapabilityMT.h"
#include "asb_uci/type/CounterSpaceCapabilityStatusMDT.h"
#include "asb_uci/type/CounterSpaceCapabilityStatusMT.h"
#include "asb_uci/type/CounterSpaceDeconflictionID_Type.h"
#include "asb_uci/type/CounterSpaceDeconflictionMDT.h"
#include "asb_uci/type/CounterSpaceDeconflictionMT.h"
#include "asb_uci/type/CounterSpaceReportID_Type.h"
#include "asb_uci/type/CounterSpaceReportMT.h"
#include "asb_uci/type/CryptoCommandMT.h"
#include "asb_uci/type/CryptoCommandStatusMDT.h"
#include "asb_uci/type/CryptoCommandStatusMT.h"
#include "asb_uci/type/CryptoCommandType.h"
#include "asb_uci/type/CryptoPortID_Type.h"
#include "asb_uci/type/CryptoSlotGroupID_Type.h"
#include "asb_uci/type/CryptoStatusMT.h"
#include "asb_uci/type/CryptoStatusType.h"
#include "asb_uci/type/DamageAssessmentDetailType.h"
#include "asb_uci/type/DamageAssessmentID_Type.h"
#include "asb_uci/type/DamageAssessmentMT.h"
#include "asb_uci/type/DamageAssessmentRequestMDT.h"
#include "asb_uci/type/DamageAssessmentRequestMT.h"
#include "asb_uci/type/DamageAssessmentRequestStatusMDT.h"
#include "asb_uci/type/DamageAssessmentRequestStatusMT.h"
#include "asb_uci/type/DamageEstimateID_Type.h"
#include "asb_uci/type/DamageEstimateMT.h"
#include "asb_uci/type/DamageEstimateRequestMDT.h"
#include "asb_uci/type/DamageEstimateRequestMT.h"
#include "asb_uci/type/DamageEstimateRequestStatusMDT.h"
#include "asb_uci/type/DamageEstimateRequestStatusMT.h"
#include "asb_uci/type/DamageInformationSourceType.h"
#include "asb_uci/type/DamageInformationWeatherSourceType.h"
#include "asb_uci/type/DamageReportDetailType.h"
#include "asb_uci/type/DamageReportID_Type.h"
#include "asb_uci/type/DamageReportMT.h"
#include "asb_uci/type/DamageSummaryID_Type.h"
#include "asb_uci/type/DamageSummaryMT.h"
#include "asb_uci/type/DamagedFunctionType.h"
#include "asb_uci/type/DataDeleteRequestMDT.h"
#include "asb_uci/type/DataDeleteRequestMT.h"
#include "asb_uci/type/DataDeleteRequestStatusMDT.h"
#include "asb_uci/type/DataDeleteRequestStatusMT.h"
#include "asb_uci/type/DataDestinationID_Type.h"
#include "asb_uci/type/DataLinkIdentifierPET.h"
#include "asb_uci/type/DataLinkNativeFilterPET.h"
#include "asb_uci/type/DataLinkNativeFilter_NetworkLinkType.h"
#include "asb_uci/type/DataLinkNativeInfoPET.h"
#include "asb_uci/type/DataManagementRequestMDT.h"
#include "asb_uci/type/DataManagementRequestMT.h"
#include "asb_uci/type/DataManagementRequestStatusMDT.h"
#include "asb_uci/type/DataManagementRequestStatusMT.h"
#include "asb_uci/type/DataPlanActivationCommandMDT.h"
#include "asb_uci/type/DataPlanActivationCommandMT.h"
#include "asb_uci/type/DataPlanActivationCommandStatusMDT.h"
#include "asb_uci/type/DataPlanActivationCommandStatusMT.h"
#include "asb_uci/type/DataPlanActivationStatusMT.h"
#include "asb_uci/type/DataPlanID_Type.h"
#include "asb_uci/type/DataPlanMT.h"
#include "asb_uci/type/DataPlanOverrideRequestMT.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"
#include "uci/type/CS_ActivityDetailType.h"
#include "uci/type/CS_ActivityType.h"
#include "uci/type/CS_AssessmentType.h"
#include "uci/type/CS_CapabilityType.h"
#include "uci/type/ComponentConfigurationType.h"
#include "uci/type/ComponentDetailedStatusInfoType.h"
#include "uci/type/ComponentDetailedStatusType.h"
#include "uci/type/ComponentElementID_Type.h"
#include "uci/type/ComponentExtendedStatusPET.h"
#include "uci/type/ComponentID_Type.h"
#include "uci/type/ComponentSettingsCommandMDT.h"
#include "uci/type/ComponentSettingsCommandMT.h"
#include "uci/type/ComponentSettingsCommandStatusMDT.h"
#include "uci/type/ComponentSettingsCommandStatusMT.h"
#include "uci/type/ComponentStatusDataRequestMDT.h"
#include "uci/type/ComponentStatusDataRequestMT.h"
#include "uci/type/ComponentStatusDataRequestStatusMDT.h"
#include "uci/type/ComponentStatusDataRequestStatusMT.h"
#include "uci/type/ComponentStatusMT.h"
#include "uci/type/ComponentTemperatureType.h"
#include "uci/type/CompressionRatioSettingsType.h"
#include "uci/type/ConstrainingPlanPartsType.h"
#include "uci/type/ControlInterfacesCommandMDT.h"
#include "uci/type/ControlInterfacesCommandMT.h"
#include "uci/type/ControlInterfacesCommandStatusMDT.h"
#include "uci/type/ControlInterfacesCommandStatusMT.h"
#include "uci/type/ControlRequestMDT.h"
#include "uci/type/ControlRequestMT.h"
#include "uci/type/ControlRequestStatusMDT.h"
#include "uci/type/ControlRequestStatusMT.h"
#include "uci/type/ControlSourcesCommandMDT.h"
#include "uci/type/ControlSourcesCommandMT.h"
#include "uci/type/ControlSourcesCommandStatusMDT.h"
#include "uci/type/ControlSourcesCommandStatusMT.h"
#include "uci/type/ControlStatusMT.h"
#include "uci/type/CoordinatedRequirementSetID_Type.h"
#include "uci/type/CoordinatedRequirementSetMT.h"
#include "uci/type/CoordinatedRequirementSetStatusMT.h"
#include "uci/type/CornerPointImageRegionOfInterestType.h"
#include "uci/type/CorrelatedEntityID_Type.h"
#include "uci/type/CounterSpaceActivityMT.h"
#include "uci/type/CounterSpaceCapabilityMDT.h"
#include "uci/type/CounterSpaceCapabilityMT.h"
#include "uci/type/CounterSpaceCapabilityStatusMDT.h"
#include "uci/type/CounterSpaceCapabilityStatusMT.h"
#include "uci/type/CounterSpaceDeconflictionID_Type.h"
#include "uci/type/CounterSpaceDeconflictionMDT.h"
#include "uci/type/CounterSpaceDeconflictionMT.h"
#include "uci/type/CounterSpaceReportID_Type.h"
#include "uci/type/CounterSpaceReportMT.h"
#include "uci/type/CryptoCommandMT.h"
#include "uci/type/CryptoCommandStatusMDT.h"
#include "uci/type/CryptoCommandStatusMT.h"
#include "uci/type/CryptoCommandType.h"
#include "uci/type/CryptoPortID_Type.h"
#include "uci/type/CryptoSlotGroupID_Type.h"
#include "uci/type/CryptoStatusMT.h"
#include "uci/type/CryptoStatusType.h"
#include "uci/type/DamageAssessmentDetailType.h"
#include "uci/type/DamageAssessmentID_Type.h"
#include "uci/type/DamageAssessmentMT.h"
#include "uci/type/DamageAssessmentRequestMDT.h"
#include "uci/type/DamageAssessmentRequestMT.h"
#include "uci/type/DamageAssessmentRequestStatusMDT.h"
#include "uci/type/DamageAssessmentRequestStatusMT.h"
#include "uci/type/DamageEstimateID_Type.h"
#include "uci/type/DamageEstimateMT.h"
#include "uci/type/DamageEstimateRequestMDT.h"
#include "uci/type/DamageEstimateRequestMT.h"
#include "uci/type/DamageEstimateRequestStatusMDT.h"
#include "uci/type/DamageEstimateRequestStatusMT.h"
#include "uci/type/DamageInformationSourceType.h"
#include "uci/type/DamageInformationWeatherSourceType.h"
#include "uci/type/DamageReportDetailType.h"
#include "uci/type/DamageReportID_Type.h"
#include "uci/type/DamageReportMT.h"
#include "uci/type/DamageSummaryID_Type.h"
#include "uci/type/DamageSummaryMT.h"
#include "uci/type/DamagedFunctionType.h"
#include "uci/type/DataDeleteRequestMDT.h"
#include "uci/type/DataDeleteRequestMT.h"
#include "uci/type/DataDeleteRequestStatusMDT.h"
#include "uci/type/DataDeleteRequestStatusMT.h"
#include "uci/type/DataDestinationID_Type.h"
#include "uci/type/DataLinkIdentifierPET.h"
#include "uci/type/DataLinkNativeFilterPET.h"
#include "uci/type/DataLinkNativeFilter_NetworkLinkType.h"
#include "uci/type/DataLinkNativeInfoPET.h"
#include "uci/type/DataManagementRequestMDT.h"
#include "uci/type/DataManagementRequestMT.h"
#include "uci/type/DataManagementRequestStatusMDT.h"
#include "uci/type/DataManagementRequestStatusMT.h"
#include "uci/type/DataPlanActivationCommandMDT.h"
#include "uci/type/DataPlanActivationCommandMT.h"
#include "uci/type/DataPlanActivationCommandStatusMDT.h"
#include "uci/type/DataPlanActivationCommandStatusMT.h"
#include "uci/type/DataPlanActivationStatusMT.h"
#include "uci/type/DataPlanID_Type.h"
#include "uci/type/DataPlanMT.h"
#include "uci/type/DataPlanOverrideRequestMT.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

bool DerivedTypesCopier5::copy(const uci::base::Accessor& source, uci::base::Accessor& destination) {
  switch (source.getAccessorType()) {
    case uci::type::accessorType::componentConfigurationType:
      dynamic_cast<asb_uci::type::ComponentConfigurationType&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentConfigurationType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentDetailedStatusInfoType:
      dynamic_cast<asb_uci::type::ComponentDetailedStatusInfoType&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentDetailedStatusInfoType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentDetailedStatusType:
      dynamic_cast<asb_uci::type::ComponentDetailedStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentDetailedStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentElementID_Type:
      dynamic_cast<asb_uci::type::ComponentElementID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentElementID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentExtendedStatusPET:
      dynamic_cast<asb_uci::type::ComponentExtendedStatusPET&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentExtendedStatusPET&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentID_Type:
      dynamic_cast<asb_uci::type::ComponentID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentSettingsCommandMDT:
      dynamic_cast<asb_uci::type::ComponentSettingsCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentSettingsCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentSettingsCommandMT:
      dynamic_cast<asb_uci::type::ComponentSettingsCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentSettingsCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentSettingsCommandStatusMDT:
      dynamic_cast<asb_uci::type::ComponentSettingsCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentSettingsCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentSettingsCommandStatusMT:
      dynamic_cast<asb_uci::type::ComponentSettingsCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentSettingsCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentStatusDataRequestMDT:
      dynamic_cast<asb_uci::type::ComponentStatusDataRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentStatusDataRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentStatusDataRequestMT:
      dynamic_cast<asb_uci::type::ComponentStatusDataRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentStatusDataRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentStatusDataRequestStatusMDT:
      dynamic_cast<asb_uci::type::ComponentStatusDataRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentStatusDataRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentStatusDataRequestStatusMT:
      dynamic_cast<asb_uci::type::ComponentStatusDataRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentStatusDataRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentStatusMT:
      dynamic_cast<asb_uci::type::ComponentStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::componentTemperatureType:
      dynamic_cast<asb_uci::type::ComponentTemperatureType&>(destination).copyImpl(dynamic_cast<const uci::type::ComponentTemperatureType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::compressionRatioSettingsType:
      dynamic_cast<asb_uci::type::CompressionRatioSettingsType&>(destination).copyImpl(dynamic_cast<const uci::type::CompressionRatioSettingsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::constrainingPlanPartsType:
      dynamic_cast<asb_uci::type::ConstrainingPlanPartsType&>(destination).copyImpl(dynamic_cast<const uci::type::ConstrainingPlanPartsType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlInterfacesCommandMDT:
      dynamic_cast<asb_uci::type::ControlInterfacesCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlInterfacesCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlInterfacesCommandMT:
      dynamic_cast<asb_uci::type::ControlInterfacesCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlInterfacesCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlInterfacesCommandStatusMDT:
      dynamic_cast<asb_uci::type::ControlInterfacesCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlInterfacesCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlInterfacesCommandStatusMT:
      dynamic_cast<asb_uci::type::ControlInterfacesCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlInterfacesCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlRequestMDT:
      dynamic_cast<asb_uci::type::ControlRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlRequestMT:
      dynamic_cast<asb_uci::type::ControlRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlRequestStatusMDT:
      dynamic_cast<asb_uci::type::ControlRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlRequestStatusMT:
      dynamic_cast<asb_uci::type::ControlRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlSourcesCommandMDT:
      dynamic_cast<asb_uci::type::ControlSourcesCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlSourcesCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlSourcesCommandMT:
      dynamic_cast<asb_uci::type::ControlSourcesCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlSourcesCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlSourcesCommandStatusMDT:
      dynamic_cast<asb_uci::type::ControlSourcesCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlSourcesCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlSourcesCommandStatusMT:
      dynamic_cast<asb_uci::type::ControlSourcesCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlSourcesCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::controlStatusMT:
      dynamic_cast<asb_uci::type::ControlStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::ControlStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::coordinatedRequirementSetID_Type:
      dynamic_cast<asb_uci::type::CoordinatedRequirementSetID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::CoordinatedRequirementSetID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::coordinatedRequirementSetMT:
      dynamic_cast<asb_uci::type::CoordinatedRequirementSetMT&>(destination).copyImpl(dynamic_cast<const uci::type::CoordinatedRequirementSetMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::coordinatedRequirementSetStatusMT:
      dynamic_cast<asb_uci::type::CoordinatedRequirementSetStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::CoordinatedRequirementSetStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cornerPointImageRegionOfInterestType:
      dynamic_cast<asb_uci::type::CornerPointImageRegionOfInterestType&>(destination).copyImpl(dynamic_cast<const uci::type::CornerPointImageRegionOfInterestType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::correlatedEntityID_Type:
      dynamic_cast<asb_uci::type::CorrelatedEntityID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::CorrelatedEntityID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::counterSpaceActivityMT:
      dynamic_cast<asb_uci::type::CounterSpaceActivityMT&>(destination).copyImpl(dynamic_cast<const uci::type::CounterSpaceActivityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::counterSpaceCapabilityMDT:
      dynamic_cast<asb_uci::type::CounterSpaceCapabilityMDT&>(destination).copyImpl(dynamic_cast<const uci::type::CounterSpaceCapabilityMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::counterSpaceCapabilityMT:
      dynamic_cast<asb_uci::type::CounterSpaceCapabilityMT&>(destination).copyImpl(dynamic_cast<const uci::type::CounterSpaceCapabilityMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::counterSpaceCapabilityStatusMDT:
      dynamic_cast<asb_uci::type::CounterSpaceCapabilityStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::CounterSpaceCapabilityStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::counterSpaceCapabilityStatusMT:
      dynamic_cast<asb_uci::type::CounterSpaceCapabilityStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::CounterSpaceCapabilityStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::counterSpaceDeconflictionID_Type:
      dynamic_cast<asb_uci::type::CounterSpaceDeconflictionID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::CounterSpaceDeconflictionID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::counterSpaceDeconflictionMDT:
      dynamic_cast<asb_uci::type::CounterSpaceDeconflictionMDT&>(destination).copyImpl(dynamic_cast<const uci::type::CounterSpaceDeconflictionMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::counterSpaceDeconflictionMT:
      dynamic_cast<asb_uci::type::CounterSpaceDeconflictionMT&>(destination).copyImpl(dynamic_cast<const uci::type::CounterSpaceDeconflictionMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::counterSpaceReportID_Type:
      dynamic_cast<asb_uci::type::CounterSpaceReportID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::CounterSpaceReportID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::counterSpaceReportMT:
      dynamic_cast<asb_uci::type::CounterSpaceReportMT&>(destination).copyImpl(dynamic_cast<const uci::type::CounterSpaceReportMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cryptoCommandMT:
      dynamic_cast<asb_uci::type::CryptoCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::CryptoCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cryptoCommandStatusMDT:
      dynamic_cast<asb_uci::type::CryptoCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::CryptoCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cryptoCommandStatusMT:
      dynamic_cast<asb_uci::type::CryptoCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::CryptoCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cryptoCommandType:
      dynamic_cast<asb_uci::type::CryptoCommandType&>(destination).copyImpl(dynamic_cast<const uci::type::CryptoCommandType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cryptoPortID_Type:
      dynamic_cast<asb_uci::type::CryptoPortID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::CryptoPortID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cryptoSlotGroupID_Type:
      dynamic_cast<asb_uci::type::CryptoSlotGroupID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::CryptoSlotGroupID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cryptoStatusMT:
      dynamic_cast<asb_uci::type::CryptoStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::CryptoStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cryptoStatusType:
      dynamic_cast<asb_uci::type::CryptoStatusType&>(destination).copyImpl(dynamic_cast<const uci::type::CryptoStatusType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cS_ActivityDetailType:
      dynamic_cast<asb_uci::type::CS_ActivityDetailType&>(destination).copyImpl(dynamic_cast<const uci::type::CS_ActivityDetailType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cS_ActivityType:
      dynamic_cast<asb_uci::type::CS_ActivityType&>(destination).copyImpl(dynamic_cast<const uci::type::CS_ActivityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cS_AssessmentType:
      dynamic_cast<asb_uci::type::CS_AssessmentType&>(destination).copyImpl(dynamic_cast<const uci::type::CS_AssessmentType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::cS_CapabilityType:
      dynamic_cast<asb_uci::type::CS_CapabilityType&>(destination).copyImpl(dynamic_cast<const uci::type::CS_CapabilityType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageAssessmentDetailType:
      dynamic_cast<asb_uci::type::DamageAssessmentDetailType&>(destination).copyImpl(dynamic_cast<const uci::type::DamageAssessmentDetailType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageAssessmentID_Type:
      dynamic_cast<asb_uci::type::DamageAssessmentID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DamageAssessmentID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageAssessmentMT:
      dynamic_cast<asb_uci::type::DamageAssessmentMT&>(destination).copyImpl(dynamic_cast<const uci::type::DamageAssessmentMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageAssessmentRequestMDT:
      dynamic_cast<asb_uci::type::DamageAssessmentRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DamageAssessmentRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageAssessmentRequestMT:
      dynamic_cast<asb_uci::type::DamageAssessmentRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::DamageAssessmentRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageAssessmentRequestStatusMDT:
      dynamic_cast<asb_uci::type::DamageAssessmentRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DamageAssessmentRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageAssessmentRequestStatusMT:
      dynamic_cast<asb_uci::type::DamageAssessmentRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DamageAssessmentRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damagedFunctionType:
      dynamic_cast<asb_uci::type::DamagedFunctionType&>(destination).copyImpl(dynamic_cast<const uci::type::DamagedFunctionType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageEstimateID_Type:
      dynamic_cast<asb_uci::type::DamageEstimateID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DamageEstimateID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageEstimateMT:
      dynamic_cast<asb_uci::type::DamageEstimateMT&>(destination).copyImpl(dynamic_cast<const uci::type::DamageEstimateMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageEstimateRequestMDT:
      dynamic_cast<asb_uci::type::DamageEstimateRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DamageEstimateRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageEstimateRequestMT:
      dynamic_cast<asb_uci::type::DamageEstimateRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::DamageEstimateRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageEstimateRequestStatusMDT:
      dynamic_cast<asb_uci::type::DamageEstimateRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DamageEstimateRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageEstimateRequestStatusMT:
      dynamic_cast<asb_uci::type::DamageEstimateRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DamageEstimateRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageInformationSourceType:
      dynamic_cast<asb_uci::type::DamageInformationSourceType&>(destination).copyImpl(dynamic_cast<const uci::type::DamageInformationSourceType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageInformationWeatherSourceType:
      dynamic_cast<asb_uci::type::DamageInformationWeatherSourceType&>(destination).copyImpl(dynamic_cast<const uci::type::DamageInformationWeatherSourceType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageReportDetailType:
      dynamic_cast<asb_uci::type::DamageReportDetailType&>(destination).copyImpl(dynamic_cast<const uci::type::DamageReportDetailType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageReportID_Type:
      dynamic_cast<asb_uci::type::DamageReportID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DamageReportID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageReportMT:
      dynamic_cast<asb_uci::type::DamageReportMT&>(destination).copyImpl(dynamic_cast<const uci::type::DamageReportMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageSummaryID_Type:
      dynamic_cast<asb_uci::type::DamageSummaryID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DamageSummaryID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::damageSummaryMT:
      dynamic_cast<asb_uci::type::DamageSummaryMT&>(destination).copyImpl(dynamic_cast<const uci::type::DamageSummaryMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataDeleteRequestMDT:
      dynamic_cast<asb_uci::type::DataDeleteRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataDeleteRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataDeleteRequestMT:
      dynamic_cast<asb_uci::type::DataDeleteRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataDeleteRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataDeleteRequestStatusMDT:
      dynamic_cast<asb_uci::type::DataDeleteRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataDeleteRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataDeleteRequestStatusMT:
      dynamic_cast<asb_uci::type::DataDeleteRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataDeleteRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataDestinationID_Type:
      dynamic_cast<asb_uci::type::DataDestinationID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DataDestinationID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataLinkIdentifierPET:
      dynamic_cast<asb_uci::type::DataLinkIdentifierPET&>(destination).copyImpl(dynamic_cast<const uci::type::DataLinkIdentifierPET&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataLinkNativeFilter_NetworkLinkType:
      dynamic_cast<asb_uci::type::DataLinkNativeFilter_NetworkLinkType&>(destination).copyImpl(dynamic_cast<const uci::type::DataLinkNativeFilter_NetworkLinkType&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataLinkNativeFilterPET:
      dynamic_cast<asb_uci::type::DataLinkNativeFilterPET&>(destination).copyImpl(dynamic_cast<const uci::type::DataLinkNativeFilterPET&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataLinkNativeInfoPET:
      dynamic_cast<asb_uci::type::DataLinkNativeInfoPET&>(destination).copyImpl(dynamic_cast<const uci::type::DataLinkNativeInfoPET&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataManagementRequestMDT:
      dynamic_cast<asb_uci::type::DataManagementRequestMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataManagementRequestMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataManagementRequestMT:
      dynamic_cast<asb_uci::type::DataManagementRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataManagementRequestMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataManagementRequestStatusMDT:
      dynamic_cast<asb_uci::type::DataManagementRequestStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataManagementRequestStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataManagementRequestStatusMT:
      dynamic_cast<asb_uci::type::DataManagementRequestStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataManagementRequestStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataPlanActivationCommandMDT:
      dynamic_cast<asb_uci::type::DataPlanActivationCommandMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataPlanActivationCommandMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataPlanActivationCommandMT:
      dynamic_cast<asb_uci::type::DataPlanActivationCommandMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataPlanActivationCommandMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataPlanActivationCommandStatusMDT:
      dynamic_cast<asb_uci::type::DataPlanActivationCommandStatusMDT&>(destination).copyImpl(dynamic_cast<const uci::type::DataPlanActivationCommandStatusMDT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataPlanActivationCommandStatusMT:
      dynamic_cast<asb_uci::type::DataPlanActivationCommandStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataPlanActivationCommandStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataPlanActivationStatusMT:
      dynamic_cast<asb_uci::type::DataPlanActivationStatusMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataPlanActivationStatusMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataPlanID_Type:
      dynamic_cast<asb_uci::type::DataPlanID_Type&>(destination).copyImpl(dynamic_cast<const uci::type::DataPlanID_Type&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataPlanMT:
      dynamic_cast<asb_uci::type::DataPlanMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataPlanMT&>(source), false);
      return true;
      break;
    case uci::type::accessorType::dataPlanOverrideRequestMT:
      dynamic_cast<asb_uci::type::DataPlanOverrideRequestMT&>(destination).copyImpl(dynamic_cast<const uci::type::DataPlanOverrideRequestMT&>(source), false);
      return true;
      break;
    default:
      return false;
  }
}

} // namespace util

} // namespace asb_uci

