/** @file DerivedTypesDeserializer.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesDeserializer.h"

#include <sstream>
#include <string>

#include <boost/property_tree/ptree.hpp>

#include "asb_uci/util/DerivedTypesDeserializer1.h"
#include "asb_uci/util/DerivedTypesDeserializer10.h"
#include "asb_uci/util/DerivedTypesDeserializer11.h"
#include "asb_uci/util/DerivedTypesDeserializer12.h"
#include "asb_uci/util/DerivedTypesDeserializer13.h"
#include "asb_uci/util/DerivedTypesDeserializer14.h"
#include "asb_uci/util/DerivedTypesDeserializer15.h"
#include "asb_uci/util/DerivedTypesDeserializer16.h"
#include "asb_uci/util/DerivedTypesDeserializer17.h"
#include "asb_uci/util/DerivedTypesDeserializer18.h"
#include "asb_uci/util/DerivedTypesDeserializer19.h"
#include "asb_uci/util/DerivedTypesDeserializer2.h"
#include "asb_uci/util/DerivedTypesDeserializer20.h"
#include "asb_uci/util/DerivedTypesDeserializer21.h"
#include "asb_uci/util/DerivedTypesDeserializer3.h"
#include "asb_uci/util/DerivedTypesDeserializer4.h"
#include "asb_uci/util/DerivedTypesDeserializer5.h"
#include "asb_uci/util/DerivedTypesDeserializer6.h"
#include "asb_uci/util/DerivedTypesDeserializer7.h"
#include "asb_uci/util/DerivedTypesDeserializer8.h"
#include "asb_uci/util/DerivedTypesDeserializer9.h"
#include "uci/base/Accessor.h"
#include "uci/base/UCIException.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

void DerivedTypesDeserializer::deserialize(const boost::property_tree::ptree& propTree, uci::base::Accessor& accessor, std::string& nodeName, std::string& nsPrefix, const bool topLevel) {
  if (DerivedTypesDeserializer1::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer2::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer3::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer4::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer5::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer6::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer7::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer8::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer9::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer10::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer11::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer12::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer13::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer14::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer15::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer16::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer17::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer18::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer19::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer20::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  if (DerivedTypesDeserializer21::deserialize(propTree, accessor, nodeName, nsPrefix, topLevel)) {
    return;
  }
  std::ostringstream errMsg;
  errMsg << "Unexpected accessor type " << accessor.getAccessorType() << " encountered during derived type deserialization";
  throw uci::base::UCIException(errMsg);
}

} // namespace util

} // namespace asb_uci

