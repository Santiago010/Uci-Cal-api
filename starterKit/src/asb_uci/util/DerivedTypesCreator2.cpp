/** @file DerivedTypesCreator2.cpp
 *
 * @warning This file is automatically generated, edit at your own risk
 *
 * This file was generated on 04/01/2024 at 02:25:16 PM
 *
 * <pre>
 * Unclassified               U N C L A S S I F I E D               Unclassified
 *
 * DISTRIBUTION STATEMENT D: Distribution authorized to Department of Defense
 *    and U.S. DoD contractors only, Critical Technology, Export Controlled,
 *    26 January 2023. Other requests for this document shall be referred to
 *    AFLCMC/XA (OAMO), Wright-Patterson AFB OH 45433.
 *
 * DESTRUCTION NOTICE: Destroy by any method that will prevent disclosure of
 *    contents or reconstruction of the document.
 *
 * WARNING - This document contains technical data whose export is restricted
 *    by the Arms Export Control Act (Section 2751 of Title 22, United States
 *    Code) or the Export Control Reform Act of 2018 (Chapter 58 Sections
 *    4801-4852 of Title 50, United States Code). Violations of these export
 *    laws are subject to severe criminal penalties. Disseminate in accordance
 *    with provisions of DoD Directive 5230.25 and DoD Instruction 2040.02.
 *
 * Controlled by: USAF
 * Controlled by: AFLCMC/XA (OAMO)
 * CUI Category(ies): CTI, EXPT
 * Distribution Statement D
 * POC: Wayne Artuso, 937-713-5124
 *
 * CUI//SP-CTI/SP-EXPT
 * </pre>
 *
 */

#include "asb_uci/util/DerivedTypesCreator2.h"

#include <boost/smart_ptr/make_unique.hpp>

#include "asb_uci/type/AMTI_ActivityCommandType.h"
#include "asb_uci/type/AMTI_ActivityMT.h"
#include "asb_uci/type/AMTI_ActivityType.h"
#include "asb_uci/type/AMTI_CapabilityCommandType.h"
#include "asb_uci/type/AMTI_CapabilityMDT.h"
#include "asb_uci/type/AMTI_CapabilityMT.h"
#include "asb_uci/type/AMTI_CapabilityStatusMDT.h"
#include "asb_uci/type/AMTI_CapabilityStatusMT.h"
#include "asb_uci/type/AMTI_CapabilityType.h"
#include "asb_uci/type/AMTI_CollectionConstraintsType.h"
#include "asb_uci/type/AMTI_CommandMT.h"
#include "asb_uci/type/AMTI_CommandStatusMDT.h"
#include "asb_uci/type/AMTI_CommandStatusMT.h"
#include "asb_uci/type/AMTI_SettingsCommandMDT.h"
#include "asb_uci/type/AMTI_SettingsCommandMT.h"
#include "asb_uci/type/AMTI_SettingsCommandStatusMDT.h"
#include "asb_uci/type/AMTI_SettingsCommandStatusMT.h"
#include "asb_uci/type/AMTI_TaskBaseType.h"
#include "asb_uci/type/AMTI_TaskType.h"
#include "asb_uci/type/AO_ActivityCommandType.h"
#include "asb_uci/type/AO_ActivityMT.h"
#include "asb_uci/type/AO_ActivityType.h"
#include "asb_uci/type/AO_CapabilityCommandType.h"
#include "asb_uci/type/AO_CapabilityMDT.h"
#include "asb_uci/type/AO_CapabilityMT.h"
#include "asb_uci/type/AO_CapabilityStatusMDT.h"
#include "asb_uci/type/AO_CapabilityStatusMT.h"
#include "asb_uci/type/AO_CapabilityType.h"
#include "asb_uci/type/AO_CommandMT.h"
#include "asb_uci/type/AO_CommandStatusMDT.h"
#include "asb_uci/type/AO_CommandStatusMT.h"
#include "asb_uci/type/AO_ConsentRequestMT.h"
#include "asb_uci/type/AO_ConsentRequestStatusMDT.h"
#include "asb_uci/type/AO_ConsentRequestStatusMT.h"
#include "asb_uci/type/AO_ConsentRequestType.h"
#include "asb_uci/type/AO_SettingsCommandMDT.h"
#include "asb_uci/type/AO_SettingsCommandMT.h"
#include "asb_uci/type/AO_SettingsCommandStatusMDT.h"
#include "asb_uci/type/AO_SettingsCommandStatusMT.h"
#include "asb_uci/type/AO_TaskBaseType.h"
#include "asb_uci/type/AO_TaskType.h"
#include "asb_uci/type/ATO_FileTraceabilityType.h"
#include "asb_uci/type/ATO_TraceabilityType.h"
#include "asb_uci/type/ATR_ProcessingParametersType.h"
#include "asb_uci/type/ATR_ProcessingResultsType.h"
#include "asb_uci/type/AirSampleCommandStatusMDT.h"
#include "asb_uci/type/AirSampleCommandStatusMT.h"
#include "asb_uci/type/AirSampleSettingsCommandMDT.h"
#include "asb_uci/type/AirSampleSettingsCommandMT.h"
#include "asb_uci/type/AirSampleSettingsCommandStatusMDT.h"
#include "asb_uci/type/AirSampleSettingsCommandStatusMT.h"
#include "asb_uci/type/AirSampleTaskBaseType.h"
#include "asb_uci/type/AirSampleTaskType.h"
#include "asb_uci/type/AnalysisRouteID_Type.h"
#include "asb_uci/type/AnalysisRouteMT.h"
#include "asb_uci/type/AnalysisRouteRequestMDT.h"
#include "asb_uci/type/AnalysisRouteRequestMT.h"
#include "asb_uci/type/AnalysisRouteRequestStatusMDT.h"
#include "asb_uci/type/AnalysisRouteRequestStatusMT.h"
#include "asb_uci/type/AnglePairType.h"
#include "asb_uci/type/AntennaID_Type.h"
#include "asb_uci/type/AntennaResourceID_Type.h"
#include "asb_uci/type/ApplicabilityType.h"
#include "asb_uci/type/ApprovalAuthorityID_Type.h"
#include "asb_uci/type/ApprovalAuthorityMDT.h"
#include "asb_uci/type/ApprovalAuthorityMT.h"
#include "asb_uci/type/ApprovalAuthorityRequestMDT.h"
#include "asb_uci/type/ApprovalAuthorityRequestMT.h"
#include "asb_uci/type/ApprovalAuthorityRequestStatusMDT.h"
#include "asb_uci/type/ApprovalAuthorityRequestStatusMT.h"
#include "asb_uci/type/ApprovalManagementCommandMDT.h"
#include "asb_uci/type/ApprovalManagementCommandMT.h"
#include "asb_uci/type/ApprovalManagementCommandStatusMDT.h"
#include "asb_uci/type/ApprovalManagementCommandStatusMT.h"
#include "asb_uci/type/ApprovalPolicyBaseType.h"
#include "asb_uci/type/ApprovalPolicyID_Type.h"
#include "asb_uci/type/ApprovalPolicyMDT.h"
#include "asb_uci/type/ApprovalPolicyMT.h"
#include "asb_uci/type/ApprovalRequestMDT.h"
#include "asb_uci/type/ApprovalRequestMT.h"
#include "asb_uci/type/ApprovalRequestStatusMDT.h"
#include "asb_uci/type/ApprovalRequestStatusMT.h"
#include "asb_uci/type/AssessmentID_Type.h"
#include "asb_uci/type/AssessmentMT.h"
#include "asb_uci/type/AssessmentRequestMDT.h"
#include "asb_uci/type/AssessmentRequestMT.h"
#include "asb_uci/type/AssessmentRequestStatusMDT.h"
#include "asb_uci/type/AssessmentRequestStatusMT.h"
#include "asb_uci/type/AssessmentStatusType.h"
#include "asb_uci/type/AugmentationProcessingParametersType.h"
#include "asb_uci/type/AuthorizationID_Type.h"
#include "asb_uci/type/AuthorizationMDT.h"
#include "asb_uci/type/AuthorizationMT.h"
#include "asb_uci/type/AutonomousPlanCommandType.h"
#include "asb_uci/type/AutonomousPlanningActionID_Type.h"
#include "asb_uci/type/AutonomousPlanningConstrainingPlansType.h"
#include "asb_uci/type/AutonomousPlanningOtherSystemConstrainingPlansType.h"
#include "asb_uci/type/AzElRequiredReferenceType.h"
#include "asb_uci/type/BaseEOB_RecordType.h"
#include "asb_uci/type/BeamID_Type.h"
#include "uci/base/Accessor.h"
#include "uci/base/accessorType.h"

/**  */
namespace asb_uci {

/**  */
namespace util {

uci::base::Accessor* DerivedTypesCreator2::create(const uci::base::accessorType::AccessorType type) {
  switch (type) {
    case uci::type::accessorType::airSampleCommandStatusMDT:
      return boost::make_unique<asb_uci::type::AirSampleCommandStatusMDT>().release();
    case uci::type::accessorType::airSampleCommandStatusMT:
      return boost::make_unique<asb_uci::type::AirSampleCommandStatusMT>().release();
    case uci::type::accessorType::airSampleSettingsCommandMDT:
      return boost::make_unique<asb_uci::type::AirSampleSettingsCommandMDT>().release();
    case uci::type::accessorType::airSampleSettingsCommandMT:
      return boost::make_unique<asb_uci::type::AirSampleSettingsCommandMT>().release();
    case uci::type::accessorType::airSampleSettingsCommandStatusMDT:
      return boost::make_unique<asb_uci::type::AirSampleSettingsCommandStatusMDT>().release();
    case uci::type::accessorType::airSampleSettingsCommandStatusMT:
      return boost::make_unique<asb_uci::type::AirSampleSettingsCommandStatusMT>().release();
    case uci::type::accessorType::airSampleTaskBaseType:
      return boost::make_unique<asb_uci::type::AirSampleTaskBaseType>().release();
    case uci::type::accessorType::airSampleTaskType:
      return boost::make_unique<asb_uci::type::AirSampleTaskType>().release();
    case uci::type::accessorType::aMTI_ActivityCommandType:
      return boost::make_unique<asb_uci::type::AMTI_ActivityCommandType>().release();
    case uci::type::accessorType::aMTI_ActivityMT:
      return boost::make_unique<asb_uci::type::AMTI_ActivityMT>().release();
    case uci::type::accessorType::aMTI_ActivityType:
      return boost::make_unique<asb_uci::type::AMTI_ActivityType>().release();
    case uci::type::accessorType::aMTI_CapabilityCommandType:
      return boost::make_unique<asb_uci::type::AMTI_CapabilityCommandType>().release();
    case uci::type::accessorType::aMTI_CapabilityMDT:
      return boost::make_unique<asb_uci::type::AMTI_CapabilityMDT>().release();
    case uci::type::accessorType::aMTI_CapabilityMT:
      return boost::make_unique<asb_uci::type::AMTI_CapabilityMT>().release();
    case uci::type::accessorType::aMTI_CapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::AMTI_CapabilityStatusMDT>().release();
    case uci::type::accessorType::aMTI_CapabilityStatusMT:
      return boost::make_unique<asb_uci::type::AMTI_CapabilityStatusMT>().release();
    case uci::type::accessorType::aMTI_CapabilityType:
      return boost::make_unique<asb_uci::type::AMTI_CapabilityType>().release();
    case uci::type::accessorType::aMTI_CollectionConstraintsType:
      return boost::make_unique<asb_uci::type::AMTI_CollectionConstraintsType>().release();
    case uci::type::accessorType::aMTI_CommandMT:
      return boost::make_unique<asb_uci::type::AMTI_CommandMT>().release();
    case uci::type::accessorType::aMTI_CommandStatusMDT:
      return boost::make_unique<asb_uci::type::AMTI_CommandStatusMDT>().release();
    case uci::type::accessorType::aMTI_CommandStatusMT:
      return boost::make_unique<asb_uci::type::AMTI_CommandStatusMT>().release();
    case uci::type::accessorType::aMTI_SettingsCommandMDT:
      return boost::make_unique<asb_uci::type::AMTI_SettingsCommandMDT>().release();
    case uci::type::accessorType::aMTI_SettingsCommandMT:
      return boost::make_unique<asb_uci::type::AMTI_SettingsCommandMT>().release();
    case uci::type::accessorType::aMTI_SettingsCommandStatusMDT:
      return boost::make_unique<asb_uci::type::AMTI_SettingsCommandStatusMDT>().release();
    case uci::type::accessorType::aMTI_SettingsCommandStatusMT:
      return boost::make_unique<asb_uci::type::AMTI_SettingsCommandStatusMT>().release();
    case uci::type::accessorType::aMTI_TaskBaseType:
      return boost::make_unique<asb_uci::type::AMTI_TaskBaseType>().release();
    case uci::type::accessorType::aMTI_TaskType:
      return boost::make_unique<asb_uci::type::AMTI_TaskType>().release();
    case uci::type::accessorType::analysisRouteID_Type:
      return boost::make_unique<asb_uci::type::AnalysisRouteID_Type>().release();
    case uci::type::accessorType::analysisRouteMT:
      return boost::make_unique<asb_uci::type::AnalysisRouteMT>().release();
    case uci::type::accessorType::analysisRouteRequestMDT:
      return boost::make_unique<asb_uci::type::AnalysisRouteRequestMDT>().release();
    case uci::type::accessorType::analysisRouteRequestMT:
      return boost::make_unique<asb_uci::type::AnalysisRouteRequestMT>().release();
    case uci::type::accessorType::analysisRouteRequestStatusMDT:
      return boost::make_unique<asb_uci::type::AnalysisRouteRequestStatusMDT>().release();
    case uci::type::accessorType::analysisRouteRequestStatusMT:
      return boost::make_unique<asb_uci::type::AnalysisRouteRequestStatusMT>().release();
    case uci::type::accessorType::anglePairType:
      return boost::make_unique<asb_uci::type::AnglePairType>().release();
    case uci::type::accessorType::antennaID_Type:
      return boost::make_unique<asb_uci::type::AntennaID_Type>().release();
    case uci::type::accessorType::antennaResourceID_Type:
      return boost::make_unique<asb_uci::type::AntennaResourceID_Type>().release();
    case uci::type::accessorType::aO_ActivityCommandType:
      return boost::make_unique<asb_uci::type::AO_ActivityCommandType>().release();
    case uci::type::accessorType::aO_ActivityMT:
      return boost::make_unique<asb_uci::type::AO_ActivityMT>().release();
    case uci::type::accessorType::aO_ActivityType:
      return boost::make_unique<asb_uci::type::AO_ActivityType>().release();
    case uci::type::accessorType::aO_CapabilityCommandType:
      return boost::make_unique<asb_uci::type::AO_CapabilityCommandType>().release();
    case uci::type::accessorType::aO_CapabilityMDT:
      return boost::make_unique<asb_uci::type::AO_CapabilityMDT>().release();
    case uci::type::accessorType::aO_CapabilityMT:
      return boost::make_unique<asb_uci::type::AO_CapabilityMT>().release();
    case uci::type::accessorType::aO_CapabilityStatusMDT:
      return boost::make_unique<asb_uci::type::AO_CapabilityStatusMDT>().release();
    case uci::type::accessorType::aO_CapabilityStatusMT:
      return boost::make_unique<asb_uci::type::AO_CapabilityStatusMT>().release();
    case uci::type::accessorType::aO_CapabilityType:
      return boost::make_unique<asb_uci::type::AO_CapabilityType>().release();
    case uci::type::accessorType::aO_CommandMT:
      return boost::make_unique<asb_uci::type::AO_CommandMT>().release();
    case uci::type::accessorType::aO_CommandStatusMDT:
      return boost::make_unique<asb_uci::type::AO_CommandStatusMDT>().release();
    case uci::type::accessorType::aO_CommandStatusMT:
      return boost::make_unique<asb_uci::type::AO_CommandStatusMT>().release();
    case uci::type::accessorType::aO_ConsentRequestMT:
      return boost::make_unique<asb_uci::type::AO_ConsentRequestMT>().release();
    case uci::type::accessorType::aO_ConsentRequestStatusMDT:
      return boost::make_unique<asb_uci::type::AO_ConsentRequestStatusMDT>().release();
    case uci::type::accessorType::aO_ConsentRequestStatusMT:
      return boost::make_unique<asb_uci::type::AO_ConsentRequestStatusMT>().release();
    case uci::type::accessorType::aO_ConsentRequestType:
      return boost::make_unique<asb_uci::type::AO_ConsentRequestType>().release();
    case uci::type::accessorType::aO_SettingsCommandMDT:
      return boost::make_unique<asb_uci::type::AO_SettingsCommandMDT>().release();
    case uci::type::accessorType::aO_SettingsCommandMT:
      return boost::make_unique<asb_uci::type::AO_SettingsCommandMT>().release();
    case uci::type::accessorType::aO_SettingsCommandStatusMDT:
      return boost::make_unique<asb_uci::type::AO_SettingsCommandStatusMDT>().release();
    case uci::type::accessorType::aO_SettingsCommandStatusMT:
      return boost::make_unique<asb_uci::type::AO_SettingsCommandStatusMT>().release();
    case uci::type::accessorType::aO_TaskBaseType:
      return boost::make_unique<asb_uci::type::AO_TaskBaseType>().release();
    case uci::type::accessorType::aO_TaskType:
      return boost::make_unique<asb_uci::type::AO_TaskType>().release();
    case uci::type::accessorType::applicabilityType:
      return boost::make_unique<asb_uci::type::ApplicabilityType>().release();
    case uci::type::accessorType::approvalAuthorityID_Type:
      return boost::make_unique<asb_uci::type::ApprovalAuthorityID_Type>().release();
    case uci::type::accessorType::approvalAuthorityMDT:
      return boost::make_unique<asb_uci::type::ApprovalAuthorityMDT>().release();
    case uci::type::accessorType::approvalAuthorityMT:
      return boost::make_unique<asb_uci::type::ApprovalAuthorityMT>().release();
    case uci::type::accessorType::approvalAuthorityRequestMDT:
      return boost::make_unique<asb_uci::type::ApprovalAuthorityRequestMDT>().release();
    case uci::type::accessorType::approvalAuthorityRequestMT:
      return boost::make_unique<asb_uci::type::ApprovalAuthorityRequestMT>().release();
    case uci::type::accessorType::approvalAuthorityRequestStatusMDT:
      return boost::make_unique<asb_uci::type::ApprovalAuthorityRequestStatusMDT>().release();
    case uci::type::accessorType::approvalAuthorityRequestStatusMT:
      return boost::make_unique<asb_uci::type::ApprovalAuthorityRequestStatusMT>().release();
    case uci::type::accessorType::approvalManagementCommandMDT:
      return boost::make_unique<asb_uci::type::ApprovalManagementCommandMDT>().release();
    case uci::type::accessorType::approvalManagementCommandMT:
      return boost::make_unique<asb_uci::type::ApprovalManagementCommandMT>().release();
    case uci::type::accessorType::approvalManagementCommandStatusMDT:
      return boost::make_unique<asb_uci::type::ApprovalManagementCommandStatusMDT>().release();
    case uci::type::accessorType::approvalManagementCommandStatusMT:
      return boost::make_unique<asb_uci::type::ApprovalManagementCommandStatusMT>().release();
    case uci::type::accessorType::approvalPolicyBaseType:
      return boost::make_unique<asb_uci::type::ApprovalPolicyBaseType>().release();
    case uci::type::accessorType::approvalPolicyID_Type:
      return boost::make_unique<asb_uci::type::ApprovalPolicyID_Type>().release();
    case uci::type::accessorType::approvalPolicyMDT:
      return boost::make_unique<asb_uci::type::ApprovalPolicyMDT>().release();
    case uci::type::accessorType::approvalPolicyMT:
      return boost::make_unique<asb_uci::type::ApprovalPolicyMT>().release();
    case uci::type::accessorType::approvalRequestMDT:
      return boost::make_unique<asb_uci::type::ApprovalRequestMDT>().release();
    case uci::type::accessorType::approvalRequestMT:
      return boost::make_unique<asb_uci::type::ApprovalRequestMT>().release();
    case uci::type::accessorType::approvalRequestStatusMDT:
      return boost::make_unique<asb_uci::type::ApprovalRequestStatusMDT>().release();
    case uci::type::accessorType::approvalRequestStatusMT:
      return boost::make_unique<asb_uci::type::ApprovalRequestStatusMT>().release();
    case uci::type::accessorType::assessmentID_Type:
      return boost::make_unique<asb_uci::type::AssessmentID_Type>().release();
    case uci::type::accessorType::assessmentMT:
      return boost::make_unique<asb_uci::type::AssessmentMT>().release();
    case uci::type::accessorType::assessmentRequestMDT:
      return boost::make_unique<asb_uci::type::AssessmentRequestMDT>().release();
    case uci::type::accessorType::assessmentRequestMT:
      return boost::make_unique<asb_uci::type::AssessmentRequestMT>().release();
    case uci::type::accessorType::assessmentRequestStatusMDT:
      return boost::make_unique<asb_uci::type::AssessmentRequestStatusMDT>().release();
    case uci::type::accessorType::assessmentRequestStatusMT:
      return boost::make_unique<asb_uci::type::AssessmentRequestStatusMT>().release();
    case uci::type::accessorType::assessmentStatusType:
      return boost::make_unique<asb_uci::type::AssessmentStatusType>().release();
    case uci::type::accessorType::aTO_FileTraceabilityType:
      return boost::make_unique<asb_uci::type::ATO_FileTraceabilityType>().release();
    case uci::type::accessorType::aTO_TraceabilityType:
      return boost::make_unique<asb_uci::type::ATO_TraceabilityType>().release();
    case uci::type::accessorType::aTR_ProcessingParametersType:
      return boost::make_unique<asb_uci::type::ATR_ProcessingParametersType>().release();
    case uci::type::accessorType::aTR_ProcessingResultsType:
      return boost::make_unique<asb_uci::type::ATR_ProcessingResultsType>().release();
    case uci::type::accessorType::augmentationProcessingParametersType:
      return boost::make_unique<asb_uci::type::AugmentationProcessingParametersType>().release();
    case uci::type::accessorType::authorizationID_Type:
      return boost::make_unique<asb_uci::type::AuthorizationID_Type>().release();
    case uci::type::accessorType::authorizationMDT:
      return boost::make_unique<asb_uci::type::AuthorizationMDT>().release();
    case uci::type::accessorType::authorizationMT:
      return boost::make_unique<asb_uci::type::AuthorizationMT>().release();
    case uci::type::accessorType::autonomousPlanCommandType:
      return boost::make_unique<asb_uci::type::AutonomousPlanCommandType>().release();
    case uci::type::accessorType::autonomousPlanningActionID_Type:
      return boost::make_unique<asb_uci::type::AutonomousPlanningActionID_Type>().release();
    case uci::type::accessorType::autonomousPlanningConstrainingPlansType:
      return boost::make_unique<asb_uci::type::AutonomousPlanningConstrainingPlansType>().release();
    case uci::type::accessorType::autonomousPlanningOtherSystemConstrainingPlansType:
      return boost::make_unique<asb_uci::type::AutonomousPlanningOtherSystemConstrainingPlansType>().release();
    case uci::type::accessorType::azElRequiredReferenceType:
      return boost::make_unique<asb_uci::type::AzElRequiredReferenceType>().release();
    case uci::type::accessorType::baseEOB_RecordType:
      return boost::make_unique<asb_uci::type::BaseEOB_RecordType>().release();
    case uci::type::accessorType::beamID_Type:
      return boost::make_unique<asb_uci::type::BeamID_Type>().release();
    default:
      return nullptr;
  }
}

} // namespace util

} // namespace asb_uci

